{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/statistic/transaction/components/toDay.vue?vue&type=style&index=0&id=c36f0448&lang=scss&scoped=true","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/statistic/transaction/components/toDay.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/sass-loader/dist/cjs.js","mtime":1746465018452},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci51cCwKLmVsLWljb24tY2FyZXQtdG9wLAouY29udGVudC1pcyB7CiAgY29sb3I6ICNmNTIyMmQ7CiAgZm9udC1zaXplOiAxMnB4OwogIG9wYWNpdHk6IDEgIWltcG9ydGFudDsKCiAgJi5kb3duIHsKICAgIGNvbG9yOiAjMzljMTViOwogIH0KfQoKLmRvd24sCi5lbC1pY29uLWNhcmV0LWJvdHRvbSAuY29udGVudC1pcyB7CiAgZm9udC1zaXplOiAxMnB4Owp9CgouZWwtaWNvbi1jYXJldC1ib3R0b20gewogIGNvbG9yOiAjMzljMTViOwp9CgouYnIgewogIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTsKfQoKLnRvRGF5IHsKICB3aWR0aDogNDklOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKCiAgJi10aXRsZSB7CiAgICBmb250LXNpemU6IDE0cHg7CiAgfQoKICAmLW51bWJlciB7CiAgICBmb250LXNpemU6IDIwcHg7CiAgfQoKICAmLXRpbWUgewogICAgZm9udC1zaXplOiAxMnB4OwogICAgY29sb3I6ICM4YzhjOGM7CiAgICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgfQp9CgoudGl0bGUgewogIGZvbnQtc2l6ZTogMTZweDsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogNTAwOwp9CgoucHJpY2UgewogIGkgewogICAgZm9udC1zdHlsZTogbm9ybWFsOwogICAgZm9udC1zaXplOiAyMXB4OwogICAgY29sb3I6ICMwMDA7CiAgfQp9Cg=="},{"version":3,"sources":["toDay.vue"],"names":[],"mappings":";AAkcA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"toDay.vue","sourceRoot":"src/pages/statistic/transaction/components","sourcesContent":["<template>\n  <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt\">\n    <el-row>\n      <el-col v-if=\"statisticsData\" class=\"br\" v-bind=\"grid\">\n        <div>\n          <h4 class=\"title mb15\">今日订单金额</h4>\n          <div class=\"price\">\n            ￥<i>{{ statisticsData.left.series[0].money }}</i>\n          </div>\n        </div>\n        <echarts-new\n          v-if=\"optionData\"\n          key=\"1\"\n          ref=\"visitChart\"\n          height=\"100%\"\n          width=\"100%\"\n          :option-data=\"optionData\"\n          :styles=\"style\"\n        />\n      </el-col>\n      <el-col v-if=\"statisticsData\" v-bind=\"grid\">\n        <div class=\"pl25\">\n          <div class=\"toDay\">\n            <span class=\"toDay-title spBlock mb10\">今日订单数</span>\n            <span class=\"toDay-number spBlock mb10\">{{ statisticsData.right.today.series[0].now_money }}</span>\n            <span class=\"toDay-time spBlock\">昨日：{{ statisticsData.right.today.series[0].last_money }}</span>\n            <span class=\"toDay-time spBlock\"\n              >日环比：\n              <i class=\"content-is\" :class=\"Number(statisticsData.right.today.series[0].rate) >= 0 ? 'up' : 'down'\"\n                >{{ Math.floor(statisticsData.right.today.series[0].rate) }}%</i\n              >\n              <i\n                :style=\"{ color: Number(statisticsData.right.today.series[0].rate) >= 0 ? '#F5222D' : '#39C15B' }\"\n                :class=\"[\n                  Number(statisticsData.right.today.series[0].rate) >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom',\n                ]\"\n              />\n            </span>\n            <echarts-new\n              v-if=\"optionTodatOrder\"\n              key=\"2\"\n              ref=\"visitChart\"\n              height=\"100%\"\n              width=\"100%\"\n              :option-data=\"optionTodatOrder\"\n              :styles=\"styleToday\"\n            />\n            <span class=\"toDay-title spBlock mb10\">本月订单数</span>\n            <span class=\"toDay-number spBlock mb10\">{{ statisticsData.right.month[0].now_money }}</span>\n            <span class=\"toDay-time spBlock\">上月：{{ statisticsData.right.month[0].last_money }}</span>\n            <span class=\"toDay-time spBlock\"\n              >月环比：\n              <i class=\"content-is\" :class=\"Number(statisticsData.right.month[0].rate) >= 0 ? 'up' : 'down'\"\n                >{{ Math.floor(statisticsData.right.month[0].rate) }}%</i\n              >\n              <i\n                :style=\"{ color: Number(statisticsData.right.month[0].rate) >= 0 ? '#F5222D' : '#39C15B' }\"\n                :class=\"[\n                  Number(statisticsData.right.month[0].rate) >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom',\n                ]\"\n              />\n            </span>\n          </div>\n          <div class=\"toDay\" style=\"border: none\">\n            <span class=\"toDay-title spBlock mb10\">今日支付人数</span>\n            <span class=\"toDay-number spBlock mb10\">{{ statisticsData.right.today.series[1].now_money }}</span>\n            <span class=\"toDay-time spBlock\">昨日：{{ statisticsData.right.today.series[1].last_money }}</span>\n            <span class=\"toDay-time spBlock\"\n              >日环比：\n              <i class=\"content-is\" :class=\"Number(statisticsData.right.today.series[1].rate) >= 0 ? 'up' : 'down'\"\n                >{{ Math.floor(statisticsData.right.today.series[1].rate) }}%</i\n              >\n              <i\n                :style=\"{ color: Number(statisticsData.right.today.series[1].rate) >= 0 ? '#F5222D' : '#39C15B' }\"\n                :class=\"[\n                  Number(statisticsData.right.today.series[1].rate) >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom',\n                ]\"\n              />\n            </span>\n            <echarts-new\n              v-if=\"optionOrderUser\"\n              key=\"3\"\n              ref=\"visitChart\"\n              height=\"100%\"\n              width=\"100%\"\n              :option-data=\"optionOrderUser\"\n              :styles=\"styleToday\"\n            />\n            <span class=\"toDay-title spBlock mb10\">本月支付人数</span>\n            <span class=\"toDay-number spBlock mb10\">{{ statisticsData.right.month[1].now_money }}</span>\n            <span class=\"toDay-time spBlock\">上月：{{ statisticsData.right.month[1].last_money }}</span>\n            <span class=\"toDay-time spBlock\"\n              >月环比：\n              <i class=\"content-is\" :class=\"Number(statisticsData.right.month[1].rate) >= 0 ? 'up' : 'down'\"\n                >{{ Math.floor(statisticsData.right.month[1].rate) }}%</i\n              >\n              <i\n                :style=\"{ color: Number(statisticsData.right.month[1].rate) >= 0 ? '#F5222D' : '#39C15B' }\"\n                :class=\"[\n                  Number(statisticsData.right.month[1].rate) >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom',\n                ]\"\n              />\n            </span>\n          </div>\n        </div>\n      </el-col>\n    </el-row>\n  </el-card>\n</template>\n\n<script>\nimport { statisticTopTradeApi } from '@/api/statistic';\nimport echartsNew from '@/components/echartsNew/index';\nimport echarts from 'echarts';\nexport default {\n  name: 'ToDay',\n  components: {\n    echartsNew,\n  },\n  data() {\n    return {\n      style: {\n        height: '200px',\n      },\n      styleToday: {\n        height: '130px',\n      },\n      legendData: ['今天', '昨天'],\n      seriesData: [],\n      timer: [],\n      grid: {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      statisticsData: {},\n      optionTodatOrder: {}, // 今日订单数\n      orderData: {},\n      orderUserData: {},\n      optionData: {}, // 今日交易数据\n      listLoading: false,\n      optionDataOrder: {},\n      optionOrderUser: {}, // 今日支付人数\n    };\n  },\n  beforeDestroy() {\n    if (this.visitChart) {\n      this.visitChart.dispose();\n      this.visitChart = null;\n    }\n  },\n  mounted() {\n    this.getList();\n    // this.getOrder()\n    // this.getOrderUser()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true;\n      statisticTopTradeApi({ time: 'today' })\n        .then((res) => {\n          // 今日交易数据\n          this.statisticsData = res.data;\n          const leftOrder = res.data.left;\n          const leftToday = [];\n          const leftLegendData = leftOrder.x;\n          Object.keys(leftOrder.series[0].value).forEach((key) => {\n            leftToday.push(Number(leftOrder.series[0].value[key]));\n          });\n          const leftYesterday = [];\n          Object.keys(leftOrder.series[1].value).forEach((key) => {\n            leftYesterday.push(Number(leftOrder.series[1].value[key]));\n          });\n          const seriesData = [\n            {\n              name: '今天',\n              type: 'line',\n              areaStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: '#5B8FF9',\n                    },\n                    {\n                      offset: 0.5,\n                      color: '#fff',\n                    },\n                    {\n                      offset: 1,\n                      color: '#fff',\n                    },\n                  ]),\n                },\n              },\n              itemStyle: {\n                normal: {\n                  color: '#5B8FF9',\n                  lineStyle: {\n                    color: '#5B8FF9',\n                  },\n                },\n              },\n              data: leftToday,\n              symbol: 'none',\n              smooth: true,\n            },\n            {\n              name: '昨天',\n              type: 'line',\n              areaStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: '#BFBFBF',\n                    },\n                    {\n                      offset: 0.5,\n                      color: '#fff',\n                    },\n                    {\n                      offset: 1,\n                      color: '#fff',\n                    },\n                  ]),\n                },\n              },\n              itemStyle: {\n                normal: {\n                  color: '#D9D9D9',\n                  lineStyle: {\n                    color: '#D9D9D9',\n                  },\n                },\n              },\n              data: leftYesterday,\n              symbol: 'none',\n              smooth: true,\n            },\n          ];\n          this.optionData = {\n            tooltip: {\n              trigger: 'axis',\n            },\n            legend: {\n              x: '1px',\n              y: '10px',\n              data: ['今天', '昨天'],\n            },\n            grid: {\n              left: '0%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true,\n            },\n            xAxis: [\n              {\n                boundaryGap: false,\n                data: leftLegendData,\n                axisLine: {\n                  show: false,\n                },\n                show: false,\n              },\n            ],\n            yAxis: {\n              show: false,\n            },\n            series: seriesData,\n          };\n\n          // 今日订单数\n          const rightOrder = res.data.right;\n          const rightLegendData = rightOrder.today.x;\n          const rightTodayOrder = [];\n          Object.keys(rightOrder.today.series[0].value).forEach((key) => {\n            rightTodayOrder.push(Number(rightOrder.today.series[0].value[key]));\n          });\n          const rightSeriesDataOrder = [\n            {\n              name: '今天',\n              type: 'line',\n              areaStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: '#5B8FF9',\n                    },\n                    {\n                      offset: 0.5,\n                      color: '#fff',\n                    },\n                    {\n                      offset: 1,\n                      color: '#fff',\n                    },\n                  ]),\n                },\n              },\n              itemStyle: {\n                normal: {\n                  color: '#5B8FF9',\n                  lineStyle: {\n                    color: '#5B8FF9',\n                  },\n                },\n              },\n              data: rightTodayOrder,\n              symbol: 'none',\n              smooth: true,\n            },\n          ];\n          this.optionTodatOrder = {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  backgroundColor: '#6a7985',\n                },\n              },\n            },\n            legend: {\n              x: '1px',\n              y: '10px',\n              data: ['今天'],\n            },\n            grid: {\n              left: '0%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true,\n            },\n            axisLine: {\n              show: false,\n            },\n            xAxis: [\n              {\n                type: 'category',\n                boundaryGap: false,\n                data: rightLegendData,\n                axisLine: {\n                  show: false,\n                },\n                show: false,\n              },\n            ],\n            yAxis: {\n              show: false,\n            },\n            series: rightSeriesDataOrder,\n          };\n\n          // 今日支付人数\n          const rightTodayPay = [];\n          Object.keys(rightOrder.today.series[1].value).forEach((key) => {\n            rightTodayPay.push(Number(rightOrder.today.series[1].value[key]));\n          });\n          const seriesDataPay = [\n            {\n              name: '今天',\n              type: 'line',\n              areaStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: '#5B8FF9',\n                    },\n                    {\n                      offset: 0.5,\n                      color: '#fff',\n                    },\n                    {\n                      offset: 1,\n                      color: '#fff',\n                    },\n                  ]),\n                },\n              },\n              itemStyle: {\n                normal: {\n                  color: '#5B8FF9',\n                  lineStyle: {\n                    color: '#5B8FF9',\n                  },\n                },\n              },\n              data: rightTodayPay,\n              symbol: 'none',\n              smooth: true,\n            },\n          ];\n          this.optionOrderUser = {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  backgroundColor: '#6a7985',\n                },\n              },\n            },\n            legend: {\n              x: '1px',\n              y: '10px',\n              data: ['今天'],\n            },\n            grid: {\n              left: '0%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true,\n            },\n            axisLine: {\n              show: false,\n            },\n            xAxis: [\n              {\n                type: 'category',\n                boundaryGap: false,\n                data: leftLegendData,\n                axisLine: {\n                  show: false,\n                },\n                show: false,\n              },\n            ],\n            yAxis: {\n              show: false,\n            },\n            series: seriesDataPay,\n          };\n        })\n        .catch((res) => {\n          this.listLoading = false;\n          this.$message.error(res.msg);\n        });\n    },\n    getOrder() {},\n    getOrderUser() {},\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.up,\n.el-icon-caret-top,\n.content-is {\n  color: #f5222d;\n  font-size: 12px;\n  opacity: 1 !important;\n\n  &.down {\n    color: #39c15b;\n  }\n}\n\n.down,\n.el-icon-caret-bottom .content-is {\n  font-size: 12px;\n}\n\n.el-icon-caret-bottom {\n  color: #39c15b;\n}\n\n.br {\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.toDay {\n  width: 49%;\n  display: inline-block;\n\n  &-title {\n    font-size: 14px;\n  }\n\n  &-number {\n    font-size: 20px;\n  }\n\n  &-time {\n    font-size: 12px;\n    color: #8c8c8c;\n    margin-bottom: 5px;\n  }\n}\n\n.title {\n  font-size: 16px;\n  color: #000000;\n  font-weight: 500;\n}\n\n.price {\n  i {\n    font-style: normal;\n    font-size: 21px;\n    color: #000;\n  }\n}\n</style>\n"]}]}