{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/statistic/order/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/statistic/order/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBjYXJkc0RhdGEgZnJvbSAnQC9jb21wb25lbnRzL2NhcmRzL2NhcmRzJzsKaW1wb3J0IGVjaGFydHNOZXcgZnJvbSAnQC9jb21wb25lbnRzL2VjaGFydHNOZXcvaW5kZXgnOwppbXBvcnQgeyBnZXRCYXNpYywgZ2V0VHJlbmQsIGdldENoYW5uZWwsIGdldFR5cGUgfSBmcm9tICdAL2FwaS9zdGF0aXN0aWMnOwppbXBvcnQgeyBmb3JtYXREYXRlIH0gZnJvbSAnQC91dGlscy92YWxpZGF0ZSc7CmltcG9ydCBlY2hhcnRzRnJvbSBmcm9tICdAL2NvbXBvbmVudHMvZWNoYXJ0cy9pbmRleCc7CmltcG9ydCB0aW1lT3B0aW9ucyBmcm9tICdAL2xpYnMvdGltZU9wdGlvbnMnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdpbmRleCcsCiAgY29tcG9uZW50czogeyBjYXJkc0RhdGEsIGVjaGFydHNOZXcsIGVjaGFydHNGcm9tIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWVWYWw6IFtdLAogICAgICBzdHlsZTogeyBoZWlnaHQ6ICc0MDBweCcgfSwKICAgICAgaW5mb0xpc3Q6IHt9LAogICAgICBpbmZvTGlzdDI6IHt9LAogICAgICBlY2hhcnRMZWZ0OiB0cnVlLAogICAgICBlY2hhcnRSaWdodDogZmFsc2UsCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBsb2FkaW5nMjogZmFsc2UsCiAgICAgIGZvcm1WYWxpZGF0ZTogewogICAgICAgIHRpbWU6ICcnLAogICAgICB9LAogICAgICBjYXJkTGlzdHM6IFsKICAgICAgICB7CiAgICAgICAgICBjb2w6IDYsCiAgICAgICAgICBjb3VudDogMCwKICAgICAgICAgIG5hbWU6ICforqLljZXph48nLAogICAgICAgICAgY2xhc3NOYW1lOiAnaWNvbmRpbmdkYW5saWFuZycsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBjb2w6IDYsCiAgICAgICAgICBjb3VudDogMCwKICAgICAgICAgIG5hbWU6ICforqLljZXplIDllK7pop0nLAogICAgICAgICAgY2xhc3NOYW1lOiAnaWNvbmRpbmdkYW5qaW5lJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGNvbDogNiwKICAgICAgICAgIGNvdW50OiAwLAogICAgICAgICAgbmFtZTogJ+mAgOasvuiuouWNleaVsCcsCiAgICAgICAgICBjbGFzc05hbWU6ICdpY29udHVpa3VhbmRpbmdkYW5saWFuZycsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBjb2w6IDYsCiAgICAgICAgICBjb3VudDogMCwKICAgICAgICAgIG5hbWU6ICfpgIDmrL7ph5Hpop0nLAogICAgICAgICAgY2xhc3NOYW1lOiAnaWNvbnR1aWt1YW5qaW5lJywKICAgICAgICB9LAogICAgICBdLAogICAgICBvcHRpb25EYXRhOiB7fSwKICAgICAgc3BpblNob3c6IGZhbHNlLAogICAgICB0YWJMaXN0OiBbXSwKICAgICAgdGFiTGlzdDI6IFtdLAogICAgICBwaWNrZXJPcHRpb25zOiB0aW1lT3B0aW9ucywKICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgY29uc3QgZW5kID0gbmV3IERhdGUoKTsKICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoKTsKICAgIHN0YXJ0LnNldFRpbWUoc3RhcnQuc2V0VGltZShuZXcgRGF0ZShuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCksIG5ldyBEYXRlKCkuZ2V0TW9udGgoKSwgbmV3IERhdGUoKS5nZXREYXRlKCkgLSAyOSkpKTsKICAgIHRoaXMudGltZVZhbCA9IFtzdGFydCwgZW5kXTsKICAgIHRoaXMuZm9ybVZhbGlkYXRlLnRpbWUgPSBmb3JtYXREYXRlKHN0YXJ0LCAneXl5eS9NTS9kZCcpICsgJy0nICsgZm9ybWF0RGF0ZShlbmQsICd5eXl5L01NL2RkJyk7CiAgICB0aGlzLm9uSW5pdCgpOwogIH0sCiAgbWV0aG9kczogewogICAgb25Jbml0KCkgewogICAgICB0aGlzLmdldEJhc2ljKCk7CiAgICAgIHRoaXMuZ2V0VHJlbmQoKTsKICAgICAgdGhpcy5nZXRDaGFubmVsKCk7CiAgICAgIHRoaXMuZ2V0VHlwZSgpOwogICAgfSwKICAgIG9uU2VsZWN0RGF0ZShlKSB7CiAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLnRpbWUgPSBlOwogICAgICB0aGlzLm9uSW5pdCgpOwogICAgfSwKICAgIHRpbWVHKGRkKSB7CiAgICAgIHZhciBkID0gbmV3IERhdGUoZGQpOwogICAgICB2YXIgZGF0ZXRpbWUgPQogICAgICAgIGQuZ2V0RnVsbFllYXIoKSArCiAgICAgICAgJy0nICsKICAgICAgICAoZC5nZXRNb250aCgpICsgMSkgKwogICAgICAgICctJyArCiAgICAgICAgZC5nZXREYXRlKCkgKwogICAgICAgICcgJyArCiAgICAgICAgZC5nZXRIb3VycygpICsKICAgICAgICAnOicgKwogICAgICAgIGQuZ2V0TWludXRlcygpICsKICAgICAgICAnOicgKwogICAgICAgIGQuZ2V0U2Vjb25kcygpOwogICAgICByZXR1cm4gZGF0ZXRpbWU7CiAgICB9LAogICAgZ2V0QmFzaWMoKSB7CiAgICAgIGdldEJhc2ljKHRoaXMuZm9ybVZhbGlkYXRlKS50aGVuKChyZXMpID0+IHsKICAgICAgICBsZXQgYXJyID0gWydwYXlfY291bnQnLCAncGF5X3ByaWNlJywgJ3JlZnVuZF9jb3VudCcsICdyZWZ1bmRfcHJpY2UnXTsKICAgICAgICB0aGlzLmNhcmRMaXN0cy5tYXAoKGksIGluZGV4KSA9PiB7CiAgICAgICAgICBpLmNvdW50ID0gcmVzLmRhdGFbYXJyW2luZGV4XV07CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldENoYW5uZWwoKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIGdldENoYW5uZWwodGhpcy5mb3JtVmFsaWRhdGUpLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMuaW5mb0xpc3QgPSByZXMuZGF0YTsKICAgICAgICB0aGlzLnRhYkxpc3QgPSByZXMuZGF0YS5saXN0OwogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRUeXBlKCkgewogICAgICB0aGlzLmxvYWRpbmcyID0gdHJ1ZTsKICAgICAgZ2V0VHlwZSh0aGlzLmZvcm1WYWxpZGF0ZSkudGhlbigocmVzKSA9PiB7CiAgICAgICAgdGhpcy5pbmZvTGlzdDIgPSByZXMuZGF0YTsKICAgICAgICB0aGlzLnRhYkxpc3QyID0gcmVzLmRhdGEubGlzdDsKICAgICAgICB0aGlzLmxvYWRpbmcyID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIHNlbGVjdENoYW5nZShlKSB7fSwKICAgIC8vIOWFt+S9k+aXpeacnwogICAgb25jaGFuZ2VUaW1lKGUpIHsKICAgICAgdGhpcy50aW1lVmFsID0gZTsKICAgICAgdGhpcy5mb3JtVmFsaWRhdGUudGltZSA9IHRoaXMudGltZVZhbCA/IHRoaXMudGltZVZhbC5qb2luKCctJykgOiAnJzsKICAgICAgdGhpcy5uYW1lID0gdGhpcy5mb3JtVmFsaWRhdGUudGltZTsKICAgICAgdGhpcy5nZXRCYXNpYygpOwogICAgICB0aGlzLmdldFRyZW5kKCk7CiAgICAgIHRoaXMuZ2V0Q2hhbm5lbCgpOwogICAgICB0aGlzLmdldFR5cGUoKTsKICAgIH0sCiAgICAvLyDnu5/orqHlm74KICAgIGdldFRyZW5kKCkgewogICAgICB0aGlzLnNwaW5TaG93ID0gdHJ1ZTsKICAgICAgZ2V0VHJlbmQodGhpcy5mb3JtVmFsaWRhdGUpCiAgICAgICAgLnRoZW4oYXN5bmMgKHJlcykgPT4gewogICAgICAgICAgbGV0IGxlZ2VuZCA9IHJlcy5kYXRhLnNlcmllcy5tYXAoKGl0ZW0pID0+IHsKICAgICAgICAgICAgcmV0dXJuIGl0ZW0ubmFtZTsKICAgICAgICAgIH0pOwogICAgICAgICAgbGV0IHhBeGlzID0gcmVzLmRhdGEueEF4aXM7CiAgICAgICAgICBsZXQgY29sID0gWycjNUI4RkY5JywgJyM1QUQ4QTYnLCAnI0ZGQUIyQicsICcjNUQ3MDkyJ107CiAgICAgICAgICBsZXQgc2VyaWVzID0gW107CiAgICAgICAgICByZXMuZGF0YS5zZXJpZXMubWFwKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgICAgICBzZXJpZXMucHVzaCh7CiAgICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lLAogICAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgICBkYXRhOiBpdGVtLmRhdGEsCiAgICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgICAgY29sb3I6IGNvbFtpbmRleF0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgc21vb3RoOiAwLAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy5vcHRpb25EYXRhID0gewogICAgICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgICAgICB0eXBlOiAnY3Jvc3MnLAogICAgICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzZhNzk4NScsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICAgIHg6ICdjZW50ZXInLAogICAgICAgICAgICAgIGRhdGE6IGxlZ2VuZCwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZ3JpZDogewogICAgICAgICAgICAgIGxlZnQ6ICczJScsCiAgICAgICAgICAgICAgcmlnaHQ6ICc0JScsCiAgICAgICAgICAgICAgYm90dG9tOiAnMyUnLAogICAgICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdG9vbGJveDogewogICAgICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgICAgIHNhdmVBc0ltYWdlOiB7fSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICB4QXhpczogewogICAgICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICAgICAgYm91bmRhcnlHYXA6IHRydWUsCiAgICAgICAgICAgICAgLy8gYXhpc1RpY2s6ewogICAgICAgICAgICAgIC8vICAgICBzaG93OmZhbHNlCiAgICAgICAgICAgICAgLy8gfSwKICAgICAgICAgICAgICAvLyBheGlzTGluZTp7CiAgICAgICAgICAgICAgLy8gICAgIHNob3c6ZmFsc2UKICAgICAgICAgICAgICAvLyB9LAogICAgICAgICAgICAgIC8vIHNwbGl0TGluZTogewogICAgICAgICAgICAgIC8vICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICAgIC8vIH0sCiAgICAgICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgICAgICBpbnRlcnZhbDogMCwKICAgICAgICAgICAgICAgIHJvdGF0ZTogNDAsCiAgICAgICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMDAwMDAwJywKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBkYXRhOiB4QXhpcywKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeUF4aXM6IHsKICAgICAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGF4aXNUaWNrOiB7CiAgICAgICAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzdGOEI5QycsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI0Y1RjdGOScsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNlcmllczogc2VyaWVzLAogICAgICAgICAgfTsKICAgICAgICAgIHRoaXMuc3BpblNob3cgPSBmYWxzZTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgdGhpcy5zcGluU2hvdyA9IGZhbHNlOwogICAgICAgIH0pOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAgfile":"index.vue","sourceRoot":"src/pages/statistic/order","sourcesContent":["<template>\n  <div v-loading=\"spinShow\">\n    <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mb-16\">\n      <div class=\"acea-row row-middle\">\n        <span class=\"label_text\">时间选择：</span>\n        <el-date-picker\n          clearable\n          v-model=\"timeVal\"\n          type=\"daterange\"\n          :editable=\"false\"\n          @change=\"onchangeTime\"\n          format=\"yyyy/MM/dd\"\n          value-format=\"yyyy/MM/dd\"\n          start-placeholder=\"开始日期\"\n          end-placeholder=\"结束日期\"\n          :picker-options=\"pickerOptions\"\n          style=\"width: 250px\"\n          class=\"mr20\"\n        ></el-date-picker>\n      </div>\n    </el-card>\n    <cards-data :cardLists=\"cardLists\" v-if=\"cardLists.length >= 0\"></cards-data>\n    <el-card class=\"ivu-mb-16\" :bordered=\"false\" shadow=\"never\">\n      <h4 class=\"statics-header-title\">营业趋势</h4>\n      <echarts-new :option-data=\"optionData\" :styles=\"style\" height=\"100%\" width=\"100%\" v-if=\"optionData\"></echarts-new>\n    </el-card>\n    <div class=\"code-row-bg\">\n      <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt\">\n        <div class=\"acea-row row-between-wrapper\">\n          <h4 class=\"statics-header-title\">订单来源分析</h4>\n          <div class=\"change-style\" @click=\"echartLeft = !echartLeft\">切换样式</div>\n        </div>\n        <div class=\"ech-box\">\n          <echarts-from v-if=\"echartLeft\" ref=\"visitChart\" :infoList=\"infoList\" echartsTitle=\"circle\"></echarts-from>\n          <el-table\n            v-show=\"!echartLeft\"\n            ref=\"selection\"\n            :data=\"tabList\"\n            v-loading=\"loading\"\n            empty-text=\"暂无数据\"\n            highlight-current-row\n          >\n            <el-table-column type=\"index\" label=\"序号\" width=\"50\"> </el-table-column>\n            <el-table-column label=\"来源\" min-width=\"80\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.name }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"订单数\" min-width=\"130\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.value }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"占比率\" min-width=\"130\">\n              <template slot-scope=\"scope\">\n                <div class=\"percent-box\">\n                  <div class=\"line\">\n                    <div class=\"bg\"></div>\n                    <div class=\"percent\" :style=\"'width:' + scope.row.percent + '%;'\"></div>\n                  </div>\n                  <div class=\"num\">{{ scope.row.percent }}%</div>\n                </div>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n      </el-card>\n      <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt\">\n        <div class=\"acea-row row-between-wrapper\">\n          <h4 class=\"statics-header-title\">订单类型分析</h4>\n          <div class=\"change-style\" @click=\"echartRight = !echartRight\">切换样式</div>\n        </div>\n        <div class=\"ech-box\">\n          <echarts-from v-if=\"echartRight\" ref=\"visitChart\" :infoList=\"infoList2\" echartsTitle=\"circle\"></echarts-from>\n          <el-table\n            v-show=\"!echartRight\"\n            ref=\"selection\"\n            :data=\"tabList2\"\n            v-loading=\"loading2\"\n            empty-text=\"暂无数据\"\n            highlight-current-row\n          >\n            <el-table-column type=\"index\" label=\"序号\" width=\"50\"> </el-table-column>\n            <el-table-column label=\"来源\" min-width=\"80\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.name }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"金额\" min-width=\"130\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.value }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"占比率\" min-width=\"130\">\n              <template slot-scope=\"scope\">\n                <div class=\"percent-box\">\n                  <div class=\"line\">\n                    <div class=\"bg\"></div>\n                    <div class=\"percent\" :style=\"'width:' + scope.row.percent + '%;'\"></div>\n                  </div>\n                  <div class=\"num\">{{ scope.row.percent }}%</div>\n                </div>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport cardsData from '@/components/cards/cards';\nimport echartsNew from '@/components/echartsNew/index';\nimport { getBasic, getTrend, getChannel, getType } from '@/api/statistic';\nimport { formatDate } from '@/utils/validate';\nimport echartsFrom from '@/components/echarts/index';\nimport timeOptions from '@/libs/timeOptions';\n\nexport default {\n  name: 'index',\n  components: { cardsData, echartsNew, echartsFrom },\n  data() {\n    return {\n      timeVal: [],\n      style: { height: '400px' },\n      infoList: {},\n      infoList2: {},\n      echartLeft: true,\n      echartRight: false,\n      loading: false,\n      loading2: false,\n      formValidate: {\n        time: '',\n      },\n      cardLists: [\n        {\n          col: 6,\n          count: 0,\n          name: '订单量',\n          className: 'icondingdanliang',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '订单销售额',\n          className: 'icondingdanjine',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '退款订单数',\n          className: 'icontuikuandingdanliang',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '退款金额',\n          className: 'icontuikuanjine',\n        },\n      ],\n      optionData: {},\n      spinShow: false,\n      tabList: [],\n      tabList2: [],\n      pickerOptions: timeOptions,\n    };\n  },\n  created() {\n    const end = new Date();\n    const start = new Date();\n    start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 29)));\n    this.timeVal = [start, end];\n    this.formValidate.time = formatDate(start, 'yyyy/MM/dd') + '-' + formatDate(end, 'yyyy/MM/dd');\n    this.onInit();\n  },\n  methods: {\n    onInit() {\n      this.getBasic();\n      this.getTrend();\n      this.getChannel();\n      this.getType();\n    },\n    onSelectDate(e) {\n      this.formValidate.time = e;\n      this.onInit();\n    },\n    timeG(dd) {\n      var d = new Date(dd);\n      var datetime =\n        d.getFullYear() +\n        '-' +\n        (d.getMonth() + 1) +\n        '-' +\n        d.getDate() +\n        ' ' +\n        d.getHours() +\n        ':' +\n        d.getMinutes() +\n        ':' +\n        d.getSeconds();\n      return datetime;\n    },\n    getBasic() {\n      getBasic(this.formValidate).then((res) => {\n        let arr = ['pay_count', 'pay_price', 'refund_count', 'refund_price'];\n        this.cardLists.map((i, index) => {\n          i.count = res.data[arr[index]];\n        });\n      });\n    },\n    getChannel() {\n      this.loading = true;\n      getChannel(this.formValidate).then((res) => {\n        this.infoList = res.data;\n        this.tabList = res.data.list;\n        this.loading = false;\n      });\n    },\n    getType() {\n      this.loading2 = true;\n      getType(this.formValidate).then((res) => {\n        this.infoList2 = res.data;\n        this.tabList2 = res.data.list;\n        this.loading2 = false;\n      });\n    },\n    selectChange(e) {},\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.formValidate.time = this.timeVal ? this.timeVal.join('-') : '';\n      this.name = this.formValidate.time;\n      this.getBasic();\n      this.getTrend();\n      this.getChannel();\n      this.getType();\n    },\n    // 统计图\n    getTrend() {\n      this.spinShow = true;\n      getTrend(this.formValidate)\n        .then(async (res) => {\n          let legend = res.data.series.map((item) => {\n            return item.name;\n          });\n          let xAxis = res.data.xAxis;\n          let col = ['#5B8FF9', '#5AD8A6', '#FFAB2B', '#5D7092'];\n          let series = [];\n          res.data.series.map((item, index) => {\n            series.push({\n              name: item.name,\n              type: 'line',\n              data: item.data,\n              itemStyle: {\n                normal: {\n                  color: col[index],\n                },\n              },\n              smooth: 0,\n            });\n          });\n          this.optionData = {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  backgroundColor: '#6a7985',\n                },\n              },\n            },\n            legend: {\n              x: 'center',\n              data: legend,\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true,\n            },\n            toolbox: {\n              feature: {\n                saveAsImage: {},\n              },\n            },\n            xAxis: {\n              type: 'category',\n              boundaryGap: true,\n              // axisTick:{\n              //     show:false\n              // },\n              // axisLine:{\n              //     show:false\n              // },\n              // splitLine: {\n              //     show: false\n              // },\n              axisLabel: {\n                interval: 0,\n                rotate: 40,\n                textStyle: {\n                  color: '#000000',\n                },\n              },\n              data: xAxis,\n            },\n            yAxis: {\n              type: 'value',\n              axisLine: {\n                show: false,\n              },\n              axisTick: {\n                show: false,\n              },\n              axisLabel: {\n                textStyle: {\n                  color: '#7F8B9C',\n                },\n              },\n              splitLine: {\n                show: true,\n                lineStyle: {\n                  color: '#F5F7F9',\n                },\n              },\n            },\n            series: series,\n          };\n          this.spinShow = false;\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n          this.spinShow = false;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.cl {\n  margin-right: 20px;\n}\n.code-row-bg {\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n}\n.code-row-bg .ivu-mt {\n  width: calc(50% - 10px);\n}\n.ech-box {\n  margin-top: 10px;\n}\n.change-style {\n  border: 1px solid #ccc;\n  border-radius: 15px;\n  padding: 0px 10px;\n  cursor: pointer;\n}\n.percent-box {\n  display: flex;\n  align-items: center;\n  padding-right: 10px;\n}\n.line {\n  width: 100%;\n  position: relative;\n}\n.bg {\n  position: absolute;\n  width: 100%;\n  height: 8px;\n  border-radius: 8px;\n  background-color: #f2f2f2;\n}\n.percent {\n  position: absolute;\n  border-radius: 5px;\n  height: 8px;\n  background-color: var(--prev-color-primary);\n  z-index: 9999;\n}\n.num {\n  white-space: nowrap;\n  margin: 0 10px;\n  width: 20px;\n}\n</style>\n"]}]}