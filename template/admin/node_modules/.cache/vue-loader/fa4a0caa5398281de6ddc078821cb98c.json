{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/components/uploadVideo2/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/components/uploadVideo2/index.vue","mtime":1719468580000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IHVwbG9hZEJ5UGllY2VzIH0gZnJvbSAnQC91dGlscy91cGxvYWQnOyAvL+W8leWFpXVwbG9hZEJ5UGllY2Vz5pa55rOVCmltcG9ydCB7IHByb2R1Y3RHZXRUZW1wS2V5c0FwaSwgdXBsb2FkVHlwZSB9IGZyb20gJ0AvYXBpL3Byb2R1Y3QnOwppbXBvcnQgeyB1cGxvYWRWaWRlbyB9IGZyb20gJ0AvYXBpL3VwbG9hZFBpY3R1cmVzJwppbXBvcnQgU2V0dGluZyBmcm9tICdAL3NldHRpbmcnOwppbXBvcnQgeyBnZXRDb29raWVzIH0gZnJvbSAnQC9saWJzL3V0aWwnOwppbXBvcnQgeyBpc1ZpZGVvVXBsb2FkIH0gZnJvbSAnQC91dGlscyc7Ci8vIGltcG9ydCAiLi4vLi4vLi4vcHVibGljL1VFZGl0b3IvZGlhbG9ncy9pbnRlcm5hbCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndmlkZTExbycsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbGVVcmw6IFNldHRpbmcuYXBpQmFzZVVSTCArICcvZmlsZS91cGxvYWQnLAogICAgICB1cGxvYWQ6IHsKICAgICAgICB2aWRlb0luZzogZmFsc2UsIC8vIOaYr+WQpuaYvuekuui/m+W6puadoe+8mwogICAgICB9LAogICAgICBwcm9ncmVzczogMCwgLy8g6L+b5bqm5p2h6buY6K6kMAogICAgICB2aWRlb0xpbms6ICcnLAogICAgICBmb3JtVmFsaWRhdGU6IHsKICAgICAgICB2aWRlb19saW5rOiAnJywKICAgICAgfSwKICAgICAgdXBsb2FkX3R5cGU6ICcnLAogICAgICB1cGxvYWREYXRhOiB7fSwKICAgICAgaGVhZGVyOiB7fSwKICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy51cGxvYWRUeXBlKCk7CiAgICB0aGlzLmdldFRva2VuKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICB2aWRlb1NhdmVUb1VybChmaWxlKSB7CiAgICAgIGlmIChpc1ZpZGVvVXBsb2FkKGZpbGUpKQogICAgICAgIHVwbG9hZEJ5UGllY2VzKHsKICAgICAgICAgIGZpbGU6IGZpbGUsIC8vIOinhumikeWunuS9kwogICAgICAgICAgcGllY2VTaXplOiAzLCAvLyDliIbniYflpKflsI8KICAgICAgICAgIHN1Y2Nlc3M6IChkYXRhKSA9PiB7CiAgICAgICAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLnZpZGVvX2xpbmsgPSBkYXRhLmZpbGVfcGF0aDsKICAgICAgICAgICAgdGhpcy5wcm9ncmVzcyA9IDEwMDsKICAgICAgICAgIH0sCiAgICAgICAgICBlcnJvcjogKGUpID0+IHsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihlLm1zZyk7CiAgICAgICAgICB9LAogICAgICAgICAgdXBsb2FkaW5nOiAoY2h1bmssIGFsbENodW5rKSA9PiB7CiAgICAgICAgICAgIHRoaXMudmlkZW9JbmcgPSB0cnVlOwogICAgICAgICAgICBsZXQgc3QgPSBNYXRoLmZsb29yKChjaHVuayAvIGFsbENodW5rKSAqIDEwMCk7CiAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3MgPSBzdDsKICAgICAgICAgIH0sCiAgICAgICAgfSk7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICAvLyDliKDpmaTop4bpopHvvJsKICAgIGRlbFZpZGVvKCkgewogICAgICBsZXQgdGhhdCA9IHRoaXM7CiAgICAgIHRoYXQuJHNldCh0aGF0LmZvcm1WYWxpZGF0ZSwgJ3ZpZGVvX2xpbmsnLCAnJyk7CiAgICB9LAogICAgLy/ojrflj5bop4bpopHkuIrkvKDnsbvlnosKICAgIHVwbG9hZFR5cGUoKSB7CiAgICAgIC8vIHVwbG9hZFR5cGUoKS50aGVuKChyZXMpID0+IHsKICAgICAgLy8gICB0aGlzLnVwbG9hZF90eXBlID0gcmVzLmRhdGEudXBsb2FkX3R5cGU7CiAgICAgIC8vIH0pOwogICAgfSwKICAgIC8vIOS4iuS8oOaIkOWKnwogICAgaGFuZGxlU3VjY2VzcyhyZXMsIGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUudmlkZW9fbGluayA9IHJlcy5kYXRhLnNyYzsKICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgfQogICAgfSwKICAgIGdldFRva2VuKCkgewogICAgICB0aGlzLmhlYWRlclsnQXV0aG9yaS16YXRpb24nXSA9ICdCZWFyZXIgJyArIGdldENvb2tpZXMoJ3Rva2VuJyk7CiAgICB9LAogICAgYmVmb3JlVXBsb2FkKCkgewogICAgICB0aGlzLnVwbG9hZERhdGEgPSB7fTsKICAgICAgbGV0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJlc29sdmUodHJ1ZSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gcHJvbWlzZTsKICAgIH0sCiAgICB6aF91cGxvYWRGaWxlKCkgewogICAgICBpZiAodGhpcy52aWRlb0xpbmspIHsKICAgICAgICB0aGlzLmZvcm1WYWxpZGF0ZS52aWRlb19saW5rID0gdGhpcy52aWRlb0xpbms7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kcmVmcy5yZWZpZC5jbGljaygpOwogICAgICB9CiAgICB9LAogICAgemhfdXBsb2FkRmlsZV9jaGFuZ2UoZXZmaWxlKSB7CiAgICAgIGxldCB0aGF0ID0gdGhpczsKICAgICAgaWYgKGV2ZmlsZS50YXJnZXQuZmlsZXNbMF0udHlwZSAhPT0gJ3ZpZGVvL21wNCcpIHsKICAgICAgICByZXR1cm4gdGhhdC4kbWVzc2FnZS5lcnJvcign5Y+q6IO95LiK5LygbXA05paH5Lu2Jyk7CiAgICAgIH0KICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgZXZmaWxlLnRhcmdldC5maWxlc1swXSkKICAgICAgdXBsb2FkVmlkZW8oZm9ybURhdGEpCiAgICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PSAyMDApIHsKICAgICAgICAgICAgICB0aGF0LmZvcm1WYWxpZGF0ZS52aWRlb19saW5rID0gcmVzLmRhdGE7CiAgICAgICAgICAgICAgdGhhdC4kbWVzc2FnZS5zdWNjZXNzKCfop4bpopHkuIrkvKDmiJDlip8nKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0aGF0LiRtZXNzYWdlLmVycm9yKCLop4bpopHkuIrkvKDlpLHotKUiKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7CiAgICAgICAgICAgIHRoYXQuJG1lc3NhZ2UuZXJyb3IoZXJyKTsKICAgICAgICAgIH0pOwogICAgICAvLyBsZXQgdHlwZXMgPSB7CiAgICAgIC8vICAga2V5OiBldmZpbGUudGFyZ2V0LmZpbGVzWzBdLm5hbWUsCiAgICAgIC8vICAgY29udGVudFR5cGU6IGV2ZmlsZS50YXJnZXQuZmlsZXNbMF0udHlwZSwKICAgICAgLy8gfTsKICAgICAgLy8gcHJvZHVjdEdldFRlbXBLZXlzQXBpKHR5cGVzKS50aGVuKChyZXMpID0+IHsKICAgICAgLy8gICB0aGF0LiR2aWRlb0Nsb3VkCiAgICAgIC8vICAgICAudmlkZW9VcGxvYWQoewogICAgICAvLyAgICAgICB0eXBlOiByZXMuZGF0YS50eXBlLAogICAgICAvLyAgICAgICBldmZpbGU6IGV2ZmlsZSwKICAgICAgLy8gICAgICAgcmVzOiByZXMsCiAgICAgIC8vICAgICAgIHVwbG9hZGluZyhzdGF0dXMsIHByb2dyZXNzKSB7CiAgICAgIC8vICAgICAgICAgdGhhdC51cGxvYWQudmlkZW9JbmcgPSBzdGF0dXM7CiAgICAgIC8vICAgICAgIH0sCiAgICAgIC8vICAgICB9KQogICAgICAvLyAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAvLyAgICAgICB0aGF0LmZvcm1WYWxpZGF0ZS52aWRlb19saW5rID0gcmVzLnVybDsKICAgICAgLy8gICAgICAgdGhhdC4kbWVzc2FnZS5zdWNjZXNzKCfop4bpopHkuIrkvKDmiJDlip8nKTsKICAgICAgLy8gICAgIH0pCiAgICAgIC8vICAgICAuY2F0Y2goKHJlcykgPT4gewogICAgICAvLyAgICAgICB0aGF0LiRtZXNzYWdlLmVycm9yKHJlcyk7CiAgICAgIC8vICAgICB9KTsKICAgICAgLy8gfSk7CiAgICB9LAogICAgdXBsb2FkcygpIHsKICAgICAgdGhpcy4kZW1pdCgnZ2V0VmlkZW8nLCB0aGlzLmZvcm1WYWxpZGF0ZS52aWRlb19saW5rKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/components/uploadVideo2","sourcesContent":["<template>\n  <div>\n    <div class=\"mt20 ml20\">\n      <el-input class=\"perW35\" v-model=\"videoLink\" placeholder=\"请输入视频链接\" />\n      <input type=\"file\" ref=\"refid\" style=\"display: none\" @change=\"zh_uploadFile_change\" />\n      <el-button\n          v-if=\"upload_type !== '1' || videoLink\"\n          type=\"primary\"\n          icon=\"ios-cloud-upload-outline\"\n          class=\"ml10\"\n          @click=\"zh_uploadFile\"\n      >{{ videoLink ? '确认添加' : '上传视频' }}</el-button\n      >\n      <el-upload\n          v-if=\"upload_type === '1' && !videoLink\"\n          :show-file-list=\"false\"\n          :action=\"fileUrl\"\n          class=\"ml10\"\n          :before-upload=\"videoSaveToUrl\"\n          :data=\"uploadData\"\n          :headers=\"header\"\n          :multiple=\"true\"\n          style=\"display: inline-block\"\n          accept=\".mp4\"\n      >\n        <el-button type=\"primary\" icon=\"ios-cloud-upload-outline\">上传视频</el-button>\n      </el-upload>\n      <Progress :percent=\"progress\" :stroke-width=\"5\" v-if=\"upload.videoIng\" />\n      <div class=\"video-style\" v-if=\"formValidate.video_link\">\n        <video\n            style=\"width: 100%; height: 100% !important; border-radius: 10px\"\n            :src=\"formValidate.video_link\"\n            controls=\"controls\"\n        >\n          您的浏览器不支持 video 标签。\n        </video>\n        <div class=\"mark\"></div>\n        <i class=\"el-icon-delete iconv\" @click=\"delVideo\"></i>\n      </div>\n    </div>\n    <div class=\"mt50 ml20\">\n      <el-button type=\"primary\" @click=\"uploads\">确认</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { uploadByPieces } from '@/utils/upload'; //引入uploadByPieces方法\nimport { productGetTempKeysApi, uploadType } from '@/api/product';\nimport { uploadVideo } from '@/api/uploadPictures'\nimport Setting from '@/setting';\nimport { getCookies } from '@/libs/util';\nimport { isVideoUpload } from '@/utils';\n// import \"../../../public/UEditor/dialogs/internal\";\nexport default {\n  name: 'vide11o',\n  data() {\n    return {\n      fileUrl: Setting.apiBaseURL + '/file/upload',\n      upload: {\n        videoIng: false, // 是否显示进度条；\n      },\n      progress: 0, // 进度条默认0\n      videoLink: '',\n      formValidate: {\n        video_link: '',\n      },\n      upload_type: '',\n      uploadData: {},\n      header: {},\n    };\n  },\n  created() {\n    this.uploadType();\n    this.getToken();\n  },\n  methods: {\n    videoSaveToUrl(file) {\n      if (isVideoUpload(file))\n        uploadByPieces({\n          file: file, // 视频实体\n          pieceSize: 3, // 分片大小\n          success: (data) => {\n            this.formValidate.video_link = data.file_path;\n            this.progress = 100;\n          },\n          error: (e) => {\n            this.$message.error(e.msg);\n          },\n          uploading: (chunk, allChunk) => {\n            this.videoIng = true;\n            let st = Math.floor((chunk / allChunk) * 100);\n            this.progress = st;\n          },\n        });\n      return false;\n    },\n    // 删除视频；\n    delVideo() {\n      let that = this;\n      that.$set(that.formValidate, 'video_link', '');\n    },\n    //获取视频上传类型\n    uploadType() {\n      // uploadType().then((res) => {\n      //   this.upload_type = res.data.upload_type;\n      // });\n    },\n    // 上传成功\n    handleSuccess(res, file, fileList) {\n      if (res.code === 200) {\n        this.formValidate.video_link = res.data.src;\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    getToken() {\n      this.header['Authori-zation'] = 'Bearer ' + getCookies('token');\n    },\n    beforeUpload() {\n      this.uploadData = {};\n      let promise = new Promise((resolve) => {\n        this.$nextTick(function () {\n          resolve(true);\n        });\n      });\n      return promise;\n    },\n    zh_uploadFile() {\n      if (this.videoLink) {\n        this.formValidate.video_link = this.videoLink;\n      } else {\n        this.$refs.refid.click();\n      }\n    },\n    zh_uploadFile_change(evfile) {\n      let that = this;\n      if (evfile.target.files[0].type !== 'video/mp4') {\n        return that.$message.error('只能上传mp4文件');\n      }\n      const formData = new FormData();\n      formData.append('file', evfile.target.files[0])\n      uploadVideo(formData)\n          .then((res) => {\n            if (res.code == 200) {\n              that.formValidate.video_link = res.data;\n              that.$message.success('视频上传成功');\n            } else {\n              that.$message.error(\"视频上传失败\");\n            }\n          })\n          .catch((err) => {\n            that.$message.error(err);\n          });\n      // let types = {\n      //   key: evfile.target.files[0].name,\n      //   contentType: evfile.target.files[0].type,\n      // };\n      // productGetTempKeysApi(types).then((res) => {\n      //   that.$videoCloud\n      //     .videoUpload({\n      //       type: res.data.type,\n      //       evfile: evfile,\n      //       res: res,\n      //       uploading(status, progress) {\n      //         that.upload.videoIng = status;\n      //       },\n      //     })\n      //     .then((res) => {\n      //       that.formValidate.video_link = res.url;\n      //       that.$message.success('视频上传成功');\n      //     })\n      //     .catch((res) => {\n      //       that.$message.error(res);\n      //     });\n      // });\n    },\n    uploads() {\n      this.$emit('getVideo', this.formValidate.video_link);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.video-style {\n  width: 40%;\n  height: 180px;\n  border-radius: 10px;\n  background-color: #707070;\n  margin-top: 10px;\n  position: relative;\n  overflow: hidden;\n}\n.video-style .iconv {\n  color: #fff;\n  line-height: 180px;\n  width: 50px;\n  height: 50px;\n  display: inherit;\n  font-size: 26px;\n  position: absolute;\n  top: -74px;\n  left: 50%;\n  margin-left: -25px;\n}\n.video-style .mark {\n  position: absolute;\n  width: 100%;\n  height: 30px;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  text-align: center;\n}\n</style>\n"]}]}