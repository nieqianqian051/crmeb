{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/setting/systemOutAccount/index.vue?vue&type=style&index=0&id=ea93cf98&scoped=true&lang=css","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/setting/systemOutAccount/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5yZXNldCB7CiAgbWFyZ2luLWxlZnQ6IDEwcHg7Cn0KLmZvcm0tY29udGVudCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwp9Ci5pbnB1dC1idXR0b24gewogIGRpc3BsYXk6IGZsZXg7Cn0KdyAudHJpcCB7CiAgY29sb3I6ICNhYWE7CiAgbGluZS1oZWlnaHQ6IDIwcHg7Cn0KLnNldHRpbmctc3R5bGUgOjp2LWRlZXAgLml2dS1mb3JtLWl0ZW0gewogIG1hcmdpbi1ib3R0b206IDE0cHg7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA2hBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/setting/systemOutAccount","sourcesContent":["<template>\n  <div>\n    <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt\">\n      <el-form\n        ref=\"formValidate\"\n        :model=\"formValidate\"\n        :label-width=\"labelWidth\"\n        :label-position=\"labelPosition\"\n        @submit.native.prevent\n      >\n        <el-row>\n          <el-col v-bind=\"grid\">\n            <el-button v-auth=\"['setting-system_admin-add']\" type=\"primary\" @click=\"add\">添加账号</el-button>\n          </el-col>\n        </el-row>\n      </el-form>\n      <el-table\n        :data=\"list\"\n        class=\"mt14\"\n        no-userFrom-text=\"暂无数据\"\n        no-filtered-userFrom-text=\"暂无筛选结果\"\n        v-loading=\"loading\"\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" width=\"80\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.id }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"账号\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.appid }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"描述\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.title }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"添加时间\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.add_time }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"最后登录时间\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.last_time }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"最后登录ip\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.ip }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"状态\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <el-switch\n              class=\"defineSwitch\"\n              :active-value=\"1\"\n              :inactive-value=\"0\"\n              v-model=\"scope.row.status\"\n              :value=\"scope.row.status\"\n              @change=\"onchangeIsShow(scope.row)\"\n              size=\"large\"\n              active-text=\"开启\"\n              inactive-text=\"关闭\"\n            >\n            </el-switch>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"140\">\n          <template slot-scope=\"scope\">\n            <a @click=\"setUp(scope.row)\">设置</a>\n            <el-divider direction=\"vertical\"></el-divider>\n            <a @click=\"edit(scope.row)\">编辑</a>\n            <el-divider direction=\"vertical\"></el-divider>\n            <a @click=\"del(scope.row, '删除账号', scope.$index)\">删除</a>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"acea-row row-right page\">\n        <pagination\n          v-if=\"total\"\n          :total=\"total\"\n          :page.sync=\"formValidate.page\"\n          :limit.sync=\"formValidate.limit\"\n          @pagination=\"getList\"\n        />\n      </div>\n    </el-card>\n    <el-dialog\n      :visible.sync=\"modals\"\n      :title=\"type == 0 ? '添加账号' : '编辑账号'\"\n      :close-on-click-modal=\"false\"\n      :show-close=\"true\"\n      width=\"720px\"\n    >\n      <el-form\n        ref=\"modalsdate\"\n        :model=\"modalsdate\"\n        :rules=\"type == 0 ? ruleValidate : editValidate\"\n        label-width=\"80px\"\n        label-position=\"right\"\n      >\n        <el-form-item label=\"账号：\" prop=\"appid\">\n          <div style=\"display: flex\">\n            <el-input type=\"text\" v-model=\"modalsdate.appid\" :disabled=\"type != 0\"></el-input>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"密码：\" prop=\"appsecret\">\n          <div style=\"display: flex\">\n            <el-input type=\"text\" v-model=\"modalsdate.appsecret\" class=\"input\"></el-input>\n            <el-button type=\"primary\" @click=\"reset\" class=\"reset\">随机</el-button>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"描述：\" prop=\"title\">\n          <div style=\"display: flex\">\n            <el-input type=\"textarea\" v-model=\"modalsdate.title\"></el-input>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"接口权限：\" prop=\"title\">\n          <!-- <el-checkbox-group v-model=\"modalsdate.rules\">\n            <el-checkbox\n              :disabled=\"[2, 3].includes(item.id)\"\n              style=\"width: 30%\"\n              v-for=\"item in intList\"\n              :key=\"item.id\"\n              :label=\"item.id\"\n              >{{ item.name }}</el-checkbox\n            >\n          </el-checkbox-group> -->\n          <el-tree\n            :data=\"intList\"\n            :props=\"props\"\n            multiple\n            show-checkbox\n            ref=\"tree\"\n            node-key=\"id\"\n            :default-checked-keys=\"selectIds\"\n            @check-change=\"selectTree\"\n          ></el-tree>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancel\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"ok('modalsdate')\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog\n      :visible.sync=\"settingModals\"\n      scrollable\n      title=\"设置推送\"\n      width=\"1000px\"\n      :close-on-click-modal=\"false\"\n      :show-close=\"true\"\n    >\n      <el-form\n        class=\"setting-style\"\n        ref=\"settingData\"\n        :model=\"settingData\"\n        :rules=\"type == 0 ? ruleValidate : editValidate\"\n        label-width=\"155px\"\n        label-position=\"right\"\n      >\n        <el-form-item label=\"推送开关：\" prop=\"switch\">\n          <el-switch v-model=\"settingData.push_open\" :active-value=\"1\" :inactive-value=\"0\" />\n        </el-form-item>\n        <el-form-item label=\"推送账号：\" prop=\"push_account\">\n          <div class=\"form-content\">\n            <el-input type=\"text\" v-model=\"settingData.push_account\" placeholder=\"请输入推送账号\"></el-input>\n            <span class=\"trip\">接受推送方获取token的账号</span>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"推送密码：\" prop=\"push_password\">\n          <div class=\"form-content\">\n            <el-input type=\"text\" v-model=\"settingData.push_password\" placeholder=\"请输入推送密码\"></el-input>\n            <span class=\"trip\">接受推送方获取token的密码</span>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"获取TOKEN接口：\" prop=\"push_token_url\">\n          <div class=\"form-content\">\n            <div class=\"input-button\">\n              <el-input type=\"text\" v-model=\"settingData.push_token_url\" placeholder=\"请输入获取TOKEN接口\"></el-input>\n              <el-button class=\"ml10\" type=\"primary\" @click=\"textOutUrl(settingData.id)\">测试链接</el-button>\n            </div>\n            <span class=\"trip\"\n              >接受推送方获取token的URL地址，POST方法，传入push_account和push_password，返回token和有效时间time(秒)</span\n            >\n          </div>\n        </el-form-item>\n        <el-form-item label=\"用户数据修改推送接口：\" prop=\"user_update_push\">\n          <div class=\"form-content\">\n            <el-input\n              type=\"text\"\n              v-model=\"settingData.user_update_push\"\n              placeholder=\"请输入用户数据修改推送接口\"\n            ></el-input>\n            <span class=\"trip\">用户修改积分，余额，经验等将用户信息推送至该地址，POST方法</span>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"订单创建推送接口：\" prop=\"order_create_push\">\n          <div class=\"form-content\">\n            <el-input\n              type=\"text\"\n              v-model=\"settingData.order_create_push\"\n              placeholder=\"请输入订单创建推送接口\"\n            ></el-input>\n            <span class=\"trip\">订单创建时推送订单信息至该地址，POST方法</span>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"订单支付推送接口：\" prop=\"order_pay_push\">\n          <div class=\"form-content\">\n            <el-input type=\"text\" v-model=\"settingData.order_pay_push\" placeholder=\"请输入订单支付推送接口\"></el-input>\n            <span class=\"trip\">订单完成支付时推送订单已支付信息至该地址，POST方法</span>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"售后订单创建推送接口：\" prop=\"refund_create_push\">\n          <div class=\"form-content\">\n            <el-input\n              type=\"text\"\n              v-model=\"settingData.refund_create_push\"\n              placeholder=\"请输入售后订单创建推送接口\"\n            ></el-input>\n            <span class=\"trip\">售后订单生成时推送售后单信息至该地址，POST方法</span>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"售后订单取消推送接口：\" prop=\"refund_cancel_push\">\n          <div class=\"form-content\">\n            <el-input\n              type=\"text\"\n              v-model=\"settingData.refund_cancel_push\"\n              placeholder=\"请输入售后订单取消推送接口\"\n            ></el-input>\n            <span class=\"trip\">售后订单取消时推送售后单取消信息至该地址，POST方法</span>\n          </div>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button type=\"primary\" @click=\"submit('settingData')\">确定</el-button>\n        <el-button @click=\"settingModals = false\">取消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport {\n  accountListApi,\n  outSaveApi,\n  outSavesApi,\n  setShowApi,\n  outSetUp,\n  interfaceList,\n  setUpPush,\n  textOutUrl,\n} from '@/api/systemOutAccount';\nexport default {\n  name: 'systemOut',\n  data() {\n    return {\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      total: 0,\n      loading: false,\n      roleData: {\n        status1: '',\n      },\n      formValidate: {\n        roles: '',\n        status: '',\n        name: '',\n        page: 1, // 当前页\n        limit: 20, // 每页显示条数\n      },\n      status: '',\n      list: [],\n      intList: [],\n      FromData: null,\n      modalTitleSs: '',\n      ids: Number,\n      modals: false,\n      modalsid: '',\n      type: 0,\n      modalsdate: {\n        appid: '',\n        appsecret: '',\n        title: '',\n        rules: [],\n      },\n      settingModals: false,\n      settingData: {\n        switch: 1,\n        name: '',\n      },\n      ruleValidate: {\n        appid: [{ required: true, message: '请输入正确的账号 (4到30位之间)', trigger: 'blur', min: 4, max: 30 }],\n        appsecret: [{ required: true, message: '请输入正确的密码 (6到32位之间)', trigger: 'blur', min: 6, max: 32 }],\n        title: [{ message: '请输入正确的描述 (不能多于200位数)', trigger: 'blur', max: 200 }],\n      },\n      editValidate: {\n        appsecret: [{ required: false, message: '请输入正确的密码 (6到32位之间)', trigger: 'blur', min: 6, max: 32 }],\n      },\n      props: {\n        label: 'title',\n        disabled: 'disableCheckbox',\n      },\n      selectIds: [],\n    };\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : '50px';\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    // 开启状态\n    onchangeIsShow(row) {\n      let data = {\n        id: row.id,\n        status: row.status,\n      };\n      setShowApi(data)\n        .then(async (res) => {\n          this.$message.success(res.msg);\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 请求列表\n    submitFail() {\n      this.getList();\n    },\n    // 列表\n    getList() {\n      this.loading = true;\n      this.formValidate.roles = this.formValidate.roles || '';\n      accountListApi(this.formValidate)\n        .then(async (res) => {\n          this.total = res.data.count;\n          this.list = res.data.list;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$message.error(res.msg);\n        });\n    },\n    // 添加\n    add() {\n      this.modals = true;\n      this.type = 0;\n      this.modalsdate = {\n        appid: '',\n        appsecret: '',\n        title: '',\n        rules: [],\n      };\n      this.getIntList();\n    },\n    selectTree(e, i) {},\n    getIntList(type, list) {\n      let arr = [];\n      interfaceList().then((res) => {\n        this.intList = res.data;\n        if (!type) {\n          this.intList.map((item) => {\n            if (item.id === 1) {\n              item.checked = true;\n              item.disableCheckbox = true;\n              arr.push(item.id);\n              if (item.children.length) {\n                item.children.map((v) => {\n                  v.checked = true;\n                  v.disableCheckbox = true;\n                  arr.push(v.id);\n                });\n              }\n            }\n          });\n          this.$nextTick((e) => {\n            this.selectIds = arr;\n          });\n        } else {\n          list.map((item) => {\n            this.intList.map((e) => {\n              if (e.id === 1) {\n                e.checked = true;\n                e.disableCheckbox = true;\n                if (e.children.length) {\n                  e.children.map((v) => {\n                    v.checked = true;\n                    v.disableCheckbox = true;\n                  });\n                }\n              }\n              listData(e.children || [], item);\n            });\n          });\n          this.selectIds = list;\n        }\n        function listData(list, id) {\n          if (list.length) {\n            list.map((v) => {\n              if (v.id == id) {\n                v.checked = true;\n              }\n              if (v.children) {\n                listData(v.children);\n              }\n            });\n          }\n        }\n      });\n    },\n    // 编辑\n    edit(row) {\n      this.modals = true;\n      this.modalsdate.appid = row.appid;\n      this.modalsdate.title = row.title;\n      this.modalsdate.rules = row.rules.map((e) => {\n        return Number(e);\n      });\n      this.modalsid = row.id;\n      this.type = 1;\n      this.getIntList('edit', this.modalsdate.rules);\n    },\n    // 删除\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `setting/system_out_account/${row.id}`,\n        method: 'DELETE',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.list.splice(num, 1);\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 编辑\n    setUp(row) {\n      this.settingModals = true;\n      this.settingData = row;\n    },\n    // 搜索\n    userSearchs() {\n      this.formValidate.status = this.status === 'all' ? '' : this.status;\n      this.formValidate.page = 1;\n      this.list = [];\n      this.getList();\n    },\n    submit(name) {\n      setUpPush(this.settingData).then((res) => {\n        this.$message.success(res.msg);\n        this.settingModals = false;\n        this.getList();\n      });\n    },\n    textOutUrl() {\n      textOutUrl(this.settingData)\n        .then((res) => {\n          this.$message.success(res.msg);\n        })\n        .catch((err) => {\n          this.$message.error(err.msg);\n        });\n    },\n    ok(name) {\n      let fuc = this.modalsid ? outSavesApi : outSaveApi;\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          this.modalsdate.rules = [];\n          this.$refs.tree.getCheckedNodes().map((node) => {\n            this.modalsdate.rules.push(node.id);\n          });\n          if (this.modalsid) this.modalsdate.id = this.modalsid;\n          fuc(this.modalsdate)\n            .then((res) => {\n              this.modalsdate = {\n                appid: '',\n                appsecret: '',\n                title: '',\n                rules: [],\n              };\n              (this.modals = false), this.$message.success(res.msg);\n              this.modalsid = '';\n              this.getList();\n            })\n            .catch((err) => {\n              this.$message.error(err.msg);\n            });\n        } else {\n          this.$message.warning('请完善数据');\n        }\n      });\n    },\n    cancel() {\n      this.modalsid = '';\n      this.modalsdate = {\n        appid: '',\n        appsecret: '',\n        title: '',\n      };\n      this.modals = false;\n    },\n    reset() {\n      let len = 16;\n      let chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';\n      let maxPos = chars.length;\n      let pwd = '';\n      for (let i = 0; i < len; i++) {\n        pwd += chars.charAt(Math.floor(Math.random() * maxPos));\n      }\n      this.modalsdate.appsecret = pwd;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.reset {\n  margin-left: 10px;\n}\n.form-content {\n  display: flex;\n  flex-direction: column;\n}\n.input-button {\n  display: flex;\n}\nw .trip {\n  color: #aaa;\n  line-height: 20px;\n}\n.setting-style ::v-deep .ivu-form-item {\n  margin-bottom: 14px;\n}\n</style>\n"]}]}