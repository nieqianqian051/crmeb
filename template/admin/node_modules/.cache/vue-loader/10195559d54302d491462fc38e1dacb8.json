{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/components/uploadImg/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/components/uploadImg/index.vue","mtime":1719468447000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAmfile":"index.vue","sourceRoot":"src/components/uploadImg","sourcesContent":["<template>\n  <div>\n    <el-dialog\n        title=\"上传图片\"\n        :visible.sync=\"uploadModal\"\n        :append-to-body=\"true\"\n        :width=\"isIframe ? '100%' : '1024px'\"\n        :fullscreen=\"isIframe\"\n        @close=\"closed\"\n    >\n      <div class=\"main\" v-loading=\"loading\">\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n          <el-form-item label=\"上传方式：\" prop=\"type\">\n            <el-radio-group v-model=\"ruleForm.type\" @input=\"radioChange(ruleForm.type)\">\n              <el-radio :label=\"0\">本地上传</el-radio>\n              <!--   <el-radio :label=\"1\">网络上传</el-radio>\n                 <el-radio :label=\"2\">扫码上传</el-radio> -->\n            </el-radio-group>\n          </el-form-item>\n          <!--       <el-form-item label=\"上传至分组：\" prop=\"region\" v-show=\"ruleForm.type == 0 || ruleForm.type == 1\">\n                   <el-cascader\n                     class=\"form-width\"\n                     v-model=\"ruleForm.region\"\n                     :props=\"props\"\n                     :options=\"categoryList\"\n                     @change=\"handleChange\"\n                   ></el-cascader>\n                 </el-form-item> -->\n          <!--          <el-form-item label=\"网络图片：\" prop=\"region\" v-if=\"ruleForm.type == 1\">\n                      <el-input class=\"form-width\" v-model=\"webImgUrl\" placeholder=\"请网络图片地址\"></el-input>\n                      <span class=\"tq-text\" @click=\"getImg\">提取照片</span>\n                    </el-form-item> -->\n          <el-form-item label=\"上传图片：\" prop=\"region\" v-if=\"ruleForm.type == 0\">\n            <div class=\"acea-row\">\n              <div class=\"uploadCont\">\n                <el-upload\n                    ref=\"upload\"\n                    :action=\"fileUrl\"\n                    list-type=\"picture-card\"\n                    :on-change=\"fileChange\"\n                    :file-list=\"ruleForm.imgList\"\n                    :auto-upload=\"false\"\n                    :data=\"uploadData\"\n                    :headers=\"header\"\n                    :multiple=\"true\"\n                    :limit=\"limit\"\n                >\n                  <i slot=\"default\" class=\"el-icon-plus\"></i>\n                  <div\n                      slot=\"file\"\n                      slot-scope=\"{ file }\"\n                      draggable=\"false\"\n                      @dragstart=\"handleDragStart($event, file)\"\n                      @dragover=\"handleDragOver($event, file)\"\n                      @dragenter=\"handleDragEnter($event, file)\"\n                      @dragend=\"handleDragEnd($event, file)\"\n                  >\n                    <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\" />\n                    <i class=\"el-icon-error btndel\" @click=\"handleWebRemove(file)\" />\n                  </div>\n                </el-upload>\n                <div class=\"tips\">建议上传图片最大宽度750px，不超过3MB；仅支持jpeg、png格式，可拖拽调整上传顺序</div>\n              </div>\n            </div>\n          </el-form-item>\n          <template v-if=\"ruleForm.type == 1\">\n            <div class=\"img-box pl100\">\n              <div\n                  v-for=\"(item, index) in ruleForm.imgList\"\n                  :key=\"index\"\n                  class=\"pictrue\"\n                  draggable=\"false\"\n                  @dragstart=\"handleDragStart($event, item)\"\n                  @dragover.prevent=\"handleDragOver($event, item)\"\n                  @dragenter=\"handleDragEnter($event, item)\"\n                  @dragend=\"handleDragEnd($event, item)\"\n              >\n                <img :src=\"item.url\" />\n                <i class=\"el-icon-error btndel\" @click=\"handleRemove(index)\" />\n              </div>\n            </div>\n          </template>\n          <!--       <div class=\"code-image\" v-if=\"ruleForm.type == 2\">\n                   <div class=\"left\">\n                     <el-form-item label=\"上传至分组：\" prop=\"region\">\n                       <el-cascader\n                         class=\"form-width\"\n                         v-model=\"ruleForm.region\"\n                         :props=\"props\"\n                         :options=\"categoryList\"\n                         @change=\"handleChange\"\n                       ></el-cascader>\n                     </el-form-item>\n                     <el-form-item label=\"二维码：\" prop=\"region\">\n                       <div class=\"code\" ref=\"qrCodeUrl\"></div>\n                       <div class=\"trip\">扫描二维码，快速上传手机图片</div>\n                       <div class=\"trip-small\">建议使用手机浏览器</div>\n                     </el-form-item>\n                   </div>\n                   <div class=\"right\">\n                     <el-button size=\"small\" @click=\"scanUploadGet\">刷新图库</el-button>\n                     <div class=\"tip\">刷新图库按钮，可显示移动端上传成功的图片</div>\n                     <div class=\"img-box\">\n                       <div\n                         v-for=\"(item, index) in ruleForm.imgList\"\n                         :key=\"index\"\n                         class=\"pictrue\"\n                         draggable=\"false\"\n                         @dragstart=\"handleDragStart($event, item)\"\n                         @dragover.prevent=\"handleDragOver($event, item)\"\n                         @dragenter=\"handleDragEnter($event, item)\"\n                         @dragend=\"handleDragEnd($event, item)\"\n                       >\n                         <img :src=\"item.att_dir\" />\n                         <i class=\"el-icon-error btndel\" @click=\"handleWebRemove(item)\" />\n                       </div>\n                     </div>\n                   </div>\n                 </div> -->\n        </el-form>\n      </div>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"clear\">取 消</el-button>\n        <el-button type=\"primary\" :disabled=\"!ruleForm.imgList.length\" @click=\"submitUpload\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getCategoryListApi, moveApi, onlineUpload, scanUploadCode, uploadImages } from '@/api/uploadPictures';\nimport Setting from '@/setting';\nimport { getCookies } from '@/libs/util';\nimport { scanUploadQrcode, scanUploadGet } from '@/api/setting';\nimport QRCode from 'qrcodejs2';\nimport compressImg from '@/utils/compressImg.js';\nimport { isPicUpload } from '@/utils/index';\nexport default {\n  name: '',\n  props: {\n    categoryList: {\n      default: () => {\n        return [];\n      },\n    },\n    categoryId: {\n      default: '',\n    },\n    isPage: {\n      default: false,\n    },\n    isIframe: {\n      default: false,\n    },\n  },\n  watch: {\n    uploadModal: {\n      handler(newVal) {\n        if (newVal) this.ruleForm.region = this.categoryId;\n      },\n      immediate: true,\n    },\n  },\n  data() {\n    return {\n      webImgUrl: '',\n      uploadModal: false,\n      fileUrl: Setting.apiBaseURL + '/file/upload',\n      header: {\n        'Authori-zation': 'Bearer ' + getCookies('token'),\n      },\n      uploadData: {},\n      props: { checkStrictly: true, emitPath: false, label: 'title', value: 'id' },\n      disabled: false,\n      ruleForm: {\n        type: 0,\n        region: '',\n        imgList: [],\n      },\n      rules: { type: [{ required: true, message: '请选择活动资源', trigger: 'change' }] },\n      qrcode: '',\n      scanToken: '',\n      limit: 20,\n      loading: false,\n      time: undefined,\n    };\n  },\n  created() {},\n  mounted() {},\n  beforeDestroy() {\n    clearInterval(this.time);\n    this.time = undefined;\n  },\n  methods: {\n    radioChange(type) {\n      this.ruleForm.type = type;\n      this.ruleForm.imgList = [];\n      clearInterval(this.time);\n      this.time = undefined;\n      if (type == 2) {\n        this.scanUploadQrcode();\n        this.time = setInterval((e) => {\n          this.scanUploadGet();\n        }, 2000);\n      }\n    },\n    scanUploadQrcode() {\n      scanUploadQrcode(this.ruleForm.region).then((res) => {\n        this.creatQrCode(res.data.url);\n        this.scanToken = res.data.url;\n      });\n    },\n    scanUploadGet() {\n      let token = this.scanToken.split('token=')[1];\n      scanUploadGet(token).then((res) => {\n        this.ruleForm.imgList = res.data;\n      });\n    },\n\n    getImg() {\n      if (!this.webImgUrl) {\n        this.$message.error('请先输入图片地址');\n        return;\n      }\n      if (this.webImgUrl.indexOf('.php') != -1) {\n        this.$message.error('请先输入其他图片地址');\n        return;\n      }\n      this.ruleForm.imgList.push({\n        url: this.webImgUrl,\n      });\n    },\n    async submitUpload() {\n      if (!this.ruleForm.imgList.length) return this.$message.warning('请先选择图片');\n      if (this.ruleForm.type == 0) {\n        this.uploadData = {\n          pid: this.ruleForm.region,\n        };\n        if (this.ruleForm.imgList.length) {\n          if (this.loading) return;\n          this.loading = true;\n          for (let i = 0; i < this.ruleForm.imgList.length; i++) {\n            const file = this.ruleForm.imgList[i].raw;\n            await this.uploadItem(file);\n            if (i == this.ruleForm.imgList.length - 1) {\n              this.$message.success('上传成功');\n              this.$emit('uploadSuccess');\n              this.uploadModal = false;\n              this.loading = false;\n              this.initData();\n            }\n          }\n        }\n      } else if (this.ruleForm.type == 1) {\n        let urls = this.ruleForm.imgList.map((e) => {\n          return e.url;\n        });\n        if (urls.length) {\n          if (this.loading) return;\n          this.loading = true;\n          onlineUpload({ pid: this.ruleForm.region, images: urls })\n              .then((res) => {\n                this.$message.success('上传成功');\n                this.$emit('uploadSuccess');\n                this.uploadModal = false;\n                this.loading = false;\n                this.initData();\n              })\n              .catch((err) => {\n                this.loading = false;\n                this.$message.error(err.msg);\n              });\n        }\n      } else if (this.ruleForm.type == 2) {\n        let attId = this.ruleForm.imgList.map((e) => {\n          return e.att_id;\n        });\n        moveApi({ pid: this.ruleForm.region, images: attId }).then((res) => {\n          this.$message.success('上传成功');\n          this.$emit('uploadSuccess');\n          this.uploadModal = false;\n          this.initData();\n        });\n      }\n    },\n    uploadItem(file) {\n      return new Promise((resolve, reject) => {\n        const formData = new FormData();\n        formData.append('uploadFiles', file)\n        uploadImages(formData)\n            .then((res) => {\n              if (res.code == 200) {\n                // this.$emit('uploadImgSuccess', res.data);\n                resolve();\n              } else {\n                this.loading = false;\n                this.$message({\n                  message: '上传失败',\n                  type: 'error',\n                  duration: 1000,\n                });\n              }\n            })\n            .catch((err) => {\n              this.loading = false;\n              this.$message.error(err.msg);\n            });\n      });\n    },\n    beforeUpload(file) {\n      console.log(file);\n    },\n    creatQrCode(url) {\n      this.$refs.qrCodeUrl.innerHTML = '';\n      var qrcode = new QRCode(this.$refs.qrCodeUrl, {\n        text: url, // 需要转换为二维码的内容\n        width: 160,\n        height: 160,\n        colorDark: '#000000',\n        colorLight: '#ffffff',\n        correctLevel: QRCode.CorrectLevel.H,\n      });\n    },\n    handleWebRemove(file) {\n      let index = this.ruleForm.imgList.findIndex((e) => {\n        return e.url == file.url;\n      });\n      this.ruleForm.imgList.splice(index, 1);\n    },\n    handleRemove(index) {\n      this.ruleForm.imgList.splice(index, 1);\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    handleDownload(file) {\n      console.log(file);\n    },\n    async fileChange(file, fileList) {\n      if (isPicUpload(file)) {\n        if (file.size >= 2097152) {\n          await this.comImg(file.raw).then((res) => {\n            fileList.map((e) => {\n              if (e.uid === file.uid) {\n                e.raw = res;\n              }\n            });\n            this.ruleForm.imgList = fileList;\n          });\n        } else {\n          this.ruleForm.imgList = fileList;\n        }\n      } else {\n        // 从ruleForm对象的imgList数组中删除最后一个元素\n        this.ruleForm.imgList.splice(this.ruleForm.imgList.length, 1);\n      }\n    },\n    comImg(file) {\n      return new Promise((resolve, reject) => {\n        compressImg(file).then((res) => {\n          resolve(res);\n        });\n      });\n    },\n    loadData(item, callback) {\n      // getCategoryListApi({\n      //   pid: item.value,\n      // })\n      //   .then(async (res) => {\n      //     const data = res.data.list;\n      //     callback(data);\n      //   })\n      //   .catch((res) => {});\n    },\n    handleChange(e) {\n      if (this.ruleForm.type == 2) this.scanUploadQrcode();\n    },\n    // 移动\n    handleDragStart(e, item) {\n      this.dragging = item;\n    },\n    handleDragEnd(e, item) {\n      this.dragging = null;\n    },\n    handleDragOver(e) {\n      e.dataTransfer.dropEffect = 'move';\n    },\n    handleDragEnter(e, item) {\n      e.dataTransfer.effectAllowed = 'move';\n      if (item === this.dragging) {\n        return;\n      }\n      const newItems = [...this.ruleForm.imgList];\n      const src = newItems.indexOf(this.dragging);\n      const dst = newItems.indexOf(item);\n      newItems.splice(dst, 0, ...newItems.splice(src, 1));\n      this.ruleForm.imgList = newItems;\n    },\n    closed() {\n      this.initData();\n      // scanUploadCode().then((res) => {});\n    },\n    clear() {\n      this.uploadModal = false;\n      this.initData();\n    },\n    initData() {\n      this.ruleForm.type = 0;\n      this.ruleForm.region = 0;\n      this.scanToken = '';\n      this.webImgUrl = '';\n      this.ruleForm.imgList = [];\n      clearInterval(this.time);\n      this.time = undefined;\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n::v-deep .el-dialog__title {\n  font-size: 16px;\n}\n.main {\n  min-height: 410px;\n}\n.pictrue {\n  width: 60px !important;\n  height: 60px !important;\n  border: 1px dotted rgba(0, 0, 0, 0.1);\n  margin-right: 10px;\n  position: relative;\n  cursor: pointer;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n}\n.btndel {\n  position: absolute;\n  z-index: 1;\n  font-size: 18px;\n  right: -5px;\n  top: -5px;\n  color: #999;\n}\n.form-width {\n  width: 280px;\n}\n.tq-text {\n  margin-left: 14px;\n  font-size: 12px;\n  font-weight: 400;\n  color: var(--prev-color-primary);\n  cursor: pointer;\n}\n.uploadCont ::v-deep .el-upload--picture-card,\n::v-deep .el-upload-list--picture-card .el-upload-list__item {\n  width: 64px;\n  height: 64px;\n  line-height: 72px;\n  overflow: inherit;\n}\n.uploadCont ::v-deep .el-upload--picture-card,\n::v-deep .el-upload-list--picture-card .el-upload-list__item img {\n  width: 64px !important;\n  height: 64px !important;\n  border-radius: 6px;\n  object-fit: cover;\n}\n.pl100 {\n  padding-left: 100px;\n}\n.img-box {\n  display: flex;\n  flex-wrap: wrap;\n}\n.tips {\n  font-size: 12px;\n  color: #bbbbbb;\n}\n.code-image {\n  display: flex;\n  margin-top: 12px;\n  .left {\n    display: flex;\n    flex-direction: column;\n    margin-right: 20px;\n    align-items: center;\n    .code {\n      border: 1px solid #dddddd;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 200px;\n      height: 200px;\n      border-radius: 4px;\n      .code-img {\n        width: 160px;\n        height: 160px;\n      }\n    }\n    .form-width {\n      width: 200px;\n    }\n    .code {\n      margin-bottom: 14px;\n    }\n    .trip {\n      color: #333333;\n      text-align: center;\n      line-height: 18px;\n    }\n    .trip-small {\n      font-size: 12px;\n      font-weight: 400;\n      color: #bbbbbb;\n      text-align: center;\n      line-height: 16px;\n    }\n  }\n  .right {\n    margin-top: 62px;\n    .tip {\n      font-size: 12px;\n      font-weight: 400;\n      color: #bbbbbb;\n      margin: 10px 0;\n    }\n  }\n}\n</style>\n"]}]}