{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/system/backendRouting/debugging.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/system/backendRouting/debugging.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["debugging.vue"],"names":[],"mappings":";AAofile":"debugging.vue","sourceRoot":"src/pages/system/backendRouting","sourcesContent":["<template>\n  <div class=\"content\" v-if=\"interfaceData\">\n    <div class=\"head\">\n      <el-input v-model=\"interfaceData.path\">\n        <template #prepend>\n          <el-select v-model=\"interfaceData.method\" style=\"width: 120px\">\n            <el-option v-for=\"(item, index) in requestTypeList\" :key=\"index\" :value=\"item.value\" :label=\"item.label\"></el-option>\n          </el-select>\n        </template>\n      </el-input>\n      <el-button class=\"ml20\" type=\"primary\" @click=\"requestData\">请求</el-button>\n      <el-button v-if=\"codes\" class=\"ml10 copy-btn\" type=\"success\" @click=\"insertCopy()\">复制结果</el-button>\n    </div>\n    <div class=\"params\">\n      <el-tabs class=\"mt10\" v-model=\"paramsType\" @tab-click=\"changeTab\">\n        <el-tab-pane label=\"Params\" name=\"Params\"> </el-tab-pane>\n        <el-tab-pane label=\"Body\" name=\"Body\"> </el-tab-pane>\n        <el-tab-pane label=\"Header\" name=\"Header\"> </el-tab-pane>\n      </el-tabs>\n      <div v-show=\"paramsType === 'Params'\">\n        <vxe-table\n          class=\"mt10\"\n          resizable\n          show-overflow\n          keep-source\n          ref=\"xTable\"\n          row-id=\"id\"\n          :print-config=\"{}\"\n          :export-config=\"{}\"\n          :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n          :data=\"interfaceData.query\"\n        >\n          <vxe-column field=\"attribute\" width=\"150\" title=\"属性\" tree-node :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.attribute\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"value\" title=\"参数值\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.value\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"type\" title=\"类型\" width=\"120\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-select\n                v-model=\"row.type\"\n                transfer\n                @change=\"\n                  (val) => {\n                    handleChange(val, row, 'xTable');\n                  }\n                \"\n              >\n                <vxe-option\n                  v-for=\"item in typeList\"\n                  :key=\"item.value\"\n                  :value=\"item.value\"\n                  :label=\"item.label\"\n                ></vxe-option>\n              </vxe-select>\n            </template>\n          </vxe-column>\n          <!-- <vxe-column field=\"must\" title=\"必填\" width=\"50\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <span>{{ row.must == '1' ? '是' : '否' }}</span>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"trip\" width=\"150\" title=\"说明\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.trip\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column> -->\n          <vxe-column title=\"操作\" width=\"120\">\n            <template #default=\"{ row }\">\n              <vxe-button\n                type=\"text\"\n                v-if=\"['array', 'object'].includes(row.type)\"\n                status=\"primary\"\n                @click=\"insertRow(row, 'xTable')\"\n                >插入</vxe-button\n              >\n              <vxe-button type=\"text\" status=\"primary\" @click=\"removeRow(row, 'xTable')\">删除</vxe-button>\n            </template>\n          </vxe-column>\n        </vxe-table>\n        <el-button class=\"mt10\" type=\"primary\" @click=\"insertEvent('xTable')\">添加参数</el-button>\n      </div>\n      <div v-show=\"paramsType === 'Body'\">\n        <el-radio-group v-model=\"bodyType\" class=\"mt10\">\n          <el-radio label=\"form-data\"></el-radio>\n          <el-radio label=\"json\"></el-radio>\n        </el-radio-group>\n        <vxe-table\n          v-if=\"bodyType == 'form-data'\"\n          class=\"mt10\"\n          resizable\n          show-overflow\n          keep-source\n          ref=\"yTable\"\n          row-id=\"id\"\n          :print-config=\"{}\"\n          :export-config=\"{}\"\n          :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n          :data=\"interfaceData.request_body\"\n        >\n          <vxe-column field=\"attribute\" width=\"150\" title=\"属性\" tree-node :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.attribute\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"value\" title=\"参数值\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.value\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"type\" title=\"类型\" width=\"120\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-select\n                v-model=\"row.type\"\n                transfer\n                @change=\"\n                  (val) => {\n                    handleChange(val, row, 'yTable');\n                  }\n                \"\n              >\n                <vxe-option\n                  v-for=\"item in typeList\"\n                  :key=\"item.value\"\n                  :value=\"item.value\"\n                  :label=\"item.label\"\n                ></vxe-option>\n              </vxe-select>\n            </template>\n          </vxe-column>\n          <!-- <vxe-column field=\"must\" title=\"必填\" width=\"50\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <span>{{ row.must == '1' ? '是' : '否' }}</span>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"trip\" title=\"说明\" width=\"150\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.trip\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column> -->\n          <vxe-column title=\"操作\" width=\"120\">\n            <template #default=\"{ row }\">\n              <vxe-button\n                type=\"text\"\n                v-if=\"['array', 'object'].includes(row.type)\"\n                status=\"primary\"\n                @click=\"insertRow(row, 'yTable')\"\n                >插入</vxe-button\n              >\n              <vxe-button type=\"text\" status=\"primary\" @click=\"removeRow(row, 'yTable')\">删除</vxe-button>\n            </template>\n          </vxe-column>\n        </vxe-table>\n        <div v-else>\n          <el-input v-model=\"jsonBody\" type=\"textarea\" :rows=\"8\" placeholder=\"请求数据\" />\n        </div>\n        <el-button v-if=\"bodyType == 'form-data'\" class=\"mt10\" type=\"primary\" @click=\"insertEvent('yTable')\"\n          >添加参数</el-button\n        >\n      </div>\n\n      <div v-show=\"paramsType === 'Header'\">\n        <vxe-table\n          class=\"mt10\"\n          resizable\n          show-overflow\n          keep-source\n          ref=\"zTable\"\n          row-id=\"id\"\n          :print-config=\"{}\"\n          :export-config=\"{}\"\n          :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n          :data=\"interfaceData.headerData\"\n        >\n          <vxe-column field=\"attribute\" width=\"300\" title=\"属性\" tree-node :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.attribute\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"value\" title=\"参数值\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.value\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column title=\"操作\" width=\"100\">\n            <template #default=\"{ row }\">\n              <vxe-button\n                type=\"text\"\n                v-if=\"['array', 'object'].includes(row.type)\"\n                status=\"primary\"\n                @click=\"insertRow(row, 'zTable')\"\n                >插入</vxe-button\n              >\n              <vxe-button type=\"text\" status=\"primary\" @click=\"removeRow(row, 'zTable')\">删除</vxe-button>\n            </template>\n          </vxe-column>\n        </vxe-table>\n        <el-button class=\"mt10\" type=\"primary\" @click=\"insertEvent('zTable')\">添加参数</el-button>\n      </div>\n    </div>\n    <div class=\"res mt10 mb10\" v-if=\"codes\">\n      <MonacoEditor :codes=\"codes\" :readOnly=\"true\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport request from './request';\nimport MonacoEditor from './components/MonacoEditor.vue';\nimport vuedraggable from 'vuedraggable';\nimport { getCookies } from '@/libs/util';\n\nfunction requestMethod(url, method, params, data, headerItem) {\n  return request({\n    url,\n    method,\n    params,\n    data,\n    headerItem,\n  });\n}\nexport default {\n  components: { MonacoEditor },\n  props: {\n    formValidate: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n    requestTypeList: {\n      type: Array,\n      default: () => {\n        return [];\n      },\n    },\n    typeList: {\n      type: Array,\n      default: () => {\n        return [];\n      },\n    },\n    apiType: {\n      type: String,\n      default: 'adminapi',\n    },\n  },\n  data() {\n    return {\n      bodyType: 'form-data',\n      interfaceData: undefined,\n      paramsType: 'Params',\n      editor: '', //当前编辑器对象\n      codes: '',\n      jsonBody: '',\n    };\n  },\n  created() {\n    this.interfaceData = this.formValidate;\n    this.interfaceData.request_body = JSON.parse(JSON.stringify(this.interfaceData.request));\n  },\n  mounted() {\n    if (!this.$refs.zTable.getTableData().tableData.length && this.apiType == 'adminapi') {\n      this.insertEvent('zTable', {\n        attribute: 'Authori-Zation',\n        value: 'Bearer ' + getCookies('token'),\n      });\n      // this.insertEvent('zaTable');\n    }else{\n\t\t\tif(this.interfaceData.header){\n\t\t\t\tthis.interfaceData.header.forEach((item,index)=>{\n\t\t\t\t\tthis.insertEvent('zTable', {\n\t\t\t\t\t  attribute: item.attribute || '',\n\t\t\t\t\t  value: item.value || '',\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t}\n\t\t}\n  },\n  methods: {\n    async handleChange(e, row, type) {\n      if (e.value !== 'array' && e.value !== 'object') {\n        if (row.children.length) {\n          let arr = this.$refs[type].getTableData().tableData;\n          let id = row.children[0].parentId;\n          const $table = this.$refs[type];\n          for (let i = 0; i < arr.length; i++) {\n            if (arr[i].parentId == id) {\n              await $table.remove(arr[i]);\n            }\n          }\n        }\n      }\n    },\n    insertCopy() {\n      this.$copyText(this.codes)\n        .then((message) => {\n          this.$message.success('复制成功');\n        })\n        .catch((err) => {\n          this.$message.error('复制失败');\n        });\n    },\n    async requestData() {\n      let url, method, params, body, headers;\n      url = this.apiType + '/' + this.interfaceData.path;\n      method = this.interfaceData.method;\n      params = this.filtersData((await this.$refs.xTable.getTableData().tableData) || []);\n      body =\n        this.bodyType === 'json'\n          ? this.jsonBody\n          : this.filtersData((await this.$refs.yTable.getTableData().tableData) || []);\n      let h = this.filtersData((await this.$refs.zTable.getTableData().tableData) || []);\n      headers = h;\n      this.codes = '';\n      requestMethod(url, method, params, body, headers)\n        .then((res) => {\n          if (!res) return this.$message.error('接口异常');\n          this.codes = JSON.stringify(res);\n        })\n        .catch((err) => {\n          if (!err) return this.$message.error('接口异常');\n          this.codes = JSON.stringify(err);\n        });\n    },\n    filtersData(arr) {\n      try {\n        let x = {};\n        arr.map((e) => {\n          if (!e.parentId) {\n            for (let i in e) {\n              if (i == 'attribute') {\n                if (e.type === 'object') {\n                  let obj = {};\n\n                  e.children.map((item, index) => {\n                    obj = this.filtersObj(item, 1);\n                  });\n                  x[e[i]] = obj;\n                } else if (e.type !== 'array') {\n                  x[e[i]] = e.value || '';\n                } else {\n                  let arr = [];\n                  e.children.map((item, index) => {\n                    arr[index] = this.filtersObj(item);\n                  });\n                  x[e[i]] = arr;\n                }\n              }\n            }\n          }\n        });\n        return x;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    // type 1 为obj属性\n    filtersObj(obj, type) {\n      let x = {};\n      for (let i in obj) {\n        if (i == 'attribute') {\n          if (obj.type === 'object') {\n            let oj = {};\n            obj.children.map((item, index) => {\n              oj[obj.attribute] = this.filtersObj(item);\n            });\n            x = oj;\n          } else if (obj.type !== 'array') {\n            if (type) {\n              x[obj.attribute] = obj.value || '';\n            } else {\n              x[obj[i]] = obj.value || '';\n            }\n          } else {\n            let arr = [];\n            obj.children.map((item, index) => {\n              arr[index] = this.filtersObj(item);\n            });\n            x[obj[i]] = arr;\n          }\n        }\n      }\n      return x;\n    },\n    changeTab(name) {\n      // if (name === 'Header') {\n      //   if (!this.$refs.zTable.getTableData().tableData.length) {\n      //     this.insertEvent('zTable', {\n      //       attribute: 'Authori-Zation',\n      //       value: 'Bearer ' + getCookies('token'),\n      //     });\n      //     this.insertEvent('zaTable');\n      //   }\n      // }\n    },\n    async insertEvent(type, d) {\n      const $table = this.$refs[type];\n      let newRow;\n      if (type == 'xTable') {\n        newRow = {\n          attribute: '',\n          type: 'string',\n          must: 0,\n          value: '',\n          trip: '',\n        };\n      } else if (type == 'yTable') {\n        newRow = {\n          attribute: '',\n          type: 'string',\n          value: '',\n          must: 0,\n          trip: '',\n        };\n      } else if (type == 'zTable') {\n        newRow = {\n          attribute: '',\n          type: '',\n          value: '',\n          trip: '',\n        };\n        newRow = { ...newRow, ...d };\n      } else if (type == 'zaTable') {\n        newRow = {\n          attribute: 'token',\n          type: 'string',\n          value: '',\n          must: 0,\n          trip: '',\n        };\n      } else {\n        newRow = {\n          code: '',\n          value: '',\n          solution: '',\n        };\n      }\n      const { row: data } = await $table.insertAt(newRow, -1);\n      await $table.setActiveCell(data, 'name');\n    },\n    async insertRow(currRow, type) {\n      const $table = this.$refs[type];\n      // 如果 null 则插入到目标节点顶部\n      // 如果 -1 则插入到目标节点底部\n      // 如果 row 则有插入到效的目标节点该行的位置\n      let record;\n      if (type == 'xTable') {\n        record = {\n          attribute: '',\n          type: 'string',\n          must: 0,\n          value: '',\n          trip: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      } else {\n        record = {\n          code: '',\n          value: '',\n          solution: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      }\n      const { row: newRow } = await $table.insertAt(record, -1);\n      await $table.setTreeExpand(currRow, true); // 将父节点展开\n      await $table.setActiveRow(newRow); // 插入子节点\n    },\n    async removeRow(row, type) {\n      const $table = this.$refs[type];\n      await $table.remove(row);\n    },\n  },\n};\n</script>\n<style>\n.vxe-select--panel.is--transfer {\n  z-index: 99999 !important;\n}\n</style>\n<style lang=\"scss\" scoped>\n.content {\n  padding: 12px;\n  .head {\n    display: flex;\n    align-items: center;\n    .item {\n      display: flex;\n      align-items: center;\n      margin-bottom: 12px;\n      font-size: 14px;\n      .title {\n        margin-right: 14px;\n      }\n    }\n  }\n}\n.copy-btn {\n  display: flex;\n  justify-content: right;\n}\n::v-deep .monaco-editor {\n  min-height: 700px;\n}\n</style>\n"]}]}