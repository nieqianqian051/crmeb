{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/system/codeGeneration/components/FoundationFor.vue?vue&type=style&index=0&id=d4c5c06a&lang=stylus&scoped=true","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/system/codeGeneration/components/FoundationFor.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/stylus-loader/index.js","mtime":1746465207601},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5mb3JtLXdpZHRoIHsKICB3aWR0aDogNTAwcHg7Cn0KLml0ZW17CiAgZGlzcGxheSBmbGV4CiAgbWFyZ2luLWJvdHRvbSAxMHB4CiAgLnJvd3sKICAgIHdpZHRoIDE0MHB4CiAgICBtYXJnaW4tcmlnaHQgMTBweAogIH0KfQo="},{"version":3,"sources":["FoundationFor.vue"],"names":[],"mappings":";AA4IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FoundationFor.vue","sourceRoot":"src/pages/system/codeGeneration/components","sourcesContent":["<template>\n  <div class=\"main\">\n    <el-alert class=\"mb20\" closable>\n      <template v-slot:title>crud生成说明</template>\n      <template> 不能生成系统自带的表；已经生成过的表还能继续生成 </template>\n    </el-alert>\n    <el-form ref=\"foundation\" :model=\"foundation\" :rules=\"foundationRules\" label-width=\"100px\">\n      <el-form-item label=\"菜单：\">\n        <el-cascader\n          class=\"form-width\"\n          v-model=\"foundation.pid\"\n          size=\"small\"\n          :options=\"menusList\"\n          :props=\"{ checkStrictly: true, multiple: false, emitPath: false }\"\n          clearable\n        ></el-cascader>\n        <div class=\"tip\">选项，选择的菜单成功后会自动写入到此菜单下</div>\n      </el-form-item>\n      <el-form-item label=\"菜单名称：\">\n        <el-input class=\"form-width\" v-model=\"foundation.menuName\" placeholder=\"请输入菜单名称\"></el-input>\n        <div class=\"tip\">\n          生成菜单为可选项，不填写默认生成的菜单名称将为表名；生成后会把自动生成的权限默认加入该菜单下\n        </div>\n      </el-form-item>\n      <el-form-item label=\"模块名：\" prop=\"modelName\">\n        <el-input class=\"form-width\" v-model=\"foundation.modelName\" placeholder=\"请输入模块名\"></el-input>\n        <div class=\"tip\">模块名称为中文或者英文，用在接口名称前缀、表单头部标题</div>\n      </el-form-item>\n      <el-form-item label=\"表名：\" prop=\"tableName\">\n        <el-input class=\"form-width\" v-model=\"foundation.tableName\" placeholder=\"请输入表名\"></el-input>\n        <div class=\"tip\">\n          用于生成CRUD指定的表名，不需要携带表前缀；对于生成过的表将不能在进行生成；或者可以删除对应的文件重新生成！对应系统中重要的数据表将不允许生成！\n        </div>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { crudMenus, crudColumnType, crudFilePath } from '@/api/systemCodeGeneration';\n\nexport default {\n  name: '',\n  props: {\n    foundation: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n  data() {\n    return {\n      foundationRules: {\n        // pid: [{ required: true, message: '请输入菜单', trigger: 'blur' }],\n        tableName: [{ required: true, message: '请输入表名', trigger: 'blur' }],\n        modelName: [{ required: true, message: '请输入模块名', trigger: 'blur' }],\n      },\n      menusList: [],\n      columnTypeList: [],\n      fromTypeList: [\n        {\n          value: '0',\n          label: '不生成',\n        },\n        {\n          value: 'input',\n          label: 'input',\n        },\n        {\n          value: 'textarea',\n          label: 'textarea',\n        },\n        // {\n        //   value: 'select',\n        //   label: 'select',\n        // },\n        {\n          value: 'radio',\n          label: 'radio',\n        },\n        {\n          value: 'number',\n          label: 'number',\n        },\n        {\n          value: 'frameImageOne',\n          label: 'frameImageOne',\n        },\n        {\n          value: 'frameImages',\n          label: 'frameImages',\n        },\n      ],\n      loading: false,\n      tableField: [],\n    };\n  },\n  created() {\n    this.getCrudMenus();\n  },\n  mounted() {},\n  methods: {\n    disabledInput(index) {\n      let fieldInfo = this.tableField[index];\n      let res = ['addTimestamps', 'addSoftDelete'].includes(this.tableField[index].field_type);\n      if (fieldInfo.primaryKey) {\n        res = true;\n      }\n      if (fieldInfo.field === 'delete_time' && fieldInfo.field_type === 'timestamp') {\n        res = true;\n      }\n      return res;\n    },\n    initfield() {\n      this.tableField = [];\n    },\n    changeItemField(e, i) {\n      if (e === 'addSoftDelete') {\n        this.$set(this.tableField[i], 'comment', '伪删除');\n      }\n      if (e === 'addTimestamps') {\n        this.$set(this.tableField[i], 'comment', '添加和修改时间');\n      }\n    },\n    getCrudMenus() {\n      crudMenus().then((res) => {\n        this.menusList = res.data;\n      });\n      crudColumnType().then((res) => {\n        this.columnTypeList = res.data.types;\n      });\n    },\n    del(index) {\n      this.tableField.splice(index, 1);\n    },\n  },\n};\n</script>\n<style lang=\"stylus\" scoped>\n.form-width {\n  width: 500px;\n}\n.item{\n  display flex\n  margin-bottom 10px\n  .row{\n    width 140px\n    margin-right 10px\n  }\n}\n</style>\n"]}]}