{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/system/maintain/systemDatabackup/index.vue?vue&type=style&index=0&id=516cf2e6&scoped=true&lang=stylus","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/system/maintain/systemDatabackup/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/stylus-loader/index.js","mtime":1746465207601},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cjo6di1kZWVwIC5lbC10YWJzX19pdGVtIHsKICBoZWlnaHQ6IDU0cHggIWltcG9ydGFudDsKICBsaW5lLWhlaWdodDogNTRweCAhaW1wb3J0YW50Owp9Ci50YWJsZUJveCA6OnYtZGVlcCAuaXZ1LXRhYmxlLWhlYWRlciB0YWJsZQogICBib3JkZXIgbm9uZSAhaW1wb3J0YW50CgoudGFibGUtbWFya3sKICBjdXJzb3I6IHRleHQ7Cn0KLnRhYmxlLW1hcms6aG92ZXJ7CiAgYm9yZGVyOjFweCBzb2xpZCAjYzJjMmMyOwogIHBhZGRpbmc6IDNweCA1cHgKfQoubWFyayA6OnYtZGVlcCAuaXZ1LWlucHV0ewogICAgYmFja2dyb3VuZDogI2ZmZjsKICAgIGJvcmRlci1yYWRpdXM6IC4zOXJlbTsKfQoubWFyayA6OnYtZGVlcCAuaXZ1LWlucHV0LCAuaXZ1LWlucHV0OmhvdmVyLCAuaXZ1LWlucHV0OmZvY3VzIHsKICAgIGJvcmRlcjogdHJhbnNwYXJlbnQ7CiAgICBib3gtc2hhZG93OiBub25lOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA2bA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/system/maintain/systemDatabackup","sourcesContent":["<template>\n  <div>\n    <el-card :bordered=\"false\" :body-style=\"{ padding: '0 20px 20px' }\">\n      <el-tabs>\n        <el-tab-pane label=\"数据库列表\">\n          <!--          <el-card :bordered=\"false\" shadow=\"never\" class=\"tableBox\">-->\n          <div class=\"mb10\">\n            <!--              <span class=\"ivu-pl-8 mr10\">数据库表列表</span>-->\n            <el-button type=\"primary\" @click=\"getBackup\">备份</el-button>\n            <el-button type=\"primary\" @click=\"getOptimize\">优化表</el-button>\n            <el-button type=\"primary\" @click=\"getRepair\">修复表</el-button>\n            <el-button type=\"primary\" @click=\"exportData(1)\">导出文件</el-button>\n          </div>\n          <el-table\n            ref=\"selection\"\n            :data=\"tabList2\"\n            v-loading=\"loading\"\n            empty-text=\"暂无数据\"\n            @select=\"onSelectTab\"\n            @select-all=\"onSelectTab\"\n            class=\"mt14\"\n          >\n            <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\n            <el-table-column label=\"表名称\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.name }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"备注\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                <div class=\"mark\">\n                  <div v-if=\"scope.row.is_edit\" class=\"table-mark\" @click=\"isEditMark(scope.row)\">\n                    {{ scope.row.comment }}\n                  </div>\n                  <el-input ref=\"mark\" v-else v-model=\"scope.row.comment\" @blur=\"isEditBlur(scope.row, 0)\"></el-input>\n                </div>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"类型\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.engine }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"大小\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.data_length }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"更新时间\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.update_time }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"行数\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.rows }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" fixed=\"right\" width=\"70\">\n              <template slot-scope=\"scope\">\n                <a @click=\"Info(scope.row)\">详情</a>\n              </template>\n            </el-table-column>\n          </el-table>\n          <!--          </el-card>-->\n          <!-- 详情模态框-->\n          <el-drawer\n            :visible.sync=\"modals\"\n            :wrapperClosable=\"false\"\n            :size=\"740\"\n            :title=\"'[ ' + rows.name + ' ]' + rows.comment\"\n          >\n            <el-table\n              ref=\"selection\"\n              :data=\"tabList3\"\n              v-loading=\"loading2\"\n              empty-text=\"暂无数据\"\n              max-height=\"600\"\n              size=\"small\"\n            >\n              <el-table-column label=\"字段名\" min-width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span>{{ scope.row.COLUMN_NAME }}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"数据类型\" min-width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span>{{ scope.row.COLUMN_TYPE }}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"默认值\" min-width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span>{{ scope.row.COLUMN_DEFAULT }}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"允许非空\" min-width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span>{{ scope.row.IS_NULLABLE }}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"自动递增\" min-width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span>{{ scope.row.EXTRA }}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"备注\" min-width=\"100\">\n                <template slot-scope=\"scope\">\n                  <div class=\"mark\">\n                    <div v-if=\"scope.row.is_edit\" class=\"table-mark\" @click=\"isEditMark(scope.row)\">\n                      {{ scope.row.COLUMN_COMMENT }}\n                    </div>\n                    <el-input\n                      ref=\"mark\"\n                      v-else\n                      v-model=\"scope.row.COLUMN_COMMENT\"\n                      @blur=\"isEditBlur(scope.row, 1)\"\n                    ></el-input>\n                  </div>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-drawer>\n        </el-tab-pane>\n        <el-tab-pane label=\"备份列表\">\n          <el-table\n            ref=\"selection\"\n            :data=\"tabList\"\n            v-loading=\"loading3\"\n            empty-text=\"暂无数据\"\n            highlight-current-row\n            size=\"small\"\n          >\n            <el-table-column label=\"备份名称\" min-width=\"200\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.filename }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"part\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.part }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"大小\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.size }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"compress\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.compress }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"时间\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.backtime }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" fixed=\"right\" width=\"140\">\n              <template slot-scope=\"scope\">\n                <a @click=\"ImportFile(scope.row)\">导入</a>\n                <el-divider direction=\"vertical\"></el-divider>\n                <a @click=\"del(scope.row, '删除该备份', scope.$index)\">删除</a>\n                <el-divider direction=\"vertical\"></el-divider>\n                <a @click=\"download(scope.row)\">下载</a>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-tab-pane>\n      </el-tabs>\n    </el-card>\n    <el-dialog :visible.sync=\"markModal\" width=\"470px\" title=\"修改备注\" @closed=\"cancel\">\n      <el-input v-model=\"mark\"></el-input>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancel\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"ok\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  backupListApi,\n  backupReadListApi,\n  backupBackupApi,\n  backupOptimizeApi,\n  backupRepairApi,\n  filesListApi,\n  filesDownloadApi,\n  filesImportApi,\n  updateMark,\n} from '@/api/system';\nimport Setting from '@/setting';\nimport { getCookies } from '@/libs/util';\n\nexport default {\n  name: 'systemDatabackup',\n  data() {\n    return {\n      modals: false,\n      loading: false,\n      tabList: [],\n      tabList2: [],\n      selectionList: [],\n      tabList3: [],\n      rows: {},\n      dataList: {},\n      loading2: false,\n      loading3: false,\n      markModal: false,\n      mark: '',\n      header: {},\n      Token: '',\n      changeMarkData: {\n        table: '',\n        mark: '',\n        type: '',\n        field: '',\n      },\n    };\n  },\n  computed: {\n    fileUrl() {\n      const search = '/adminapi/';\n      const start = Setting.apiBaseURL.indexOf(search);\n      return Setting.apiBaseURL.substring(0, start); // 截取字符串\n    },\n  },\n  created() {\n    this.getToken();\n    this.getList();\n    this.getfileList();\n  },\n  methods: {\n    editMark(row, type) {\n      this.changeMarkData.table = row.name || row.TABLE_NAME;\n      this.changeMarkData.field = row.COLUMN_NAME || '';\n      this.changeMarkData.type = row.COLUMN_TYPE || '';\n      this.changeMarkData.is_field = type;\n      this.markModal = true;\n    },\n    ok() {\n      this.changeMarkData.mark = this.mark;\n      updateMark(this.changeMarkData).then((res) => {\n        this.$message.success(res.msg);\n        if (this.changeMarkData.is_field) {\n          this.Info({ name: this.changeMarkData.table, comment: this.rows.comment });\n        } else {\n          this.getList();\n        }\n      });\n    },\n    cancel() {\n      this.mark = '';\n    },\n    // 导入\n    ImportFile(row) {\n      filesImportApi({\n        part: row.part,\n        time: row.time,\n      })\n        .then(async (res) => {\n          this.$message.success(res.msg);\n          this.getfileList();\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$message.error(res.msg);\n        });\n    },\n    // 删除备份记录表\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `system/backup/del_file`,\n        method: 'DELETE',\n        ids: {\n          filename: row.time,\n        },\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.tabList.splice(num, 1);\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 上传头部token\n    getToken() {\n      this.Token = getCookies('token');\n    },\n    download(row) {\n      let data = {\n        time: row.time,\n      };\n      filesDownloadApi(data)\n        .then((res) => {\n          if (res.data.key) {\n            window.open(Setting.apiBaseURL + '/download?key=' + res.data.key);\n          }\n        })\n        .catch((res) => {\n          this.$message.error(res);\n        });\n    },\n    // 导出备份记录表\n    exportData() {\n      const columns = this.columns.slice(1, 7);\n      this.$refs.selection.exportCsv({\n        filename: '导出',\n        columns: columns,\n        data: this.tabList2,\n      });\n    },\n    // 全选\n    onSelectTab(selection) {\n      this.selectionList = selection;\n      let tables = [];\n      this.selectionList.map((item) => {\n        tables.push(item.name);\n      });\n      this.dataList = {\n        tables: tables.join(','),\n      };\n    },\n    // 备份表\n    getBackup() {\n      if (this.selectionList.length === 0) {\n        return this.$message.warning('请选择表');\n      }\n      backupBackupApi(this.dataList)\n        .then(async (res) => {\n          this.$message.success(res.msg);\n          this.getfileList();\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$message.error(res.msg);\n        });\n    },\n    // 备份记录表列表\n    getfileList() {\n      this.loading3 = true;\n      filesListApi()\n        .then(async (res) => {\n          let data = res.data;\n          this.tabList = data.list;\n          this.loading3 = false;\n        })\n        .catch((res) => {\n          this.loading3 = false;\n          this.$message.error(res.msg);\n        });\n    },\n    // 优化表\n    getOptimize() {\n      if (this.selectionList.length === 0) {\n        return this.$message.warning('请选择表');\n      }\n      backupOptimizeApi(this.dataList)\n        .then(async (res) => {\n          this.$message.success(res.msg);\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 修复表\n    getRepair() {\n      if (this.selectionList.length === 0) {\n        return this.$message.warning('请选择表');\n      }\n      backupRepairApi(this.dataList)\n        .then(async (res) => {\n          this.$message.success(res.msg);\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 数据库列表\n    getList() {\n      this.loading = true;\n      backupListApi()\n        .then(async (res) => {\n          let data = res.data;\n          this.tabList2 = data.list;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$message.error(res.msg);\n        });\n    },\n    // 详情\n    Info(row) {\n      this.rows = row;\n      this.modals = true;\n      this.loading2 = true;\n      let data = {\n        tablename: row.name,\n      };\n      backupReadListApi(data)\n        .then(async (res) => {\n          let data = res.data;\n          this.tabList3 = data.list;\n          this.loading2 = false;\n        })\n        .catch((res) => {\n          this.loading2 = false;\n          this.$message.error(res.msg);\n        });\n    },\n    isEditMark(row) {\n      row.is_edit = true;\n      this.$nextTick((e) => {\n        this.$refs.mark.focus();\n      });\n    },\n    isEditBlur(row, type) {\n      row.is_edit = false;\n      this.changeMarkData.table = row.name || row.TABLE_NAME;\n      this.changeMarkData.field = row.COLUMN_NAME || '';\n      this.changeMarkData.type = row.COLUMN_TYPE || '';\n      this.changeMarkData.is_field = type;\n      this.changeMarkData.mark = type ? row.COLUMN_COMMENT : row.comment;\n\n      updateMark(this.changeMarkData)\n        .then((res) => {\n          // this.$message.success(res.msg);\n        })\n        .catch((err) => {\n          this.$message.error(err.msg);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"stylus\">\n::v-deep .el-tabs__item {\n  height: 54px !important;\n  line-height: 54px !important;\n}\n.tableBox ::v-deep .ivu-table-header table\n   border none !important\n\n.table-mark{\n  cursor: text;\n}\n.table-mark:hover{\n  border:1px solid #c2c2c2;\n  padding: 3px 5px\n}\n.mark ::v-deep .ivu-input{\n    background: #fff;\n    border-radius: .39rem;\n}\n.mark ::v-deep .ivu-input, .ivu-input:hover, .ivu-input:focus {\n    border: transparent;\n    box-shadow: none;\n}\n</style>\n"]}]}