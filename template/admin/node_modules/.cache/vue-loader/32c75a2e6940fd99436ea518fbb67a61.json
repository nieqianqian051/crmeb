{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/setting/systemOutInterface/index.vue?vue&type=style&index=0&id=370e8140&lang=stylus&scoped=true","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/setting/systemOutInterface/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/stylus-loader/index.js","mtime":1746465207601},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5yZXNldCB7CiAgbWFyZ2luLWxlZnQ6IDEwcHg7Cn0KLmNhcmQtdHJlZSB7CiAgIGhlaWdodDogNzJweDsKICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgb3ZlcmZsb3cteDogc2Nyb2xsOyAvKiDorr7nva7muqLlh7rmu5rliqggKi8KICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAgb3ZlcmZsb3cteTogaGlkZGVuOwogICAvKiDpmpDol4/mu5rliqjmnaEgKi8KICAgc2Nyb2xsYmFyLXdpZHRoOiBub25lOyAvKiBmaXJlZm94ICovCiAgIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTsgLyogSUUgMTArICovCn0KLmNhcmQtdHJlZTo6LXdlYmtpdC1zY3JvbGxiYXIgewogICAgZGlzcGxheTogbm9uZTsgLyogQ2hyb21lIFNhZmFyaSAqLwp9Ci5tYWluIHsKICB3aWR0aDogMTAwJTsKICBkaXNwbGF5OiBmbGV4OwogIC5tYWluLWJ0biB7fQogIC5jYXJkLXRyZWV7CiAgICB3aWR0aDogMjcwcHg7CiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAxMTVweCk7CiAgICBvdmVyZmxvdy15OiBzY3JvbGw7CiAgfQogIDo6di1kZWVwIC50cmVlIHsKICAgIC50cmVlLWxpc3R7CiAgICAgIG1hcmdpbi1sZWZ0OjEwcHg7CgogICAgfQogICAgLnZ0bC1jYXJldHsKICAgICAgcGFkZGluZy1yaWdodDogMnB4OwogICAgfQogICAgLnJlcS1tZXRob2QgewogICAgICBkaXNwbGF5OmJsb2NrOwogICAgICBwYWRkaW5nOiAwcHggMnB4OwogICAgICBmb250LXNpemU6IDEycHg7CiAgICAgIG1hcmdpbi1yaWdodDogNXB4OwogICAgICBib3JkZXItcmFkaXVzOiA0cHg7CgogICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwogICAgfQoKICAgIC50cmVlLW5vZGUgewogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgLy8gd2lkdGg6MjAwcHg7CiAgICAgIHBhZGRpbmc6IDNweCA3cHggM3B4IDA7CiAgICB9CiAgICAubm9kZXsKICAgICAgcGFkZGluZzo3cHggMnB4IDdweCAwcHg7CiAgICB9CiAgICAub3BlbiB7CiAgICAgIC8vIGJhY2tncm91bmQtY29sb3I6ICNmZmYxZWY7CiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7CiAgICAgIGNvbG9yOiAjMzMzOwogICAgfQogIH0KCiAgOjp2LWRlZXAgLnZ0bC1ub2RlLW1haW4gLnZ0bC1vcGVyYXRpb24gewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgcmlnaHQ6IDIwcHg7CiAgfQoKICA6OnYtZGVlcCAudnRsLW5vZGUtY29udGVudCB7CiAgICB3aWR0aDogMTAwJTsKICB9CgogIC5wb3AtbWVudSB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIH0KCiAgOjp2LWRlZXAgLnZ0bC1ub2RlLWNvbnRlbnQgLmFkZCB7CiAgICBkaXNwbGF5OiBub25lOwogICAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogIH0KCiAgOjp2LWRlZXAgLnZ0bC1ub2RlLWNvbnRlbnQ6aG92ZXIgLmFkZCB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgd2lkdGg6IDIwcHg7CiAgICBoZWlnaHQ6IDIwcHg7CiAgfQoKICA6OnYtZGVlcCAudnRsLW5vZGUtY29udGVudDpob3ZlciAuYWRkOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CgogICAgLnBvcC1tZW51IHsKICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgfQogIH0KICA6OnYtZGVlcCAudnRsLW5vZGUtbWFpbnsKICAgIHBhZGRpbmc6MDsKICB9CiAgOjp2LWRlZXAgLmxpbmUxIHsKICAgIGRpc3BsYXk6IHRhYmxlLWNhcHRpb247CiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOwogICAgd2lkdGg6IDEyMHB4OwogICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwogIH0KICA6OnYtZGVlcCAuaXZ1LWZvcm0taXRlbXsKICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgfQogIC5yaWdodC1jYXJkIHsKICAgIGZsZXg6IDE7CiAgICBtYXgtaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTE1cHgpOwogICAgb3ZlcmZsb3cteTogc2Nyb2xsOwogIH0KCiAgLmRhdGEgewogICAgZmxleDogMTsKCiAgICAucmVxLW1ldGhvZCB7CiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7CiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgICAgY29sb3I6ICNmZmY7CiAgICAgIHBhZGRpbmc6IDNweCA3cHg7CiAgICB9CgogICAgLmVpZHQtc3ViIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwoKICAgICAgLm5hbWUgewogICAgICAgIGZvbnQtc2l6ZTogMjBweDsKICAgICAgICBmb250LXdlaWdodDogNTAwOwogICAgICB9CiAgICB9CgogICAgLnRpdGxlIHsKICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICBmb250LXdlaWdodDogNTAwOwogICAgICBtYXJnaW4tYm90dG9tOiAxNXB4OwogICAgfQoKICAgIC5wZXJXMjAgewogICAgICB3aWR0aDogNTAwcHg7CiAgICB9CgogICAgLnRleHQtYXJlYSB7CiAgICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsKICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDsKCiAgICB9CiAgfQoKICA6OnYtZGVlcCAuaXZ1LXRyZWUtdGl0bGUgewogICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICB9CiAgOjp2LWRlZXAgLnZ0bC10cmVlLW1hcmdpbnsKICAgIG1hcmdpbi1sZWZ0OiA1cHg7CiAgfQogIDo6di1kZWVwIC5pdnUtYnRuLWljb24tb25seS5pdnUtYnRuLXNtYWxsIHsKICAgIHdpZHRoOiAyOHB4OwogIH0KCiAgLm5vdGhpbmcgewogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgIG1pbi1oZWlnaHQ6IDgwMHB4OwoKICAgIC5ib3g6aG92ZXIgewogICAgICBib3JkZXI6IDFweCBzb2xpZCBwaW5rOwogICAgfQoKICAgIC5ib3ggewogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgd2lkdGg6IDE1MHB4OwogICAgICBoZWlnaHQ6IDIwMHB4OwogICAgICBtYXJnaW46IDAgMjBweDsKICAgICAgYm9yZGVyLXJhZGl1czogMTBweDsKICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmOwoKICAgICAgLmljb24gewogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICBoZWlnaHQ6IDE1MHB4OwogICAgICAgIGZvbnQtc2l6ZTogNDBweDsKICAgICAgICBjb2xvcjogIzJkOGNmMDsKICAgICAgICBiYWNrZ3JvdW5kOiAjZjFmMWYxOwogICAgICB9CgogICAgICAudGV4dCB7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgaGVpZ2h0OiA1MHB4OwogICAgICAgIGJhY2tncm91bmQ6ICNkZGQ7CiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgIGxpbmUtaGVpZ2h0OiA1MHB4OwogICAgICAgIGZvbnQtc2l6ZTogMTRweDsKICAgICAgICBmb250LXdlaWdodDogNTAwOwogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAqfile":"index.vue","sourceRoot":"src/pages/setting/systemOutInterface","sourcesContent":["<template>\n  <div>\n    <div class=\"main\">\n      <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt mr20 card-tree\">\n        <div class=\"tree\">\n          <div class=\"main-btn\">\n            <el-button class=\"mb10\" type=\"primary\" @click=\"clickMenu(4)\" long>新增分类</el-button>\n          </div>\n\n          <vue-tree-list\n            class=\"tree-list\"\n            @change-name=\"onChangeName\"\n            @delete-node=\"onDel\"\n            :model=\"treeData\"\n            default-tree-node-name=\"默认文件夹\"\n            default-leaf-node-name=\"默认接口名\"\n            v-bind:default-expanded=\"true\"\n          >\n            <template v-slot:leafNameDisplay=\"slotProps\">\n              <div></div>\n              <div\n                class=\"tree-node\"\n                :class=\"{ node: slotProps.model.method, open: formValidate.id == slotProps.model.id }\"\n                @click.stop=\"onClick(slotProps.model)\"\n              >\n                <span class=\"\" :class=\"{ open: formValidate.id == slotProps.model.id }\">{{\n                  slotProps.model.name\n                }}</span>\n                <el-dropdown\n                  size=\"small\"\n                  @command=\"\n                    (name) => {\n                      clickMenu(name, slotProps.model);\n                    }\n                  \"\n                >\n                  <span class=\"el-dropdown-link\">\n                    <i class=\"el-icon-arrow-down el-icon--right\"></i>\n                  </span>\n                  <template slot=\"dropdown\">\n                    <el-dropdown-menu>\n                      <el-dropdown-item command=\"1\" v-if=\"!slotProps.model.method\">新增接口</el-dropdown-item>\n                      <el-dropdown-item command=\"2\" v-if=\"!slotProps.model.method\">编辑分类名</el-dropdown-item>\n                      <el-dropdown-item command=\"3\">删除</el-dropdown-item>\n                    </el-dropdown-menu>\n                  </template>\n                </el-dropdown>\n              </div>\n            </template>\n            <!-- 新建文件夹 -->\n            <span class=\"icon\" slot=\"addTreeNodeIcon\"></span>\n            <span class=\"icon\" slot=\"addLeafNodeIcon\"></span>\n            <span class=\"icon\" slot=\"editNodeIcon\"> </span>\n            <span class=\"icon\" slot=\"delNodeIcon\"></span>\n            <template v-slot:treeNodeIcon=\"slotProps\">\n              <span\n                v-if=\"slotProps.model.method\"\n                class=\"req-method\"\n                :style=\"{\n                  color: methodsColor(slotProps.model.method),\n                  'font-weight': slotProps.model.id == formValidate.id ? '500' : '500',\n                }\"\n                >{{ slotProps.model.method == 'delete' ? 'DEL' : slotProps.model.method || '' }}</span\n              >\n\n              <!-- <span v-if=\"slotProps.model.method\"></span> -->\n            </template>\n          </vue-tree-list>\n        </div>\n      </el-card>\n      <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt right-card\">\n        <div class=\"data\">\n          <div class=\"eidt-sub\">\n            <div class=\"name\">\n              {{ formValidate.name }}\n            </div>\n            <div>\n              <!-- <el-button type=\"primary\" class=\"submission mr20\" @click=\"debugging()\">调试</el-button> -->\n              <el-button v-if=\"formValidate.id\" type=\"primary\" class=\"submission mr20\" @click=\"isEdit = !isEdit\">{{\n                isEdit ? '返回' : '编辑'\n              }}</el-button>\n              <el-button v-if=\"isEdit\" type=\"primary\" class=\"submission\" @click=\"handleSubmit('formValidate')\"\n                >保存</el-button\n              >\n            </div>\n          </div>\n          <el-form\n            class=\"formValidate mt20\"\n            ref=\"formValidate\"\n            :rules=\"ruleValidate\"\n            :model=\"formValidate\"\n            label-width=\"100px\"\n            :label-position=\"labelPosition\"\n            @submit.native.prevent\n          >\n            <el-row :gutter=\"24\">\n              <el-col :span=\"24\">\n                <div class=\"title\">接口信息</div>\n                <el-form-item label=\"接口名称：\" prop=\"name\">\n                  <el-input\n                    v-if=\"isEdit\"\n                    class=\"perW20\"\n                    type=\"text\"\n                    :rows=\"4\"\n                    v-model.trim=\"formValidate.name\"\n                    placeholder=\"请输入\"\n                  />\n                  <span v-else>{{ formValidate.name || '' }}</span>\n                </el-form-item>\n                <el-form-item label=\"请求类型：\" prop=\"name\">\n                  <el-select v-if=\"isEdit\" v-model=\"formValidate.method\" style=\"width: 120px\">\n                    <el-option\n                      v-for=\"(item, index) in requestTypeList\"\n                      :key=\"index\"\n                      :value=\"item.value\"\n                      :label=\"item.label\"\n                    ></el-option>\n                  </el-select>\n                  <span v-else class=\"req-method\" :style=\"'background-color:' + methodColor\">{{\n                    formValidate.method || ''\n                  }}</span>\n                </el-form-item>\n                <el-form-item label=\"功能描述：\" prop=\"name\">\n                  <el-input\n                    v-if=\"isEdit\"\n                    class=\"perW20\"\n                    type=\"textarea\"\n                    :rows=\"4\"\n                    v-model.trim=\"formValidate.describe\"\n                    placeholder=\"请输入\"\n                  />\n                  <span v-else class=\"text-area\">{{ formValidate.describe || '' }}</span>\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"24\">\n              <el-col :span=\"24\">\n                <div class=\"title\">调用方式</div>\n                <el-form-item label=\"调用内容：\" prop=\"url\">\n                  <el-input\n                    v-if=\"isEdit\"\n                    class=\"perW20\"\n                    type=\"text\"\n                    :rows=\"4\"\n                    v-model.trim=\"formValidate.url\"\n                    placeholder=\"请输入\"\n                  />\n                  <span v-else>{{ formValidate.url || '' }}</span>\n                </el-form-item>\n                <el-form-item label=\"请求参数：\">\n                  <vxe-table\n                    resizable\n                    show-overflow\n                    keep-source\n                    ref=\"xTable\"\n                    row-id=\"id\"\n                    :print-config=\"{}\"\n                    :export-config=\"{}\"\n                    v-loading=\"loading\"\n                    :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n                    :data=\"formValidate.request_params\"\n                  >\n                    <!-- <vxe-column type=\"checkbox\" width=\"60\"></vxe-column> -->\n                    <vxe-column field=\"attribute\" width=\"300\" title=\"属性\" tree-node :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.attribute\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.attribute || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"type\" title=\"类型\" width=\"200\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <!-- <vxe-select v-if=\"isEdit\" v-model=\"row.type\" type=\"text\" :optionGroups=\"typeList\"></vxe-select> -->\n                        <vxe-select v-if=\"isEdit\" v-model=\"row.type\" transfer>\n                          <vxe-option\n                            v-for=\"item in typeList\"\n                            :key=\"item.value\"\n                            :value=\"item.value\"\n                            :label=\"item.label\"\n                          ></vxe-option>\n                        </vxe-select>\n                        <span v-else>{{ row.type || '' }}</span>\n\n                        <!-- <vxe-select v-model=\"row.type\">\n                      <vxe-option v-for=\"num in 12\" :key=\"num\" :value=\"num\" :label=\"num\"></vxe-option>\n                    </vxe-select> -->\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"must\" title=\"必填\" width=\"100\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-checkbox\n                          v-if=\"isEdit\"\n                          v-model=\"row.must\"\n                          :unchecked-value=\"'0'\"\n                          :checked-value=\"'1'\"\n                        ></vxe-checkbox>\n                        <span v-else>{{ row.must == '1' ? '是' : '否' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"trip\" title=\"说明\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.trip\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.trip || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column title=\"操作\" width=\"200\" v-if=\"isEdit\">\n                      <template #default=\"{ row }\">\n                        <vxe-button\n                          type=\"text\"\n                          v-if=\"row.type === 'array'\"\n                          status=\"primary\"\n                          @click=\"insertRow(row, 'xTable')\"\n                          >插入</vxe-button\n                        >\n                        <vxe-button type=\"text\" status=\"primary\" @click=\"removeRow(row, 'xTable')\">删除</vxe-button>\n                      </template>\n                    </vxe-column>\n                  </vxe-table>\n\n                  <el-button class=\"mt10\" v-if=\"isEdit\" type=\"primary\" @click=\"insertEvent('xTable')\"\n                    >添加参数</el-button\n                  >\n                </el-form-item>\n                <el-form-item label=\"返回参数：\">\n                  <vxe-table\n                    resizable\n                    show-overflow\n                    keep-source\n                    ref=\"resTable\"\n                    row-id=\"id\"\n                    :print-config=\"{}\"\n                    :export-config=\"{}\"\n                    :loading=\"loading\"\n                    :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n                    :data=\"formValidate.return_params\"\n                  >\n                    <!-- <vxe-column type=\"checkbox\" width=\"60\"></vxe-column> -->\n                    <vxe-column field=\"attribute\" title=\"属性\" width=\"300\" tree-node :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.attribute\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.attribute || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"type\" title=\"类型\" width=\"200\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-select v-if=\"isEdit\" v-model=\"row.type\" transfer>\n                          <vxe-option\n                            v-for=\"item in typeList\"\n                            :key=\"item.value\"\n                            :value=\"item.value\"\n                            :label=\"item.label\"\n                          ></vxe-option>\n                        </vxe-select>\n                        <span v-else>{{ row.type || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <!-- <vxe-column field=\"type\" title=\"必填\" :edit-render=\"{}\">\n                  <template #default=\"{ row }\">\n                    <vxe-checkbox v-model=\"row.must\" :unchecked-value=\"0\" :checked-value=\"1\"></vxe-checkbox\n                    >{{ row.must }}\n                  </template>\n                </vxe-column> -->\n                    <vxe-column field=\"trip\" title=\"说明\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.trip\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.trip || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column title=\"操作\" width=\"200\" v-if=\"isEdit\">\n                      <template #default=\"{ row }\">\n                        <vxe-button\n                          type=\"text\"\n                          v-if=\"row.type === 'array'\"\n                          status=\"primary\"\n                          @click=\"insertRow(row, 'resTable')\"\n                          >插入</vxe-button\n                        >\n                        <vxe-button type=\"text\" status=\"primary\" @click=\"removeRow(row, 'resTable')\">删除</vxe-button>\n                      </template>\n                    </vxe-column>\n                  </vxe-table>\n                  <el-button class=\"mt10\" v-if=\"isEdit\" type=\"primary\" @click=\"insertEvent('resTable')\"\n                    >添加参数</el-button\n                  >\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"24\">\n              <el-col :span=\"24\">\n                <div class=\"title\">调用示例</div>\n                <el-form-item label=\"请求数据示例：\" prop=\"request_example\">\n                  <el-input\n                    v-if=\"isEdit\"\n                    class=\"perW20\"\n                    type=\"textarea\"\n                    :rows=\"4\"\n                    v-model.trim=\"formValidate.request_example\"\n                    placeholder=\"请输入\"\n                  />\n                  <span v-else class=\"text-area\">{{ formValidate.request_example || '' }}</span>\n                </el-form-item>\n                <el-form-item label=\"返回数据示例：\" prop=\"return_example\">\n                  <el-input\n                    v-if=\"isEdit\"\n                    class=\"perW20\"\n                    type=\"textarea\"\n                    :rows=\"4\"\n                    v-model.trim=\"formValidate.return_example\"\n                    placeholder=\"请输入\"\n                  />\n                  <span v-else class=\"text-area\">{{ formValidate.return_example || '' }}</span>\n                </el-form-item>\n                <el-form-item label=\"错误码：\">\n                  <vxe-table\n                    resizable\n                    show-overflow\n                    keep-source\n                    ref=\"codeTable\"\n                    row-id=\"id\"\n                    :print-config=\"{}\"\n                    :export-config=\"{}\"\n                    :loading=\"loading\"\n                    :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n                    :data=\"formValidate.error_code\"\n                  >\n                    <!-- <vxe-column type=\"checkbox\" width=\"60\"></vxe-column> -->\n                    <vxe-column field=\"code\" title=\"错误码\" tree-node :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.code\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.code || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"value\" title=\"错误码取值\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.value\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.value || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"solution\" title=\"解决方案\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.solution\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.solution || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column title=\"操作\" v-if=\"isEdit\">\n                      <template #default=\"{ row }\">\n                        <vxe-button type=\"text\" status=\"primary\" @click=\"removeRow(row, 'codeTable')\">删除</vxe-button>\n                      </template>\n                    </vxe-column>\n                  </vxe-table>\n                  <el-button class=\"mt10\" v-if=\"isEdit\" type=\"primary\" @click=\"insertEvent('codeTable')\"\n                    >添加参数</el-button\n                  >\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <!-- <el-row :gutter=\"24\" >\n              <el-col :span=\"24\">\n                <el-form-item>\n                  <el-button type=\"primary\" class=\"submission\" @click=\"handleSubmit('formValidate')\">保存</el-button>\n                </el-form-item>\n              </el-col>\n            </el-row> -->\n          </el-form>\n        </div>\n        <!-- <div v-else class=\"nothing\">\n          <div class=\"box\" @click=\"clickMenu(4)\">\n            <div class=\"icon\">\n              <Icon type=\"ios-folder\" />\n            </div>\n            <div class=\"text\">新建文件</div>\n          </div>\n          <div class=\"box\" @click=\"clickMenu(1)\">\n            <div class=\"icon\">\n              <Icon type=\"logo-linkedin\" />\n            </div>\n            <div class=\"text\">新建接口</div>\n          </div>\n        </div> -->\n      </el-card>\n    </div>\n    <el-dialog :visible.sync=\"nameModal\" width=\"470px\" title=\"分组名称\" @on-ok=\"asyncOK\">\n      <label>分组名称：</label>\n      <el-input v-model=\"value\" placeholder=\"请输入分组名称\" style=\"width: 85%\" />\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"nameModal = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"asyncOK\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog :visible.sync=\"debuggingModal\" :title=\"formValidate.name\" width=\"1000px\">\n      <debugging\n        v-if=\"debuggingModal\"\n        :formValidate=\"formValidate\"\n        :typeList=\"typeList\"\n        :requestTypeList=\"requestTypeList\"\n      />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { interfaceList, interfaceDet, interfaceSave, interfaceEditName, interfaceDel } from '@/api/systemOutAccount';\nimport { VueTreeList, Tree, TreeNode } from 'vue-tree-list';\nimport debugging from './debugging.vue';\nimport { mapState } from 'vuex';\nimport {storageStatusApi} from \"@api/setting\";\nexport default {\n  name: 'systemOutInterface',\n  components: {\n    VueTreeList,\n    debugging,\n  },\n  data() {\n    return {\n      value: '',\n      isEdit: false,\n      nameModal: false,\n      debuggingModal: false,\n      formValidate: {},\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      ruleValidate: {\n        title: [{ message: '请输入正确的描述 (不能多于200位数)', trigger: 'blur', max: 200 }],\n      },\n      loading: false,\n\n      typeList: [\n        {\n          value: 'string',\n          label: 'String',\n        },\n        {\n          value: 'array',\n          label: 'Array',\n        },\n        {\n          value: 'number',\n          label: 'Number',\n        },\n        {\n          value: 'boolean',\n          label: 'Boolean',\n        },\n        {\n          value: 'null',\n          label: 'Null',\n        },\n        {\n          value: 'any',\n          label: 'Any',\n        },\n      ],\n      requestTypeList: [\n        {\n          value: 'get',\n          label: 'get',\n        },\n        {\n          value: 'post',\n          label: 'post',\n        },\n        {\n          value: 'delete',\n          label: 'delete',\n        },\n        {\n          value: 'put',\n          label: 'put',\n        },\n        {\n          value: 'options',\n          label: 'options',\n        },\n      ],\n      contextData: null, //左侧导航右键点击是产生的数据对象\n      treeData: undefined,\n      buttonProps: {\n        type: 'default',\n        size: 'small',\n      },\n      methodColor: '#fff',\n    };\n  },\n  watch: {\n    ['formValidate.method']: {\n      deep: true,\n      handler(newVal, oldVal) {\n        let method = newVal.toUpperCase();\n        if (method == 'GET') {\n          this.methodColor = '#61affe';\n        } else if (method == 'POST') {\n          this.methodColor = '#49cc90';\n        } else if (method == 'PUT') {\n          this.methodColor = '#fca130';\n        } else if (method == 'DELETE') {\n          this.methodColor = '#f93e3e';\n        }\n      },\n    },\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : '50px';\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  created() {\n    this.getInterfaceList('one');\n  },\n  methods: {\n    debugging() {\n      this.debuggingModal = true;\n    },\n    onClicksss(e) {},\n    methodsColor(newVal) {\n      let method = newVal.toUpperCase();\n      if (method == 'GET') {\n        return '#61affe';\n      } else if (method == 'POST') {\n        return '#49cc90';\n      } else if (method == 'PUT') {\n        return '#fca130';\n      } else if (method == 'DELETE') {\n        return '#f93e3e';\n      }\n    },\n    insertBefore(params) {},\n    insertAfter(params) {},\n    moveInto(params) {},\n    async addTableData() {\n      const { row: data } = await $table.insertAt(newRow, -1);\n      await $table.setActiveCell(data, 'name');\n    },\n    getInterfaceList(disk_type) {\n      interfaceList()\n        .then((res) => {\n          res.data[0].expand = false;\n          this.treeData = new Tree(res.data);\n\n          if (res.data.length) {\n            if (res.data[0].children.length) {\n              this.onClick(res.data[0].children[0]);\n            }\n          }\n        })\n        .catch((err) => {\n          this.$message.error(err);\n        });\n    },\n    onClick(params) {\n      if (params.method) {\n        this.isEdit = false;\n        interfaceDet(params.id)\n          .then((res) => {\n            this.formValidate = res.data;\n          })\n          .catch((err) => {\n            this.$message.error(err);\n          });\n      }\n    },\n    async handleSubmit() {\n      if (!this.formValidate.name) {\n        return this.$message.warning('请输入接口名称');\n      } else if (!this.formValidate.method) {\n        return this.$message.warning('请选择请求类型');\n      } else if (!this.formValidate.url) {\n        return this.$message.warning('请输入调用方式');\n      }\n      this.formValidate.request_params = await this.$refs.xTable.getTableData().tableData;\n      this.formValidate.return_params = await this.$refs.resTable.getTableData().tableData;\n      this.formValidate.error_code = await this.$refs.codeTable.getTableData().tableData;\n      await interfaceSave(this.formValidate)\n        .then((res) => {\n          this.isEdit = false;\n          this.$message.success(res.msg);\n          this.getInterfaceList();\n        })\n        .catch((err) => {\n          this.$message.error(err);\n        });\n    },\n    async insertEvent(type) {\n      const $table = this.$refs[type];\n      let newRow;\n      if (type == 'xTable') {\n        newRow = {\n          attribute: '',\n          type: '',\n          must: 0,\n          trip: '',\n        };\n      } else if (type == 'resTable') {\n        newRow = {\n          attribute: '',\n          type: '',\n          trip: '',\n        };\n      } else {\n        newRow = {\n          code: '',\n          value: '',\n          solution: '',\n        };\n      }\n      // $table.insert(newRow).then(({ row }) => $table.setEditRow(row, -1));\n      const { row: data } = await $table.insertAt(newRow, -1);\n      await $table.setActiveCell(data, 'name');\n    },\n    async insertRow(currRow, type) {\n      const $table = this.$refs[type];\n      // 如果 null 则插入到目标节点顶部\n      // 如果 -1 则插入到目标节点底部\n      // 如果 row 则有插入到效的目标节点该行的位置\n      let record;\n      if (type == 'xTable') {\n        record = {\n          attribute: '',\n          type: '',\n          must: 0,\n          trip: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      } else if (type == 'resTable') {\n        record = {\n          attribute: '',\n          type: '',\n          trip: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      } else {\n        record = {\n          code: '',\n          value: '',\n          solution: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      }\n      const { row: newRow } = await $table.insertAt(record, -1);\n      await $table.setTreeExpand(currRow, true); // 将父节点展开\n      await $table.setActiveRow(newRow); // 插入子节点\n    },\n    async removeRow(row, type) {\n      const $table = this.$refs[type];\n      await $table.remove(row);\n    },\n    // 修改名字\n    add() {\n      this.value = '';\n      this.formValidate.id = 0;\n      this.nameModal = true;\n    },\n    // 点击菜单\n    clickMenu(name, params) {\n      if (name == 1) {\n        this.formValidate = {};\n        this.formValidate.pid = params ? params.id : 0;\n        this.formValidate.id = 0;\n        this.isEdit = true;\n      } else if (name == 2) {\n        this.value = params.name || '';\n        this.formValidate.id = params ? params.id : 0;\n        this.nameModal = true;\n      } else if (name == 3) {\n        this.onDel(params);\n      } else if (name == 4) {\n        this.add();\n      }\n    },\n\n    addFac(params) {\n      this.formValidate = {\n        id: params ? params.id : 0,\n      };\n      this.isEdit = true;\n    },\n    asyncOK() {\n      let data = {\n        id: this.formValidate.id || 0,\n        type: 0,\n        name: this.value,\n      };\n      interfaceSave(data)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.getInterfaceList();\n        })\n        .catch((err) => {\n          this.$message.error(err);\n        });\n    },\n    //侧边栏右键点击事件\n    handleContextMenu(data, event, position) {\n      position.left = Number(position.left.slice(0, -2)) + 75 + 'px';\n      this.contextData = data;\n    },\n    handleContextCreateFolder() {},\n    handleContextCreateFile() {},\n    // 自定义显示\n    renderContent(h, { root, node, data }) {\n      let that = this;\n      return h(\n        'span',\n        {\n          style: {\n            display: 'inline-block',\n            width: '100%',\n          },\n        },\n        [\n          h('span', [\n            h(resolveComponent('Icon'), {\n              type: 'ios-paper-outline',\n              style: {\n                marginRight: '8px',\n              },\n            }),\n            h('span', data.title),\n          ]),\n          h(\n            'span',\n            {\n              style: {\n                display: 'inline-block',\n                float: 'right',\n                marginRight: '32px',\n              },\n            },\n            [\n              h(resolveComponent('Button'), {\n                ...this.buttonProps,\n                icon: 'ios-add',\n                style: {\n                  marginRight: '8px',\n                },\n                onClick: () => {\n                  this.append(data);\n                },\n              }),\n              h(resolveComponent('Button'), {\n                ...this.buttonProps,\n                icon: 'ios-remove',\n                onClick: () => {\n                  this.remove(root, node, data);\n                },\n              }),\n            ],\n          ),\n        ],\n      );\n    },\n    /**\n     * 侧边栏点击事件\n     * @param {Object} data\n     */\n    clickDir(data, root, node) {\n      let that = this;\n      that.navItem = data;\n      that.pathname = data.pathname;\n    },\n    append(data) {\n      const children = data.children || [];\n      children.push({\n        title: 'appended node',\n        expand: true,\n      });\n      this.$set(data, 'children', children);\n    },\n    remove(root, node, data) {\n      const parentKey = root.find((el) => el === node).parent;\n      const parent = root.find((el) => el.nodeKey === parentKey).node;\n      const index = parent.children.indexOf(data);\n      parent.children.splice(index, 1);\n    },\n    onMouseOver(root, node, data, e, d) {\n      console.log(root, node, data);\n    },\n    //\n    onDel(node) {\n      this.$msgbox({\n        title: '提示',\n        message:'删除后无法恢复，请确认后删除！',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        confirmButtonText: '确定',\n        iconClass: 'el-icon-warning',\n        confirmButtonClass: 'btn-custom-cancel'\n      }).then(() => {\n        interfaceDel(node.id)\n          .then((res) => {\n            this.$message.success(res.msg);\n            node.remove();\n          })\n          .catch((err) => {\n            this.$message.error(err);\n          });\n      }).catch(() => {\n\n      })\n    },\n\n    onChangeName(params) {\n      if (params.eventType == 'blur') {\n        let data = {\n          name: params.newName,\n          id: params.id,\n        };\n        interfaceEditName(data)\n          .then((res) => {\n            this.$message.success(res.msg);\n          })\n          .catch((err) => {\n            this.$message.error(err);\n          });\n      }\n    },\n\n    onAddNode(params) {\n      // this.$router.push({\n      //   path: '/admin/setting/system_out_interface/add',\n      //   query: {\n      //     pid: params.pid,\n      //   },\n      // });\n    },\n\n    addNode() {\n      var node = new TreeNode({ name: 'new node', isLeaf: false });\n      if (!this.data.children) this.data.children = [];\n      this.data.addChildren(node);\n    },\n\n    getNewTree() {\n      var vm = this;\n      function _dfs(oldNode) {\n        var newNode = {};\n\n        for (var k in oldNode) {\n          if (k !== 'children' && k !== 'parent') {\n            newNode[k] = oldNode[k];\n          }\n        }\n\n        if (oldNode.children && oldNode.children.length > 0) {\n          newNode.children = [];\n          for (var i = 0, len = oldNode.children.length; i < len; i++) {\n            newNode.children.push(_dfs(oldNode.children[i]));\n          }\n        }\n        return newNode;\n      }\n\n      vm.newTree = _dfs(vm.data);\n    },\n  },\n};\n</script>\n\n<style lang=\"stylus\" scoped>\n.reset {\n  margin-left: 10px;\n}\n.card-tree {\n   height: 72px;\n   box-sizing: border-box;\n   overflow-x: scroll; /* 设置溢出滚动 */\n   white-space: nowrap;\n   overflow-y: hidden;\n   /* 隐藏滚动条 */\n   scrollbar-width: none; /* firefox */\n   -ms-overflow-style: none; /* IE 10+ */\n}\n.card-tree::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.main {\n  width: 100%;\n  display: flex;\n  .main-btn {}\n  .card-tree{\n    width: 270px;\n    height: calc(100vh - 115px);\n    overflow-y: scroll;\n  }\n  ::v-deep .tree {\n    .tree-list{\n      margin-left:10px;\n\n    }\n    .vtl-caret{\n      padding-right: 2px;\n    }\n    .req-method {\n      display:block;\n      padding: 0px 2px;\n      font-size: 12px;\n      margin-right: 5px;\n      border-radius: 4px;\n\n      text-transform: uppercase;\n    }\n\n    .tree-node {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      cursor: pointer;\n      // width:200px;\n      padding: 3px 7px 3px 0;\n    }\n    .node{\n      padding:7px 2px 7px 0px;\n    }\n    .open {\n      // background-color: #fff1ef;\n      font-weight: 500;\n      color: #333;\n    }\n  }\n\n  ::v-deep .vtl-node-main .vtl-operation {\n    position: absolute;\n    right: 20px;\n  }\n\n  ::v-deep .vtl-node-content {\n    width: 100%;\n  }\n\n  .pop-menu {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  ::v-deep .vtl-node-content .add {\n    display: none;\n    margin-right: 10px;\n  }\n\n  ::v-deep .vtl-node-content:hover .add {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n  }\n\n  ::v-deep .vtl-node-content:hover .add:hover {\n    background-color: #fff;\n\n    .pop-menu {\n      font-size: 16px;\n    }\n  }\n  ::v-deep .vtl-node-main{\n    padding:0;\n  }\n  ::v-deep .line1 {\n    display: table-caption;\n    white-space: nowrap;\n    width: 120px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  ::v-deep .ivu-form-item{\n    margin-bottom: 10px;\n  }\n  .right-card {\n    flex: 1;\n    max-height: calc(100vh - 115px);\n    overflow-y: scroll;\n  }\n\n  .data {\n    flex: 1;\n\n    .req-method {\n      text-transform: uppercase;\n      border-radius: 4px;\n      color: #fff;\n      padding: 3px 7px;\n    }\n\n    .eidt-sub {\n      display: flex;\n      justify-content: space-between;\n\n      .name {\n        font-size: 20px;\n        font-weight: 500;\n      }\n    }\n\n    .title {\n      font-size: 16px;\n      font-weight: 500;\n      margin-bottom: 15px;\n    }\n\n    .perW20 {\n      width: 500px;\n    }\n\n    .text-area {\n      white-space: pre-wrap;\n      word-break: break-word;\n\n    }\n  }\n\n  ::v-deep .ivu-tree-title {\n    width: 100% !important;\n  }\n  ::v-deep .vtl-tree-margin{\n    margin-left: 5px;\n  }\n  ::v-deep .ivu-btn-icon-only.ivu-btn-small {\n    width: 28px;\n  }\n\n  .nothing {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 800px;\n\n    .box:hover {\n      border: 1px solid pink;\n    }\n\n    .box {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      width: 150px;\n      height: 200px;\n      margin: 0 20px;\n      border-radius: 10px;\n      cursor: pointer;\n      overflow: hidden;\n      border: 1px solid #fff;\n\n      .icon {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        height: 150px;\n        font-size: 40px;\n        color: #2d8cf0;\n        background: #f1f1f1;\n      }\n\n      .text {\n        width: 100%;\n        height: 50px;\n        background: #ddd;\n        text-align: center;\n        line-height: 50px;\n        font-size: 14px;\n        font-weight: 500;\n      }\n    }\n  }\n}\n</style>\n"]}]}