{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/marketing/storeSeckill/create.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/marketing/storeSeckill/create.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/thread-loader/dist/cjs.js","mtime":1746465018446},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCBnb29kc0xpc3QgZnJvbSAnQC9jb21wb25lbnRzL2dvb2RzTGlzdC9pbmRleCc7CmltcG9ydCBXYW5nRWRpdG9yIGZyb20gJ0AvY29tcG9uZW50cy93YW5nRWRpdG9yL2luZGV4LnZ1ZSc7CmltcG9ydCB1cGxvYWRQaWN0dXJlcyBmcm9tICdAL2NvbXBvbmVudHMvdXBsb2FkUGljdHVyZXMnOwppbXBvcnQgeyBzZWNraWxsSW5mb0FwaSwgc2Vja2lsbEFkZEFwaSwgc2Vja2lsbFRpbWVMaXN0QXBpLCBwcm9kdWN0QXR0cnNBcGkgfSBmcm9tICdAL2FwaS9tYXJrZXRpbmcnOwppbXBvcnQgeyBwcm9kdWN0R2V0VGVtcGxhdGVBcGkgfSBmcm9tICdAL2FwaS9wcm9kdWN0JzsKaW1wb3J0IGZyZWlnaHRUZW1wbGF0ZSBmcm9tICdAL2NvbXBvbmVudHMvZnJlaWdodFRlbXBsYXRlL2luZGV4JzsKaW1wb3J0IHN0ZXBzIGZyb20gJ0AvY29tcG9uZW50cy9zdGVwcy9pbmRleCc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3N0b3JlU2Vja2lsbENyZWF0ZScsCiAgY29tcG9uZW50czogewogICAgZ29vZHNMaXN0LAogICAgdXBsb2FkUGljdHVyZXMsCiAgICBXYW5nRWRpdG9yLAogICAgZnJlaWdodFRlbXBsYXRlLAogICAgc3RlcHMsCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3RlcExpc3Q6IFsn6YCJ5oup56eS5p2A5ZWG5ZOBJywgJ+Whq+WGmeWfuuehgOS/oeaBrycsICfkv67mlLnllYblk4Hor6bmg4UnXSwKICAgICAgc3VibWl0T3BlbjogZmFsc2UsCiAgICAgIHNwaW5TaG93OiBmYWxzZSwKICAgICAgaXNDaG9pY2U6ICcnLAogICAgICBjdXJyZW50OiAwLAogICAgICBtb2RhbFBpYzogZmFsc2UsCiAgICAgIGdyaWQ6IHsKICAgICAgICB4bDogMTIsCiAgICAgICAgbGc6IDIwLAogICAgICAgIG1kOiAyNCwKICAgICAgICBzbTogMjQsCiAgICAgICAgeHM6IDI0LAogICAgICB9LAogICAgICBncmlkMjogewogICAgICAgIHhsOiA4LAogICAgICAgIGxnOiAxMiwKICAgICAgICBtZDogMTIsCiAgICAgICAgc206IDI0LAogICAgICAgIHhzOiAyNCwKICAgICAgfSwKICAgICAgZ3JpZFBpYzogewogICAgICAgIHhsOiA2LAogICAgICAgIGxnOiA4LAogICAgICAgIG1kOiAxMiwKICAgICAgICBzbTogMTIsCiAgICAgICAgeHM6IDEyLAogICAgICB9LAogICAgICBncmlkQnRuOiB7CiAgICAgICAgeGw6IDQsCiAgICAgICAgbGc6IDgsCiAgICAgICAgbWQ6IDgsCiAgICAgICAgc206IDgsCiAgICAgICAgeHM6IDgsCiAgICAgIH0sCiAgICAgIG15Q29uZmlnOiB7CiAgICAgICAgYXV0b0hlaWdodEVuYWJsZWQ6IGZhbHNlLCAvLyDnvJbovpHlmajkuI3oh6rliqjooqvlhoXlrrnmkpHpq5gKICAgICAgICBpbml0aWFsRnJhbWVIZWlnaHQ6IDUwMCwgLy8g5Yid5aeL5a655Zmo6auY5bqmCiAgICAgICAgaW5pdGlhbEZyYW1lV2lkdGg6ICcxMDAlJywgLy8g5Yid5aeL5a655Zmo5a695bqmCiAgICAgICAgVUVESVRPUl9IT01FX1VSTDogJy9VRWRpdG9yLycsCiAgICAgICAgc2VydmVyVXJsOiAnJywKICAgICAgfSwKICAgICAgbW9kYWxzOiBmYWxzZSwKICAgICAgbW9kYWxfbG9hZGluZzogZmFsc2UsCiAgICAgIGltYWdlczogW10sCiAgICAgIGZvcm1WYWxpZGF0ZTogewogICAgICAgIGltYWdlczogW10sCiAgICAgICAgaW5mbzogJycsCiAgICAgICAgdGl0bGU6ICcnLAogICAgICAgIGltYWdlOiAnJywKICAgICAgICB1bml0X25hbWU6ICcnLAogICAgICAgIHByaWNlOiAwLAogICAgICAgIGxvZ2lzdGljczogWycxJ10sIC8v6YCJ5oup54mp5rWB5pa55byPCiAgICAgICAgZnJlaWdodDogMiwgLy/ov5DotLnorr7nva4KICAgICAgICBwb3N0YWdlOiAxLCAvL+iuvue9rui/kOi0uemHkeminQogICAgICAgIG90X3ByaWNlOiAwLAogICAgICAgIGNvc3Q6IDAsCiAgICAgICAgc2FsZXM6IDAsCiAgICAgICAgc3RvY2s6IDAsCiAgICAgICAgc29ydDogMCwKICAgICAgICBudW06IDEsCiAgICAgICAgb25jZV9udW06IDEsCiAgICAgICAgZ2l2ZV9pbnRlZ3JhbDogMCwKICAgICAgICBwb3N0YWdlOiAwLAogICAgICAgIHNlY3Rpb25fdGltZTogW10sCiAgICAgICAgaXNfcG9zdGFnZTogMCwKICAgICAgICBpc19ob3Q6IDAsCiAgICAgICAgc3RhdHVzOiAwLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICBpZDogMCwKICAgICAgICBwcm9kdWN0X2lkOiAwLAogICAgICAgIHRlbXBfaWQ6ICcnLAogICAgICAgIHRpbWVfaWQ6ICcnLAogICAgICAgIGF0dHJzOiBbXSwKICAgICAgICBpdGVtczogW10sCiAgICAgICAgaXNfY29tbWlzc2lvbjogMAogICAgICB9LAogICAgICBkZXNjcmlwdGlvbjogJycsCiAgICAgIHRlbXBsYXRlTGlzdDogW10sCiAgICAgIHRpbWVMaXN0OiBbXSwKICAgICAgY29sdW1uczogW10sCiAgICAgIHNwZWNzRGF0YTogW10sCiAgICAgIHBpY1RpdDogJycsCiAgICAgIHRhYmxlSW5kZXg6IDAsCiAgICAgIHJ1bGVWYWxpZGF0ZTogewogICAgICAgIGltYWdlOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+mAieaLqeS4u+WbvicsIHRyaWdnZXI6ICdjaGFuZ2UnIH1dLAogICAgICAgIGltYWdlczogWwogICAgICAgICAgewogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgdHlwZTogJ2FycmF5JywKICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+mAieaLqeS4u+WbvicsCiAgICAgICAgICAgIHRyaWdnZXI6ICdjaGFuZ2UnLAogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgdHlwZTogJ2FycmF5JywKICAgICAgICAgICAgbWluOiAxLAogICAgICAgICAgICBtZXNzYWdlOiAnQ2hvb3NlIHR3byBob2JiaWVzIGF0IGJlc3QnLAogICAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJywKICAgICAgICAgIH0sCiAgICAgICAgXSwKICAgICAgICB0aXRsZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXllYblk4HmoIfpopgnLCB0cmlnZ2VyOiAnYmx1cicgfV0sCiAgICAgICAgaW5mbzogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXnp5LmnYDmtLvliqjnroDku4snLCB0cmlnZ2VyOiAnYmx1cicgfV0sCiAgICAgICAgc2VjdGlvbl90aW1lOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgICB0eXBlOiAnYXJyYXknLAogICAgICAgICAgICBtZXNzYWdlOiAn6K+36YCJ5oup5rS75Yqo5pe26Ze0JywKICAgICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScsCiAgICAgICAgICB9LAogICAgICAgIF0sCiAgICAgICAgdW5pdF9uYW1lOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeWNleS9jScsIHRyaWdnZXI6ICdibHVyJyB9XSwKICAgICAgICBwcmljZTogWwogICAgICAgICAgewogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgdHlwZTogJ251bWJlcicsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXnp5LmnYDku7cnLAogICAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicsCiAgICAgICAgICB9LAogICAgICAgIF0sCiAgICAgICAgb3RfcHJpY2U6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLAogICAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5Y6f5Lu3JywKICAgICAgICAgICAgdHJpZ2dlcjogJ2JsdXInLAogICAgICAgICAgfSwKICAgICAgICBdLAogICAgICAgIGNvc3Q6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLAogICAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5oiQ5pys5Lu3JywKICAgICAgICAgICAgdHJpZ2dlcjogJ2JsdXInLAogICAgICAgICAgfSwKICAgICAgICBdLAogICAgICAgIHN0b2NrOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgICB0eXBlOiAnbnVtYmVyJywKICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeW6k+WtmCcsCiAgICAgICAgICAgIHRyaWdnZXI6ICdibHVyJywKICAgICAgICAgIH0sCiAgICAgICAgXSwKICAgICAgICBudW06IFsKICAgICAgICAgIHsKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLAogICAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl6LSt5Lmw5pWw6YeP6ZmQ5Yi2JywKICAgICAgICAgICAgdHJpZ2dlcjogJ2JsdXInLAogICAgICAgICAgfSwKICAgICAgICBdLAogICAgICAgIG9uY2VfbnVtOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgICB0eXBlOiAnbnVtYmVyJywKICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeWNleasoei0reS5sOaVsOmHj+mZkOWIticsCiAgICAgICAgICAgIHRyaWdnZXI6ICdibHVyJywKICAgICAgICAgIH0sCiAgICAgICAgXSwKICAgICAgICB0ZW1wX2lkOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgICBtZXNzYWdlOiAn6K+36YCJ5oup6L+Q6LS55qih5p2/JywKICAgICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScsCiAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLAogICAgICAgICAgfSwKICAgICAgICBdLAogICAgICAgIHRpbWVfaWQ6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfor7fpgInmi6nlvIDlp4vml7bpl7QnLAogICAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJywKICAgICAgICAgICAgdHlwZTogJ251bWJlcicsCiAgICAgICAgICB9LAogICAgICAgIF0sCiAgICAgIH0sCiAgICAgIGNvcHk6IDAsCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKCdtZWRpYScsIFsnaXNNb2JpbGUnXSksCiAgICBsYWJlbFdpZHRoKCkgewogICAgICByZXR1cm4gdGhpcy5pc01vYmlsZSA/IHVuZGVmaW5lZCA6ICcxMzVweCc7CiAgICB9LAogICAgbGFiZWxQb3NpdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNNb2JpbGUgPyAndG9wJyA6ICdyaWdodCc7CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpIHsKICAgICAgdGhpcy5jb3B5ID0gdGhpcy4kcm91dGUucGFyYW1zLmNvcHk7CiAgICAgIHRoaXMuY3VycmVudCA9IDE7CiAgICAgIHRoaXMuZ2V0SW5mbygpOwogICAgfQogICAgdGhpcy5wcm9kdWN0R2V0VGVtcGxhdGUoKTsKICAgIHRoaXMuc2Vja2lsbFRpbWVMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRFZGl0b3JDb250ZW50KGRhdGEpIHsKICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRhdGE7CiAgICB9LAogICAgLy8g5re75Yqg6L+Q6LS55qih5p2/CiAgICBmcmVpZ2h0KCkgewogICAgICB0aGlzLiRyZWZzLnRlbXBsYXRlLmlkID0gMDsKICAgICAgdGhpcy4kcmVmcy50ZW1wbGF0ZS5pc1RlbXBsYXRlID0gdHJ1ZTsKICAgIH0sCiAgICAvLyDnp5LmnYDop4TmoLzvvJsKICAgIHByb2R1Y3RBdHRycyhyb3dzKSB7CiAgICAgIGxldCB0aGF0ID0gdGhpczsKICAgICAgcHJvZHVjdEF0dHJzQXBpKHJvd3MuaWQsIDEpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgbGV0IGRhdGEgPSByZXMuZGF0YS5pbmZvOwogICAgICAgICAgbGV0IHNlbGVjdGlvbiA9IHsKICAgICAgICAgICAgdHlwZTogJ3NlbGVjdGlvbicsCiAgICAgICAgICAgIHdpZHRoOiA2MCwKICAgICAgICAgICAgYWxpZ246ICdjZW50ZXInLAogICAgICAgICAgfTsKICAgICAgICAgIHRoYXQuc3BlY3NEYXRhID0gZGF0YS5hdHRyczsKICAgICAgICAgIHRoYXQuc3BlY3NEYXRhLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7CiAgICAgICAgICAgIHRoYXQuJHNldCh0aGF0LnNwZWNzRGF0YVtpbmRleF0sICdpZCcsIGluZGV4KTsKICAgICAgICAgIH0pOwogICAgICAgICAgdGhhdC5mb3JtVmFsaWRhdGUuaXRlbXMgPSBkYXRhLml0ZW1zOwogICAgICAgICAgdGhhdC5jb2x1bW5zID0gZGF0YS5oZWFkZXI7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKHJlcykgPT4gewogICAgICAgICAgdGhhdC4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICB9KTsKICAgIH0sCgogICAgLy8g5aSa6YCJCiAgICBjaGFuZ2VDaGVja2JveChzZWxlY3Rpb24pIHsKICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuYXR0cnMgPSBzZWxlY3Rpb247CiAgICB9LAogICAgc2Vja2lsbFRpbWVMaXN0KCkgewogICAgICBsZXQgdGhhdCA9IHRoaXM7CiAgICAgIHNlY2tpbGxUaW1lTGlzdEFwaSgpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhhdC50aW1lTGlzdCA9IHJlcy5kYXRhLmxpc3QuZGF0YTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgocmVzKSA9PiB7CiAgICAgICAgICB0aGF0LiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgIH0pOwogICAgfSwKICAgIC8vIOiOt+WPlui/kOi0ueaooeadv++8mwogICAgcHJvZHVjdEdldFRlbXBsYXRlKCkgewogICAgICBwcm9kdWN0R2V0VGVtcGxhdGVBcGkoKS50aGVuKChyZXMpID0+IHsKICAgICAgICB0aGlzLnRlbXBsYXRlTGlzdCA9IHJlcy5kYXRhOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDooajljZXpqozor4EKICAgIHZhbGlkYXRlKHByb3AsIHN0YXR1cywgZXJyb3IpIHsKICAgICAgaWYgKHN0YXR1cyA9PT0gZmFsc2UpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIC8vIOWVhuWTgWlkCiAgICBnZXRQcm9kdWN0SWQocm93KSB7CiAgICAgIHRoaXMubW9kYWxfbG9hZGluZyA9IGZhbHNlOwogICAgICB0aGlzLm1vZGFscyA9IGZhbHNlOwogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICB0aGlzLmZvcm1WYWxpZGF0ZSA9IHsKICAgICAgICAgIGltYWdlczogcm93LnNsaWRlcl9pbWFnZSwKICAgICAgICAgIGluZm86IHJvdy5zdG9yZV9pbmZvLAogICAgICAgICAgdGl0bGU6IHJvdy5zdG9yZV9uYW1lLAogICAgICAgICAgaW1hZ2U6IHJvdy5pbWFnZSwKICAgICAgICAgIHVuaXRfbmFtZTogcm93LnVuaXRfbmFtZSwKICAgICAgICAgIHByaWNlOiAwLCAvLyDkuI3lj5bllYblk4HkuK3nmoTljp/ku7cKICAgICAgICAgIG90X3ByaWNlOiByb3cub3RfcHJpY2UsCiAgICAgICAgICBjb3N0OiByb3cuY29zdCwKICAgICAgICAgIHNhbGVzOiByb3cuc2FsZXMsCiAgICAgICAgICBzdG9jazogcm93LnN0b2NrLAogICAgICAgICAgc29ydDogcm93LnNvcnQsCiAgICAgICAgICBudW06IDEsCiAgICAgICAgICBvbmNlX251bTogMSwKICAgICAgICAgIGdpdmVfaW50ZWdyYWw6IHJvdy5naXZlX2ludGVncmFsLAogICAgICAgICAgcG9zdGFnZTogcm93LnBvc3RhZ2UsCiAgICAgICAgICBzZWN0aW9uX3RpbWU6IFtdLAogICAgICAgICAgaXNfcG9zdGFnZTogcm93LmlzX3Bvc3RhZ2UsCiAgICAgICAgICBpc19ob3Q6IHJvdy5pc19ob3QsCiAgICAgICAgICBzdGF0dXM6IDAsCiAgICAgICAgICBkZXNjcmlwdGlvbjogcm93LmRlc2NyaXB0aW9uLAogICAgICAgICAgaWQ6IDAsCiAgICAgICAgICBwcm9kdWN0X2lkOiByb3cuaWQsCiAgICAgICAgICB0ZW1wX2lkOiByb3cudGVtcF9pZCwKICAgICAgICAgIGxvZ2lzdGljczogcm93LmxvZ2lzdGljcywgLy/pgInmi6nnianmtYHmlrnlvI8KICAgICAgICAgIGZyZWlnaHQ6IHJvdy5mcmVpZ2h0LCAvL+i/kOi0ueiuvue9rgogICAgICAgICAgcG9zdGFnZTogcm93LnBvc3RhZ2UsIC8v6K6+572u6L+Q6LS56YeR6aKdCiAgICAgICAgICBjdXN0b21fZm9ybTogcm93LmN1c3RvbV9mb3JtLCAvL+iHquWumuS5ieihqOWNleaVsOaNrgogICAgICAgICAgdmlydHVhbF90eXBlOiByb3cudmlydHVhbF90eXBlLCAvL+iZmuaLn+WVhuWTgeexu+WeiwogICAgICAgICAgaXNfY29tbWlzc2lvbjogcm93LmlzX2NvbW1pc3Npb24KICAgICAgICB9OwogICAgICAgIHRoaXMucHJvZHVjdEF0dHJzKHJvdyk7CiAgICAgICAgdGhpcy4kcmVmcy5nb29kc2xpc3QucHJvZHVjdFJvdyA9IG51bGw7CiAgICAgIH0sIDUwMCk7CiAgICB9LAoKICAgIGNhbmNlbCgpIHsKICAgICAgdGhpcy5tb2RhbHMgPSBmYWxzZTsKICAgIH0sCiAgICAvLyDlhbfkvZPml6XmnJ8KICAgIG9uY2hhbmdlVGltZShlKSB7CiAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLnNlY3Rpb25fdGltZSA9IGU7CiAgICB9LAogICAgLy8g6K+m5oOFCiAgICBnZXRJbmZvKCkgewogICAgICB0aGlzLnNwaW5TaG93ID0gdHJ1ZTsKICAgICAgc2Vja2lsbEluZm9BcGkodGhpcy4kcm91dGUucGFyYW1zLmlkKQogICAgICAgIC50aGVuKGFzeW5jIChyZXMpID0+IHsKICAgICAgICAgIGxldCB0aGF0ID0gdGhpczsKICAgICAgICAgIGxldCBpbmZvID0gcmVzLmRhdGEuaW5mbzsKICAgICAgICAgIGxldCBzZWxlY3Rpb24gPSB7CiAgICAgICAgICAgIHR5cGU6ICdzZWxlY3Rpb24nLAogICAgICAgICAgICB3aWR0aDogNjAsCiAgICAgICAgICAgIGFsaWduOiAnY2VudGVyJywKICAgICAgICAgIH07CiAgICAgICAgICB0aGlzLmZvcm1WYWxpZGF0ZSA9IGluZm87CiAgICAgICAgICB0aGlzLiRzZXQodGhpcy5mb3JtVmFsaWRhdGUsICdpdGVtcycsIGluZm8uYXR0cnMuaXRlbXMpOwogICAgICAgICAgdGhpcy5jb2x1bW5zID0gaW5mby5hdHRycy5oZWFkZXI7CiAgICAgICAgICAvLyB0aGlzLmNvbHVtbnMudW5zaGlmdChzZWxlY3Rpb24pOwogICAgICAgICAgdGhhdC5zcGVjc0RhdGEgPSBpbmZvLmF0dHJzLnZhbHVlOwogICAgICAgICAgdGhhdC5zcGVjc0RhdGEuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgICAgICAgICAgdGhhdC4kc2V0KHRoYXQuc3BlY3NEYXRhW2luZGV4XSwgJ2lkJywgaW5kZXgpOwogICAgICAgICAgfSk7CiAgICAgICAgICBsZXQgZGF0YSA9IGluZm8uYXR0cnM7CiAgICAgICAgICBsZXQgYXR0ciA9IFtdOwogICAgICAgICAgZm9yIChsZXQgaW5kZXggaW4gaW5mby5hdHRycy52YWx1ZSkgewogICAgICAgICAgICBpZiAoaW5mby5hdHRycy52YWx1ZVtpbmRleF0uX2NoZWNrZWQpIHsKICAgICAgICAgICAgICBhdHRyLnB1c2goaW5mby5hdHRycy52YWx1ZVtpbmRleF0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICB0aGF0LmZvcm1WYWxpZGF0ZS5hdHRycyA9IGF0dHI7CiAgICAgICAgICBhdHRyLmZvckVhY2goKHJvdykgPT4gewogICAgICAgICAgICB0aGF0LiRyZWZzLm11bHRpcGxlVGFibGUudG9nZ2xlUm93U2VsZWN0aW9uKHJvdywgdHJ1ZSk7CiAgICAgICAgICB9KTsKICAgICAgICAgIHRoaXMuc3BpblNob3cgPSBmYWxzZTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLnNwaW5TaG93ID0gZmFsc2U7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgIH0pOwogICAgfSwKICAgIGdldFJvd0tleXMocm93KSB7CiAgICAgIHJldHVybiByb3cuaWQ7CiAgICB9LAogICAgY2hhbmdlUHJpY2UoZSwgaW5kZXgpIHsKICAgICAgdGhpcy4kc2V0KHRoaXMuc3BlY3NEYXRhW2luZGV4XSwgJ3ByaWNlJywgZSk7CiAgICB9LAogICAgLy8g5LiL5LiA5q2lCiAgICBuZXh0KG5hbWUpIHsKICAgICAgbGV0IHRoYXQgPSB0aGlzOwogICAgICBpZiAodGhpcy5jdXJyZW50ID09PSAyKSB7CiAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuZGVzY3JpcHRpb24gPSB0aGlzLmRlc2NyaXB0aW9uOwogICAgICAgIHRoaXMuJHJlZnNbbmFtZV0udmFsaWRhdGUoKHZhbGlkKSA9PiB7CiAgICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgICAgaWYgKHRoaXMuY29weSA9PSAxKSB0aGlzLmZvcm1WYWxpZGF0ZS5jb3B5ID0gMTsKICAgICAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuaWQgPSBOdW1iZXIodGhpcy4kcm91dGUucGFyYW1zLmlkKSB8fCAwOwogICAgICAgICAgICB0aGlzLnN1Ym1pdE9wZW4gPSB0cnVlOwogICAgICAgICAgICBzZWNraWxsQWRkQXBpKHRoaXMuZm9ybVZhbGlkYXRlKQogICAgICAgICAgICAgIC50aGVuKGFzeW5jIChyZXMpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuc3VibWl0T3BlbiA9IGZhbHNlOwogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgICAgICBwYXRoOiB0aGlzLiRyb3V0ZVByb1N0ciArICcvbWFya2V0aW5nL3N0b3JlX3NlY2tpbGwvaW5kZXgnLAogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0sIDUwMCk7CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAuY2F0Y2goKHJlcykgPT4gewogICAgICAgICAgICAgICAgdGhpcy5zdWJtaXRPcGVuID0gZmFsc2U7CiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKHRoaXMuY3VycmVudCA9PT0gMSkgewogICAgICAgIHRoaXMuJHJlZnNbbmFtZV0udmFsaWRhdGUoKHZhbGlkKSA9PiB7CiAgICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgICAgaWYgKCF0aGF0LmZvcm1WYWxpZGF0ZS5hdHRycykgewogICAgICAgICAgICAgIHJldHVybiB0aGF0LiRtZXNzYWdlLmVycm9yKCfor7fpgInmi6nlsZ7mgKfop4TmoLwnKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBmb3IgKGxldCBpbmRleCBpbiB0aGF0LmZvcm1WYWxpZGF0ZS5hdHRycykgewogICAgICAgICAgICAgICAgaWYgKHRoYXQuZm9ybVZhbGlkYXRlLmF0dHJzW2luZGV4XS5xdW90YSA8PSAwKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB0aGF0LiRtZXNzYWdlLmVycm9yKCfnp5LmnYDpmZDph4/lv4XpobvlpKfkuo4wJyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAodGhpcy5mb3JtVmFsaWRhdGUuYXR0cnNbaW5kZXhdLnF1b3RhID4gdGhpcy5mb3JtVmFsaWRhdGUuYXR0cnNbaW5kZXhdWydzdG9jayddKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfnp5LmnYDpmZDph4/kuI3og73otoXov4fop4TmoLzlupPlrZgnKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5jdXJyZW50ICs9IDE7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKHRoaXMuZm9ybVZhbGlkYXRlLmltYWdlcykgewogICAgICAgICAgdGhpcy5jdXJyZW50ICs9IDE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn6K+36YCJ5oup5ZWG5ZOBJyk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgLy8g5LiK5LiA5q2lCiAgICBzdGVwKCkgewogICAgICB0aGlzLmN1cnJlbnQtLTsKICAgIH0sCiAgICAvLyDlhoXlrrkKICAgIGdldENvbnRlbnQodmFsKSB7CiAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLmRlc2NyaXB0aW9uID0gdmFsOwogICAgfSwKICAgIC8vIOeCueWHu+WVhuWTgeWbvgogICAgbW9kYWxQaWNUYXAodGl0LCBwaWNUaXQsIGluZGV4KSB7CiAgICAgIHRoaXMubW9kYWxQaWMgPSB0cnVlOwogICAgICB0aGlzLmlzQ2hvaWNlID0gdGl0ID09PSAnZGFuJyA/ICfljZXpgIknIDogJ+WkmumAiSc7CiAgICAgIHRoaXMucGljVGl0ID0gcGljVGl0OwogICAgICB0aGlzLnRhYmxlSW5kZXggPSBpbmRleDsKICAgIH0sCiAgICAvLyDojrflj5bljZXlvKDlm77niYfkv6Hmga8KICAgIGdldFBpYyhwYykgewogICAgICBzd2l0Y2ggKHRoaXMucGljVGl0KSB7CiAgICAgICAgY2FzZSAnZGFuRnJvbSc6CiAgICAgICAgICB0aGlzLmZvcm1WYWxpZGF0ZS5pbWFnZSA9IHBjLmF0dF9kaXI7CiAgICAgICAgICBicmVhazsKICAgICAgICAvLyBjYXNlICdkYW5UYWJsZSc6CiAgICAgICAgLy8gICAgIHRoaXMuc3BlY3NEYXRhW3RoaXMudGFibGVJbmRleF0ucGljID0gcGMuYXR0X2RpcjsKICAgICAgICAvLyAgICAgYnJlYWs7CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIGlmICghIXRoaXMuZm9ybVZhbGlkYXRlLmF0dHJzICYmIHRoaXMuZm9ybVZhbGlkYXRlLmF0dHJzLmxlbmd0aCkgewogICAgICAgICAgICB0aGlzLiRzZXQodGhpcy5zcGVjc0RhdGFbdGhpcy50YWJsZUluZGV4XSwgJ19jaGVja2VkJywgdHJ1ZSk7CiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLnNwZWNzRGF0YVt0aGlzLnRhYmxlSW5kZXhdLnBpYyA9IHBjLmF0dF9kaXI7CiAgICAgIH0KICAgICAgdGhpcy5tb2RhbFBpYyA9IGZhbHNlOwogICAgfSwKICAgIC8vIOiOt+WPluWkmuW8oOWbvuS/oeaBrwogICAgZ2V0UGljRChwYykgewogICAgICB0aGlzLmltYWdlcyA9IHBjOwogICAgICB0aGlzLmltYWdlcy5tYXAoKGl0ZW0pID0+IHsKICAgICAgICB0aGlzLmZvcm1WYWxpZGF0ZS5pbWFnZXMucHVzaChpdGVtLmF0dF9kaXIpOwogICAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLmltYWdlcyA9IHRoaXMuZm9ybVZhbGlkYXRlLmltYWdlcy5zcGxpY2UoMCwgMTApOwogICAgICB9KTsKICAgICAgdGhpcy5tb2RhbFBpYyA9IGZhbHNlOwogICAgfSwKICAgIGhhbmRsZVJlbW92ZShpKSB7CiAgICAgIHRoaXMuaW1hZ2VzLnNwbGljZShpLCAxKTsKICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuaW1hZ2VzLnNwbGljZShpLCAxKTsKICAgIH0sCiAgICAvLyDpgInmi6nllYblk4EKICAgIGNoYW5nZUdvb2RzKCkgewogICAgICB0aGlzLm1vZGFscyA9IHRydWU7CiAgICAgIHRoaXMuJHJlZnMuZ29vZHNsaXN0LmZvcm1WYWxpZGF0ZS5pc19wcmVzYWxlID0gMDsKICAgICAgdGhpcy4kcmVmcy5nb29kc2xpc3QuZm9ybVZhbGlkYXRlLmlzX3ZpcnR1YWwgPSAwOwogICAgICB0aGlzLiRyZWZzLmdvb2RzbGlzdC5nZXRMaXN0KCk7CiAgICAgIHRoaXMuJHJlZnMuZ29vZHNsaXN0Lmdvb2RzQ2F0ZWdvcnkoKTsKICAgIH0sIC8vIOenu+WKqAogICAgaGFuZGxlRHJhZ1N0YXJ0KGUsIGl0ZW0pIHsKICAgICAgdGhpcy5kcmFnZ2luZyA9IGl0ZW07CiAgICB9LAogICAgaGFuZGxlRHJhZ0VuZChlLCBpdGVtKSB7CiAgICAgIHRoaXMuZHJhZ2dpbmcgPSBudWxsOwogICAgfSwKICAgIC8vIOmmluWFiOaKimRpduWPmOaIkOWPr+S7peaUvue9rueahOWFg+e0oO+8jOWNs+mHjeWGmWRyYWdlbnRlci9kcmFnb3ZlcgogICAgaGFuZGxlRHJhZ092ZXIoZSkgewogICAgICBlLmRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0ID0gJ21vdmUnOyAvLyBlLmRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0PSJtb3ZlIjsvL+WcqGRyYWdlbnRlcuS4remSiOWvueaUvue9ruebruagh+adpeiuvue9riEKICAgIH0sCiAgICBoYW5kbGVEcmFnRW50ZXIoZSwgaXRlbSkgewogICAgICBlLmRhdGFUcmFuc2Zlci5lZmZlY3RBbGxvd2VkID0gJ21vdmUnOyAvLyDkuLrpnIDopoHnp7vliqjnmoTlhYPntKDorr7nva5kcmFnc3RhcnTkuovku7YKICAgICAgaWYgKGl0ZW0gPT09IHRoaXMuZHJhZ2dpbmcpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgY29uc3QgbmV3SXRlbXMgPSBbLi4udGhpcy5mb3JtVmFsaWRhdGUuaW1hZ2VzXTsKICAgICAgY29uc3Qgc3JjID0gbmV3SXRlbXMuaW5kZXhPZih0aGlzLmRyYWdnaW5nKTsKICAgICAgY29uc3QgZHN0ID0gbmV3SXRlbXMuaW5kZXhPZihpdGVtKTsKICAgICAgbmV3SXRlbXMuc3BsaWNlKGRzdCwgMCwgLi4ubmV3SXRlbXMuc3BsaWNlKHNyYywgMSkpOwogICAgICB0aGlzLmZvcm1WYWxpZGF0ZS5pbWFnZXMgPSBuZXdJdGVtczsKICAgIH0sCiAgfSwKfTsK"},null]}