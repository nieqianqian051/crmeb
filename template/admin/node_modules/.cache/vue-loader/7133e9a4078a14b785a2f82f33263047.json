{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/system/configTab/list.vue?vue&type=style&index=0&id=b9286974&scoped=true&lang=stylus","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/system/configTab/list.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/stylus-loader/index.js","mtime":1746465207601},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50YWJzTmFtZSB7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKfQoKLnZhbEJveCB7CiAgbWFyZ2luOiAxMHB4IDA7Cn0KCi52YWxQaWNib3ggewogIGJvcmRlcjogMXB4IHNvbGlkICNlN2VhZWM7Cn0KCi52YWxQaWNib3hfcGljIHsKICB3aWR0aDogMjAwcHg7CiAgaGVpZ2h0OiAxMDBweDsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CgogIGltZyB7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICB9CgogIDo6di1kZWVwIC5pdnUtaWNvbi1tZC1kb2N1bWVudCB7CiAgICBmb250LXNpemU6IDcwcHg7CiAgICBjb2xvcjogI2RhZGFkYTsKICB9Cn0KCi52YWxQaWNib3hfc3AgewogIGRpc3BsYXk6IGJsb2NrOwogIGZvbnQtc2l6ZTogMTJweDsKICB3aWR0aDogMjAwcHg7CiAgcGFkZGluZzogN3B4OwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlN2VhZWM7Cn0K"},{"version":3,"sources":["list.vue"],"names":[],"mappings":";AAqVA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/pages/system/configTab","sourcesContent":["<template>\n  <div>\n    <pages-header\n      ref=\"pageHeader\"\n      title=\"配置列表\"\n      :backUrl=\"$routeProStr + '/system/config/system_config_tab/index'\"\n    ></pages-header>\n    <el-card :bordered=\"false\" shadow=\"never\" class=\"mt16\">\n      <el-row>\n        <el-col v-bind=\"grid\">\n          <el-button type=\"primary\" @click=\"goIndex\">配置分类</el-button>\n          <el-button type=\"primary\" @click=\"configureAdd\">添加配置</el-button>\n        </el-col>\n      </el-row>\n      <el-table\n        :data=\"classList\"\n        ref=\"table\"\n        v-loading=\"loading\"\n        no-userFrom-text=\"暂无数据\"\n        no-filtered-userFrom-text=\"暂无筛选结果\"\n        class=\"mt14\"\n      >\n        <el-table-column label=\"ID\" width=\"80\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.id }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"配置名称\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.info }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"字段变量\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.menu_name }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"字段类型\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.type }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"值\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <span\n              v-if=\"\n                scope.row.type === 'text' ||\n                scope.row.type === 'textarea' ||\n                scope.row.type === 'radio' ||\n                scope.row.type === 'checkbox'\n              \"\n              >{{ scope.row.value }}</span\n            >\n            <div class=\"valBox acea-row\" v-if=\"scope.row.type === 'upload' && scope.row.upload_type === 3\">\n              <div v-if=\"scope.row.value.length\">\n                <div\n                  class=\"valPicbox acea-scope.row scope.row-column-around\"\n                  v-for=\"(item, index) in scope.row.value\"\n                  :key=\"index\"\n                >\n                  <div class=\"valPicbox_pic\"><i class=\"el-icon-document\" /></div>\n                  <span class=\"valPicbox_sp\">{{ item.filename }}</span>\n                </div>\n              </div>\n            </div>\n            <div class=\"valBox acea-row\" v-if=\"scope.row.type === 'upload' && scope.row.upload_type !== 3\">\n              <div v-if=\"scope.row.value.length\">\n                <div class=\"valPicbox acea-row row-column-around\" v-for=\"(item, index) in scope.row.value\" :key=\"index\">\n                  <div class=\"valPicbox_pic\"><img v-lazy=\"item.filepath\" /></div>\n                  <span class=\"valPicbox_sp\">{{ item.filename }}</span>\n                </div>\n              </div>\n            </div>\n            <span v-if=\"scope.row.type === 'switch'\">{{ scope.row.value == 1 ? '开启' : '关闭' }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"是否显示\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <el-switch\n              class=\"defineSwitch\"\n              :active-value=\"1\"\n              :inactive-value=\"0\"\n              v-model=\"scope.row.status\"\n              :value=\"scope.row.status\"\n              @change=\"onchangeIsShow(scope.row)\"\n              size=\"large\"\n              active-text=\"显示\"\n              inactive-text=\"隐藏\"\n            >\n            </el-switch>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <a @click=\"edit(scope.row)\">编辑</a>\n            <el-divider direction=\"vertical\"></el-divider>\n            <a @click=\"del(scope.row, '删除分类', scope.$index)\">删除</a>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 新建 表单-->\n    <el-dialog\n      :visible.sync=\"modals2\"\n      :title=\"`${rowId ? '修改' : '添加'}配置字段`\"\n      :close-on-click-modal=\"false\"\n      :show-close=\"true\"\n      width=\"720px\"\n    >\n      <el-tabs v-if=\"!rowId\" v-model=\"typeFrom.type\" @tab-click=\"onhangeTab\" class=\"tabsName\">\n        <el-tab-pane label=\"文本框 \" name=\"0\"></el-tab-pane>\n        <el-tab-pane label=\"多行文本框\" name=\"1\"></el-tab-pane>\n        <el-tab-pane label=\"单选框\" name=\"2\"></el-tab-pane>\n        <el-tab-pane label=\"文件上传\" name=\"3\"></el-tab-pane>\n        <el-tab-pane label=\"多选框\" name=\"4\"></el-tab-pane>\n        <el-tab-pane label=\"下拉框\" name=\"5\"></el-tab-pane>\n        <el-tab-pane label=\"开关\" name=\"6\"></el-tab-pane>\n      </el-tabs>\n      <form-create\n        v-if=\"rules.length != 0\"\n        :rule=\"rules\"\n        v-model=\"fapi\"\n        :option=\"config\"\n        @submit=\"onSubmit\"\n        class=\"formBox\"\n        ref=\"fc\"\n        handleIcon=\"false\"\n      ></form-create>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"modals2 = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\">确定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 编辑表单-->\n    <edit-from ref=\"edits\" :FromData=\"FromData\" @submitFail=\"submitFail\"></edit-from>\n  </div>\n</template>\n\n<script>\nimport { configTabListApi, configTabAddApi, configTabEditApi, configSetStatusApi } from '@/api/system';\nimport formCreate from '@form-create/element-ui';\nimport editFrom from '@/components/from/from';\nimport request from '@/libs/request';\nexport default {\n  name: 'list',\n  components: { formCreate: formCreate.$form(), editFrom },\n  data() {\n    return {\n      modals2: false,\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      loading: false,\n      formValidate: {\n        tab_id: 0,\n        page: 1,\n        limit: 20,\n      },\n      config: {\n        form: {\n          labelWidth: '100px',\n        },\n        resetBtn: false,\n        submitBtn: false,\n        global: {\n          upload: {\n            props: {\n              onSuccess(res, file) {\n                if (res.status === 200) {\n                  file.url = res.data.src;\n                } else {\n                  this.$message.error(res.msg);\n                }\n              },\n            },\n          },\n        },\n      },\n      total: 0,\n      FromData: null,\n      FromRequestData: {},\n      modalTitleSs: '',\n      classList: [],\n      num: 0,\n      typeFrom: {\n        type: 0,\n        tab_id: this.$route.params.id,\n      },\n      rules: [],\n      fapi: null,\n      rowId: 0,\n    };\n  },\n  watch: {\n    $route: {\n      handler: function (val, oldVal) {\n        this.getList();\n      },\n      // 深度观察监听\n      deep: true,\n    },\n  },\n  mounted() {\n    this.getList();\n  },\n  methods: {\n    // 点击tab\n    onhangeTab() {\n      this.classAdd();\n    },\n    submitForm() {\n      this.fapi.submit();\n    },\n    // 新增表单\n    classAdd() {\n      configTabAddApi(this.typeFrom)\n        .then(async (res) => {\n          if (res.data.status === false) {\n            return this.$authLapse(res.data);\n          }\n          let data = res.data || {};\n          this.FromRequestData = { action: data.action, method: data.method };\n          this.rules = data.rules;\n          this.modals2 = true;\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 编辑表单\n    edit(row) {\n      this.rowId = row.id;\n      configTabEditApi(row.id)\n        .then(async (res) => {\n          if (res.data.status === false) {\n            return this.$authLapse(res.data);\n          }\n          let data = res.data || {};\n          this.FromRequestData = { action: data.action, method: data.method };\n          this.rules = data.rules;\n          this.$refs.edits.modals = true;\n          this.modals2 = true;\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 提交表单\n    onSubmit(formData) {\n      request({\n        url: this.FromRequestData.action,\n        method: this.FromRequestData.method,\n        data: formData,\n      })\n        .then((res) => {\n          this.$message.success(res.msg);\n          setTimeout(() => {\n            this.modals2 = false;\n          }, 1000);\n          setTimeout(() => {\n            this.getList();\n          }, 1500);\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 修改成功\n    submitFail() {\n      this.getList();\n    },\n    // 跳转到配置分类页面\n    goIndex() {\n      this.$router.push({\n        path: this.$routeProStr + '/system/config/system_config_tab/index',\n      });\n    },\n    // 添加配置\n    configureAdd() {\n      // this.modals2 = true;\n      this.rowId = 0;\n      this.typeFrom.type = 0;\n      this.classAdd();\n    },\n    // 列表\n    getList() {\n      this.loading = true;\n      this.formValidate.tab_id = this.$route.params.id;\n      configTabListApi(this.formValidate)\n        .then(async (res) => {\n          let data = res.data;\n          this.classList = data.list;\n          this.total = data.count;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$message.error(res.msg);\n        });\n    },\n    pageChange(index) {\n      this.formValidate.page = index;\n      this.getList();\n    },\n    // 删除\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `/setting/config/${row.id}`,\n        method: 'DELETE',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.classList.splice(num, 1);\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 修改是否显示\n    onchangeIsShow(row) {\n      configSetStatusApi(row.id, row.status)\n        .then(async (res) => {\n          this.$message.success(res.msg);\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n  },\n};\n</script>\n<style scoped lang=\"stylus\">\n.tabsName {\n  margin-bottom: 15px;\n}\n\n.valBox {\n  margin: 10px 0;\n}\n\n.valPicbox {\n  border: 1px solid #e7eaec;\n}\n\n.valPicbox_pic {\n  width: 200px;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n\n  ::v-deep .ivu-icon-md-document {\n    font-size: 70px;\n    color: #dadada;\n  }\n}\n\n.valPicbox_sp {\n  display: block;\n  font-size: 12px;\n  width: 200px;\n  padding: 7px;\n  box-sizing: border-box;\n  border-top: 1px solid #e7eaec;\n}\n</style>\n"]}]}