{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/components/uploadVideo/index.vue?vue&type=style&index=0&id=0eb7b31d&scoped=true&lang=css","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/components/uploadVideo/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci52aWRlby1zdHlsZSB7CiAgd2lkdGg6IDQwJTsKICBoZWlnaHQ6IDE4MHB4OwogIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogIzcwNzA3MDsKICBtYXJnaW4tdG9wOiAxMHB4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBvdmVyZmxvdzogaGlkZGVuOwp9Ci52aWRlby1zdHlsZSAuaWNvbnYgewogIGNvbG9yOiAjZmZmOwogIGxpbmUtaGVpZ2h0OiAxODBweDsKICB3aWR0aDogNTBweDsKICBoZWlnaHQ6IDUwcHg7CiAgZGlzcGxheTogaW5oZXJpdDsKICBmb250LXNpemU6IDI2cHg7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogLTc0cHg7CiAgbGVmdDogNTAlOwogIG1hcmdpbi1sZWZ0OiAtMjVweDsKfQoudmlkZW8tc3R5bGUgLm1hcmsgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDMwcHg7CiAgdG9wOiAwOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA4KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/uploadVideo","sourcesContent":["<template>\n  <div>\n    <div class=\"mt20 ml20\">\n      <el-input class=\"perW35\" v-model=\"videoLink\" placeholder=\"请输入视频链接\" />\n      <input type=\"file\" ref=\"refid\" style=\"display: none\" @change=\"zh_uploadFile_change\" />\n      <el-button\n        v-if=\"upload_type !== '1' || videoLink\"\n        type=\"primary\"\n        icon=\"ios-cloud-upload-outline\"\n        class=\"ml10\"\n        @click=\"zh_uploadFile\"\n        >{{ videoLink ? '确认添加' : '上传视频' }}</el-button\n      >\n      <el-upload\n        v-if=\"upload_type === '1' && !videoLink\"\n        :show-file-list=\"false\"\n        :action=\"fileUrl\"\n        class=\"ml10\"\n        :before-upload=\"videoSaveToUrl\"\n        :data=\"uploadData\"\n        :headers=\"header\"\n        :multiple=\"true\"\n        style=\"display: inline-block\"\n        accept=\".mp4\"\n      >\n        <el-button type=\"primary\" icon=\"ios-cloud-upload-outline\">上传视频</el-button>\n      </el-upload>\n      <Progress :percent=\"progress\" :stroke-width=\"5\" v-if=\"upload.videoIng\" />\n      <div class=\"video-style\" v-if=\"formValidate.video_link\">\n        <video\n          style=\"width: 100%; height: 100% !important; border-radius: 10px\"\n          :src=\"formValidate.video_link\"\n          controls=\"controls\"\n        >\n          您的浏览器不支持 video 标签。\n        </video>\n        <div class=\"mark\"></div>\n        <i class=\"el-icon-delete iconv\" @click=\"delVideo\"></i>\n      </div>\n    </div>\n    <div class=\"mt50 ml20\">\n      <el-button type=\"primary\" @click=\"uploads\">确认</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { uploadByPieces } from '@/utils/upload'; //引入uploadByPieces方法\nimport { productGetTempKeysApi, uploadType } from '@/api/product';\nimport Setting from '@/setting';\nimport { getCookies } from '@/libs/util';\nimport { isVideoUpload } from '@/utils';\n\n// import '../../../public/UEditor/dialogs/internal';\nexport default {\n  name: 'vide11o',\n  data() {\n    return {\n      fileUrl: Setting.apiBaseURL + '/file/upload',\n      upload: {\n        videoIng: false, // 是否显示进度条；\n      },\n      progress: 0, // 进度条默认0\n      videoLink: '',\n      formValidate: {\n        video_link: '',\n      },\n      upload_type: '',\n      uploadData: {},\n      header: {},\n    };\n  },\n  created() {\n    this.uploadType();\n    this.getToken();\n  },\n  methods: {\n    // 删除视频；\n    delVideo() {\n      let that = this;\n      that.$set(that.formValidate, 'video_link', '');\n    },\n    //获取视频上传类型\n    uploadType() {\n      uploadType().then((res) => {\n        this.upload_type = res.data.upload_type;\n      });\n    },\n    // 上传成功\n    handleSuccess(res, file, fileList) {\n      if (res.status === 200) {\n        this.formValidate.video_link = res.data.src;\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    videoSaveToUrl(file) {\n      if (isVideoUpload(filex))\n        uploadByPieces({\n          file: file, // 视频实体\n          pieceSize: 3, // 分片大小\n          success: (data) => {\n            this.formValidate.video_link = data.file_path;\n            this.progress = 100;\n          },\n          error: (e) => {\n            this.$message.error(e.msg);\n          },\n          uploading: (chunk, allChunk) => {\n            this.videoIng = true;\n            let st = Math.floor((chunk / allChunk) * 100);\n            this.progress = st;\n          },\n        });\n      return false;\n    },\n    getToken() {\n      this.header['Authori-zation'] = 'Bearer ' + getCookies('token');\n    },\n    beforeUpload() {\n      this.uploadData = {};\n      let promise = new Promise((resolve) => {\n        this.$nextTick(function () {\n          resolve(true);\n        });\n      });\n      return promise;\n    },\n    zh_uploadFile() {\n      if (this.videoLink) {\n        this.formValidate.video_link = this.videoLink;\n      } else {\n        this.$refs.refid.click();\n      }\n    },\n    zh_uploadFile_change(evfile) {\n      let that = this;\n      if (evfile.target.files[0].type !== 'video/mp4') {\n        return that.$message.error('只能上传mp4文件');\n      }\n      let types = {\n        key: evfile.target.files[0].name,\n        contentType: evfile.target.files[0].type,\n      };\n      productGetTempKeysApi(types).then((res) => {\n        that.$videoCloud\n          .videoUpload({\n            type: res.data.type,\n            evfile: evfile,\n            res: res,\n            uploading(status, progress) {\n              that.upload.videoIng = status;\n            },\n          })\n          .then((res) => {\n            that.formValidate.video_link = res.url;\n            that.$message.success('视频上传成功');\n          })\n          .catch((res) => {\n            that.$message.error(res);\n          });\n      });\n    },\n    uploads() {\n      this.$emit('getvideo', this.formValidate.video_link);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.video-style {\n  width: 40%;\n  height: 180px;\n  border-radius: 10px;\n  background-color: #707070;\n  margin-top: 10px;\n  position: relative;\n  overflow: hidden;\n}\n.video-style .iconv {\n  color: #fff;\n  line-height: 180px;\n  width: 50px;\n  height: 50px;\n  display: inherit;\n  font-size: 26px;\n  position: absolute;\n  top: -74px;\n  left: 50%;\n  margin-left: -25px;\n}\n.video-style .mark {\n  position: absolute;\n  width: 100%;\n  height: 30px;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  text-align: center;\n}\n</style>\n"]}]}