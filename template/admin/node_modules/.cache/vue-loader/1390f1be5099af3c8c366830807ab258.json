{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/layout/component/aside.vue?vue&type=style&index=0&id=6711794c&lang=scss&scoped=true","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/layout/component/aside.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/sass-loader/dist/cjs.js","mtime":1746465018452},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jYXQtbmFtZSB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGhlaWdodDogNTBweDsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0tcHJldi1ib3JkZXItY29sb3ItbGlnaHRlcik7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICBmb250LXNpemU6IDE1cHg7Cn0K"},{"version":3,"sources":["aside.vue"],"names":[],"mappings":";AAwIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"aside.vue","sourceRoot":"src/layout/component","sourcesContent":["<template>\n  <el-aside class=\"layout-aside\" :class=\"setCollapseWidth\" v-if=\"clientWidth > 1000\">\n    <Logo v-if=\"setShowLogo && menuList.length && getThemeConfig.layout !== 'columns'\" />\n    <div v-if=\"menuList.length && getThemeConfig.layout == 'columns'\" class=\"cat-name\">\n      {{ adminTitle || catName }}\n    </div>\n    <el-scrollbar class=\"flex-auto\" ref=\"layoutAsideRef\">\n      <Vertical :menuList=\"menuList\" :class=\"setCollapseWidth\" />\n    </el-scrollbar>\n  </el-aside>\n  <el-drawer :visible.sync=\"getThemeConfig.isCollapse\" :with-header=\"false\" direction=\"ltr\" size=\"180px\" v-else>\n    <el-aside class=\"layout-aside w100 h100\">\n      <Logo v-if=\"setShowLogo && menuList.length\" />\n      <el-scrollbar class=\"flex-auto\" ref=\"layoutAsideRef\">\n        <Vertical :menuList=\"menuList\" />\n      </el-scrollbar>\n    </el-aside>\n  </el-drawer>\n</template>\n\n<script>\nimport Vertical from '@/layout/navMenu/vertical.vue';\nimport Logo from '@/layout/logo/index.vue';\nexport default {\n  name: 'layoutAside',\n  components: { Vertical, Logo },\n  data() {\n    return {\n      // menuList: [],\n      clientWidth: '',\n      catName: '',\n    };\n  },\n  computed: {\n    adminTitle() {\n      return this.$store.state.app.adminTitle || '';\n    },\n    // 设置左侧菜单的具体宽度\n    menuList() {\n      this.$store.state.menus.childMenuList.length > 0\n        ? (this.$store.state.themeConfig.themeConfig.isCollapse = false)\n        : (this.$store.state.themeConfig.themeConfig.isCollapse = true);\n      return this.$store.state.menus.childMenuList;\n    },\n    setCollapseWidth() {\n      let { layout, isCollapse } = this.$store.state.themeConfig.themeConfig;\n      let asideBrColor = '';\n      layout === 'classic' || layout === 'columns' ? (asideBrColor = 'layout-el-aside-br-color') : '';\n\n      if (layout === 'columns') {\n        // 分栏布局，菜单收起时宽度给 1px / 暂为0px\n        if (isCollapse) {\n          return ['layout-aside-width1', asideBrColor];\n        } else {\n          return ['layout-aside-width-default', asideBrColor];\n        }\n      } else {\n        // 其它布局给 64px\n        if (isCollapse) {\n          return ['layout-aside-width1', asideBrColor];\n        } else {\n          return ['layout-aside-width-default', asideBrColor, layout === 'classic' ? 'pt8' : ''];\n        }\n      }\n    },\n    // 设置 logo 是否显示\n    setShowLogo() {\n      let { layout, isShowLogo } = this.$store.state.themeConfig.themeConfig;\n      return (isShowLogo && layout === 'defaults') || (isShowLogo && layout === 'columns');\n    },\n    // 获取布局配置信息\n    getThemeConfig() {\n      return this.$store.state.themeConfig.themeConfig;\n    },\n  },\n  created() {\n    this.initMenuFixed(document.body.clientWidth);\n    this.setFilterRoutes();\n    // this.bus.$on('setSendColumnsChildren', (res) => {\n    //   this.menuList = res || [];\n    //   this.menuList.length > 0\n    //     ? (this.$store.state.themeConfig.themeConfig.isCollapse = false)\n    //     : (this.$store.state.themeConfig.themeConfig.isCollapse = true);\n    // });\n    this.bus.$on('layoutMobileResize', (res) => {\n      this.initMenuFixed(res.clientWidth);\n    });\n    this.bus.$on('oneCatName', (name) => {\n      this.catName = name;\n    });\n    // 菜单滚动条监听\n    this.bus.$on('updateElScrollBar', () => {\n      setTimeout(() => {\n        this.$refs.layoutAsideRef.update();\n      }, 300);\n    });\n    if (this.$store.state.themeConfig.themeConfig.layout !== 'columns') {\n      this.bus.$on('routesListChange', () => {\n        this.setFilterRoutes();\n      });\n    }\n  },\n  beforeDestroy() {\n    this.bus.$off('routesListChange');\n  },\n  methods: {\n    // 设置/过滤路由（非静态路由/是否显示在菜单中）\n    setFilterRoutes() {\n      if (this.$store.state.themeConfig.themeConfig.layout === 'columns') return false;\n      this.$store.commit('menus/childMenuList', this.filterRoutesFun(this.$store.state.routesList.routesList));\n      // this.menuList = this.filterRoutesFun(this.$store.state.routesList.routesList);\n    },\n    // 设置/过滤路由 递归函数\n    filterRoutesFun(arr) {\n      return arr\n        .filter((item) => item.path)\n        .map((item) => {\n          item = Object.assign({}, item);\n          if (item.children) item.children = this.filterRoutesFun(item.children);\n          return item;\n        });\n    },\n    // 设置菜单导航是否固定（移动端）\n    initMenuFixed(clientWidth) {\n      this.clientWidth = clientWidth;\n      this.$emit('routesListChange');\n    },\n  },\n  // 页面销毁时\n  destroyed() {\n    // 取消菜单滚动条监听\n    this.bus.$off('updateElScrollBar', () => {});\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.cat-name {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 50px;\n  border-bottom: 1px solid var(--prev-border-color-lighter);\n  font-weight: 500;\n  font-size: 15px;\n}\n</style>\n"]}]}