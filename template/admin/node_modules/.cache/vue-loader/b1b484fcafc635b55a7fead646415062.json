{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js??ref--12-0!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/marketing/storeCombination/create.vue?vue&type=template&id=1dac4c8b&scoped=true","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/marketing/storeCombination/create.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1746465020064},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwp2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkgewogIHZhciBfdm0gPSB0aGlzLAogICAgX2MgPSBfdm0uX3NlbGYuX2M7CiAgcmV0dXJuIF9jKCdkaXYnLCBbX2MoJ3BhZ2VzLWhlYWRlcicsIHsKICAgIHJlZjogInBhZ2VIZWFkZXIiLAogICAgYXR0cnM6IHsKICAgICAgInRpdGxlIjogX3ZtLiRyb3V0ZS5wYXJhbXMuaWQgPyAn57yW6L6R5ou85Zui5ZWG5ZOBJyA6ICfmt7vliqDmi7zlm6LllYblk4EnLAogICAgICAiYmFja1VybCI6IF92bS4kcm91dGVQcm9TdHIgKyAnL21hcmtldGluZy9zdG9yZV9jb21iaW5hdGlvbi9pbmRleCcKICAgIH0KICB9KSwgX2MoJ2VsLWNhcmQnLCB7CiAgICBzdGF0aWNDbGFzczogIm10MTYiLAogICAgYXR0cnM6IHsKICAgICAgImJvcmRlcmVkIjogZmFsc2UsCiAgICAgICJzaGFkb3ciOiAibmV2ZXIiCiAgICB9CiAgfSwgW19jKCdlbC1yb3cnLCB7CiAgICBzdGF0aWNDbGFzczogIm10MzAgYWNlYS1yb3cgcm93LW1pZGRsZSByb3ctY2VudGVyIgogIH0sIFtfYygnZWwtY29sJywgewogICAgYXR0cnM6IHsKICAgICAgInNwYW4iOiAyMAogICAgfQogIH0sIFtfYygnc3RlcHMnLCB7CiAgICBhdHRyczogewogICAgICAic3RlcExpc3QiOiBfdm0uc3RlcExpc3QsCiAgICAgICJpc0FjdGl2ZSI6IF92bS5jdXJyZW50CiAgICB9CiAgfSldLCAxKSwgX2MoJ2VsLWNvbCcsIHsKICAgIGRpcmVjdGl2ZXM6IFt7CiAgICAgIG5hbWU6ICJsb2FkaW5nIiwKICAgICAgcmF3TmFtZTogInYtbG9hZGluZyIsCiAgICAgIHZhbHVlOiBfdm0uc3BpblNob3csCiAgICAgIGV4cHJlc3Npb246ICJzcGluU2hvdyIKICAgIH1dLAogICAgYXR0cnM6IHsKICAgICAgInNwYW4iOiAyMwogICAgfQogIH0sIFtfYygnZWwtZm9ybScsIHsKICAgIHJlZjogImZvcm1WYWxpZGF0ZSIsCiAgICBzdGF0aWNDbGFzczogImZvcm0gbXQzMCIsCiAgICBhdHRyczogewogICAgICAibW9kZWwiOiBfdm0uZm9ybVZhbGlkYXRlLAogICAgICAicnVsZXMiOiBfdm0ucnVsZVZhbGlkYXRlLAogICAgICAibGFiZWwtd2lkdGgiOiBfdm0ubGFiZWxXaWR0aCwKICAgICAgImxhYmVsLXBvc2l0aW9uIjogX3ZtLmxhYmVsUG9zaXRpb24KICAgIH0sCiAgICBvbjogewogICAgICAib24tdmFsaWRhdGUiOiBfdm0udmFsaWRhdGUKICAgIH0sCiAgICBuYXRpdmVPbjogewogICAgICAic3VibWl0IjogZnVuY3Rpb24gc3VibWl0KCRldmVudCkgewogICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB9CiAgICB9CiAgfSwgW192bS5jdXJyZW50ID09PSAwID8gX2MoJ2VsLWZvcm0taXRlbScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLpgInmi6nllYblk4HvvJoiLAogICAgICAicHJvcCI6ICJpbWFnZV9pbnB1dCIKICAgIH0KICB9LCBbX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAicGljQm94IiwKICAgIG9uOiB7CiAgICAgICJjbGljayI6IF92bS5jaGFuZ2VHb29kcwogICAgfQogIH0sIFtfdm0uZm9ybVZhbGlkYXRlLmltYWdlID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAicGljdHJ1ZSIKICB9LCBbX2MoJ2ltZycsIHsKICAgIGRpcmVjdGl2ZXM6IFt7CiAgICAgIG5hbWU6ICJsYXp5IiwKICAgICAgcmF3TmFtZTogInYtbGF6eSIsCiAgICAgIHZhbHVlOiBfdm0uZm9ybVZhbGlkYXRlLmltYWdlLAogICAgICBleHByZXNzaW9uOiAiZm9ybVZhbGlkYXRlLmltYWdlIgogICAgfV0KICB9KV0pIDogX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAidXBMb2FkIGFjZWEtcm93IHJvdy1jZW50ZXItd3JhcHBlciIKICB9LCBbX2MoJ2knLCB7CiAgICBzdGF0aWNDbGFzczogImVsLWljb24tZ29vZHMiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIyNHB4IgogICAgfQogIH0pXSldKV0pIDogX3ZtLl9lKCksIF9jKCdlbC1yb3cnLCB7CiAgICBkaXJlY3RpdmVzOiBbewogICAgICBuYW1lOiAic2hvdyIsCiAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICB2YWx1ZTogX3ZtLmN1cnJlbnQgPT09IDEsCiAgICAgIGV4cHJlc3Npb246ICJjdXJyZW50ID09PSAxIgogICAgfV0KICB9LCBbX2MoJ2VsLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcGFuIjogMjQKICAgIH0KICB9LCBbX2MoJ2VsLWZvcm0taXRlbScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLllYblk4HkuLvlm77vvJoiLAogICAgICAicHJvcCI6ICJpbWFnZSIKICAgIH0KICB9LCBbX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAicGljQm94IiwKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0ubW9kYWxQaWNUYXAoJ2RhbicsICdkYW5Gcm9tJyk7CiAgICAgIH0KICAgIH0KICB9LCBbX3ZtLmZvcm1WYWxpZGF0ZS5pbWFnZSA/IF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogInBpY3RydWUiCiAgfSwgW19jKCdpbWcnLCB7CiAgICBkaXJlY3RpdmVzOiBbewogICAgICBuYW1lOiAibGF6eSIsCiAgICAgIHJhd05hbWU6ICJ2LWxhenkiLAogICAgICB2YWx1ZTogX3ZtLmZvcm1WYWxpZGF0ZS5pbWFnZSwKICAgICAgZXhwcmVzc2lvbjogImZvcm1WYWxpZGF0ZS5pbWFnZSIKICAgIH1dCiAgfSldKSA6IF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogInVwTG9hZCBhY2VhLXJvdyByb3ctY2VudGVyLXdyYXBwZXIiCiAgfSwgW19jKCdpJywgewogICAgc3RhdGljQ2xhc3M6ICJlbC1pY29uLXBpY3R1cmUtb3V0bGluZSIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjI0cHgiCiAgICB9CiAgfSldKV0pXSldLCAxKSwgX2MoJ2VsLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcGFuIjogMjQKICAgIH0KICB9LCBbX2MoJ2VsLWZvcm0taXRlbScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLllYblk4Hova7mkq3lm77vvJoiLAogICAgICAicHJvcCI6ICJpbWFnZXMiCiAgICB9CiAgfSwgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImFjZWEtcm93IgogIH0sIFtfdm0uX2woX3ZtLmZvcm1WYWxpZGF0ZS5pbWFnZXMsIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgcmV0dXJuIF9jKCdkaXYnLCB7CiAgICAgIGtleTogaW5kZXgsCiAgICAgIHN0YXRpY0NsYXNzOiAicGljdHJ1ZSIsCiAgICAgIGF0dHJzOiB7CiAgICAgICAgImRyYWdnYWJsZSI6ICJ0cnVlIgogICAgICB9LAogICAgICBvbjogewogICAgICAgICJkcmFnc3RhcnQiOiBmdW5jdGlvbiBkcmFnc3RhcnQoJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gX3ZtLmhhbmRsZURyYWdTdGFydCgkZXZlbnQsIGl0ZW0pOwogICAgICAgIH0sCiAgICAgICAgImRyYWdvdmVyIjogZnVuY3Rpb24gZHJhZ292ZXIoJGV2ZW50KSB7CiAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgIHJldHVybiBfdm0uaGFuZGxlRHJhZ092ZXIoJGV2ZW50LCBpdGVtKTsKICAgICAgICB9LAogICAgICAgICJkcmFnZW50ZXIiOiBmdW5jdGlvbiBkcmFnZW50ZXIoJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gX3ZtLmhhbmRsZURyYWdFbnRlcigkZXZlbnQsIGl0ZW0pOwogICAgICAgIH0sCiAgICAgICAgImRyYWdlbmQiOiBmdW5jdGlvbiBkcmFnZW5kKCRldmVudCkgewogICAgICAgICAgcmV0dXJuIF92bS5oYW5kbGVEcmFnRW5kKCRldmVudCwgaXRlbSk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBbX2MoJ2ltZycsIHsKICAgICAgZGlyZWN0aXZlczogW3sKICAgICAgICBuYW1lOiAibGF6eSIsCiAgICAgICAgcmF3TmFtZTogInYtbGF6eSIsCiAgICAgICAgdmFsdWU6IGl0ZW0sCiAgICAgICAgZXhwcmVzc2lvbjogIml0ZW0iCiAgICAgIH1dCiAgICB9KSwgX2MoJ2knLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAiZWwtaWNvbi1jaXJjbGUtY2xvc2UgYnRuZGVsIiwKICAgICAgb246IHsKICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiBfdm0uaGFuZGxlUmVtb3ZlKGluZGV4KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pXSk7CiAgfSksIF92bS5mb3JtVmFsaWRhdGUuaW1hZ2VzLmxlbmd0aCA8IDEwID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAidXBMb2FkIGFjZWEtcm93IHJvdy1jZW50ZXItd3JhcHBlciIsCiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLm1vZGFsUGljVGFwKCdkdW8nKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAiZWwtaWNvbi1waWN0dXJlLW91dGxpbmUiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIyNHB4IgogICAgfQogIH0pXSkgOiBfdm0uX2UoKV0sIDIpXSldLCAxKSwgX2MoJ2VsLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcGFuIjogMjQKICAgIH0KICB9LCBbX2MoJ2VsLWNvbCcsIF92bS5fYih7fSwgJ2VsLWNvbCcsIF92bS5ncmlkLCBmYWxzZSksIFtfYygnZWwtZm9ybS1pdGVtJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIuaLvOWbouWQjeensO+8miIsCiAgICAgICJwcm9wIjogInRpdGxlIiwKICAgICAgImxhYmVsLWZvciI6ICJ0aXRsZSIKICAgIH0KICB9LCBbX2MoJ2VsLWlucHV0JywgewogICAgc3RhdGljQ2xhc3M6ICJjb250ZW50X3dpZHRoIiwKICAgIGF0dHJzOiB7CiAgICAgICJlbGVhcmFibGUiOiAiIiwKICAgICAgInBsYWNlaG9sZGVyIjogIuivt+i+k+WFpeaLvOWbouWQjeensCIKICAgIH0sCiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLmZvcm1WYWxpZGF0ZS50aXRsZSwKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS4kc2V0KF92bS5mb3JtVmFsaWRhdGUsICJ0aXRsZSIsICQkdik7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJmb3JtVmFsaWRhdGUudGl0bGUiCiAgICB9CiAgfSldLCAxKV0sIDEpXSwgMSksIF9jKCdlbC1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAic3BhbiI6IDI0CiAgICB9CiAgfSwgW19jKCdlbC1jb2wnLCBfdm0uX2Ioe30sICdlbC1jb2wnLCBfdm0uZ3JpZCwgZmFsc2UpLCBbX2MoJ2VsLWZvcm0taXRlbScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLmi7zlm6LnroDku4vvvJoiLAogICAgICAicHJvcCI6ICJpbmZvIiwKICAgICAgImxhYmVsLWZvciI6ICJpbmZvIgogICAgfQogIH0sIFtfYygnZWwtaW5wdXQnLCB7CiAgICBzdGF0aWNDbGFzczogImNvbnRlbnRfd2lkdGgiLAogICAgYXR0cnM6IHsKICAgICAgInBsYWNlaG9sZGVyIjogIuivt+i+k+WFpeaLvOWboueugOS7iyIsCiAgICAgICJ0eXBlIjogInRleHRhcmVhIiwKICAgICAgInJvd3MiOiA0CiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5mb3JtVmFsaWRhdGUuaW5mbywKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS4kc2V0KF92bS5mb3JtVmFsaWRhdGUsICJpbmZvIiwgJCR2KTsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogImZvcm1WYWxpZGF0ZS5pbmZvIgogICAgfQogIH0pXSwgMSldLCAxKV0sIDEpLCBfYygnZWwtY29sJywgewogICAgYXR0cnM6IHsKICAgICAgInNwYW4iOiAyNAogICAgfQogIH0sIFtfYygnZWwtZm9ybS1pdGVtJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIuaLvOWbouaXtumXtO+8miIsCiAgICAgICJwcm9wIjogInNlY3Rpb25fdGltZSIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygnZWwtZGF0ZS1waWNrZXInLCB7CiAgICBzdGF0aWNDbGFzczogImNvbnRlbnRfd2lkdGgiLAogICAgYXR0cnM6IHsKICAgICAgImNsZWFyYWJsZSI6ICIiLAogICAgICAiZWRpdGFibGUiOiBmYWxzZSwKICAgICAgInR5cGUiOiAiZGF0ZXRpbWVyYW5nZSIsCiAgICAgICJmb3JtYXQiOiAieXl5eS1NTS1kZCBISDptbSIsCiAgICAgICJ2YWx1ZS1mb3JtYXQiOiAieXl5eS1NTS1kZCBISDptbSIsCiAgICAgICJyYW5nZS1zZXBhcmF0b3IiOiAiLSIsCiAgICAgICJzdGFydC1wbGFjZWhvbGRlciI6ICLlvIDlp4vml6XmnJ8iLAogICAgICAiZW5kLXBsYWNlaG9sZGVyIjogIue7k+adn+aXpeacnyIKICAgIH0sCiAgICBvbjogewogICAgICAiY2hhbmdlIjogX3ZtLm9uY2hhbmdlVGltZQogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uZm9ybVZhbGlkYXRlLnNlY3Rpb25fdGltZSwKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS4kc2V0KF92bS5mb3JtVmFsaWRhdGUsICJzZWN0aW9uX3RpbWUiLCAkJHYpOwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAiZm9ybVZhbGlkYXRlLnNlY3Rpb25fdGltZSIKICAgIH0KICB9KSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZ3JleSIKICB9LCBbX3ZtLl92KCLorr7nva7mtLvliqjlvIDlkK/nu5PmnZ/ml7bpl7TvvIznlKjmiLflj6/ku6XlnKjorr7nva7ml7bpl7TlhoXlj5Hotbflj4LkuI7mi7zlm6IiKV0pXSwgMSldKV0sIDEpLCBfdm0uZm9ybVZhbGlkYXRlLnZpcnR1YWxfdHlwZSA9PSAwID8gX2MoJ2VsLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcGFuIjogMjQKICAgIH0KICB9LCBbX2MoJ2VsLWZvcm0taXRlbScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLnianmtYHmlrnlvI/vvJoiLAogICAgICAicHJvcCI6ICJsb2dpc3RpY3MiCiAgICB9CiAgfSwgW19jKCdlbC1jaGVja2JveC1ncm91cCcsIHsKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uZm9ybVZhbGlkYXRlLmxvZ2lzdGljcywKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS4kc2V0KF92bS5mb3JtVmFsaWRhdGUsICJsb2dpc3RpY3MiLCAkJHYpOwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAiZm9ybVZhbGlkYXRlLmxvZ2lzdGljcyIKICAgIH0KICB9LCBbX2MoJ2VsLWNoZWNrYm94JywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIjEiCiAgICB9CiAgfSwgW192bS5fdigi5b+r6YCSIildKSwgX2MoJ2VsLWNoZWNrYm94JywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIjIiCiAgICB9CiAgfSwgW192bS5fdigi5Yiw5bqX5qC46ZSAIildKV0sIDEpXSwgMSldLCAxKSA6IF92bS5fZSgpLCBfdm0uZm9ybVZhbGlkYXRlLnZpcnR1YWxfdHlwZSA9PSAwID8gX2MoJ2VsLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcGFuIjogMjQKICAgIH0KICB9LCBbX2MoJ2VsLWZvcm0taXRlbScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLov5DotLnorr7nva7vvJoiLAogICAgICAicHJvcCI6IF92bS5mb3JtVmFsaWRhdGUuZnJlaWdodCAhPSAxID8gJ2ZyZWlnaHQnIDogJycKICAgIH0KICB9LCBbX2MoJ2VsLXJhZGlvLWdyb3VwJywgewogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5mb3JtVmFsaWRhdGUuZnJlaWdodCwKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS4kc2V0KF92bS5mb3JtVmFsaWRhdGUsICJmcmVpZ2h0IiwgJCR2KTsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogImZvcm1WYWxpZGF0ZS5mcmVpZ2h0IgogICAgfQogIH0sIFtfYygnZWwtcmFkaW8nLCB7CiAgICBhdHRyczogewogICAgICAibGFiZWwiOiAyCiAgICB9CiAgfSwgW192bS5fdigi5Zu65a6a6YKu6LS5IildKSwgX2MoJ2VsLXJhZGlvJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogMwogICAgfQogIH0sIFtfdm0uX3YoIui/kOi0ueaooeadvyIpXSldLCAxKV0sIDEpXSwgMSkgOiBfdm0uX2UoKSwgX3ZtLmZvcm1WYWxpZGF0ZS5mcmVpZ2h0ICE9IDMgJiYgX3ZtLmZvcm1WYWxpZGF0ZS5mcmVpZ2h0ICE9IDEgJiYgX3ZtLmZvcm1WYWxpZGF0ZS52aXJ0dWFsX3R5cGUgPT0gMCA/IF9jKCdlbC1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAic3BhbiI6IDI0CiAgICB9CiAgfSwgW19jKCdlbC1mb3JtLWl0ZW0nLCB7CiAgICBhdHRyczogewogICAgICAibGFiZWwiOiAiIgogICAgfQogIH0sIFtfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJhY2VhLXJvdyIKICB9LCBbX2MoJ2VsLWlucHV0LW51bWJlcicsIHsKICAgIHN0YXRpY0NsYXNzOiAiY29udGVudF93aWR0aCIsCiAgICBhdHRyczogewogICAgICAiY29udHJvbHMiOiBmYWxzZSwKICAgICAgIm1pbiI6IDAsCiAgICAgICJtYXgiOiA5OTk5OTk5OTk5LAogICAgICAicGxhY2Vob2xkZXIiOiAi6K+36L6T5YWl6YeR6aKdIgogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uZm9ybVZhbGlkYXRlLnBvc3RhZ2UsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0uZm9ybVZhbGlkYXRlLCAicG9zdGFnZSIsICQkdik7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJmb3JtVmFsaWRhdGUucG9zdGFnZSIKICAgIH0KICB9KV0sIDEpXSldLCAxKSA6IF92bS5fZSgpLCBfdm0uZm9ybVZhbGlkYXRlLmZyZWlnaHQgPT0gMyAmJiBfdm0uZm9ybVZhbGlkYXRlLnZpcnR1YWxfdHlwZSA9PSAwID8gX2MoJ2VsLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcGFuIjogMjQKICAgIH0KICB9LCBbX2MoJ2VsLWZvcm0taXRlbScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICIiLAogICAgICAicHJvcCI6ICJ0ZW1wX2lkIgogICAgfQogIH0sIFtfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJhY2VhLXJvdyIKICB9LCBbX2MoJ2VsLXNlbGVjdCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiY29udGVudF93aWR0aCIsCiAgICBhdHRyczogewogICAgICAiY2xlYXJhYmxlIjogIiIsCiAgICAgICJwbGFjZWhvbGRlciI6ICLor7fpgInmi6nov5DotLnmqKHmnb8iCiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5mb3JtVmFsaWRhdGUudGVtcF9pZCwKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS4kc2V0KF92bS5mb3JtVmFsaWRhdGUsICJ0ZW1wX2lkIiwgJCR2KTsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogImZvcm1WYWxpZGF0ZS50ZW1wX2lkIgogICAgfQogIH0sIF92bS5fbChfdm0udGVtcGxhdGVMaXN0LCBmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgIHJldHVybiBfYygnZWwtb3B0aW9uJywgewogICAgICBrZXk6IGluZGV4LAogICAgICBhdHRyczogewogICAgICAgICJ2YWx1ZSI6IGl0ZW0uaWQsCiAgICAgICAgImxhYmVsIjogaXRlbS5uYW1lCiAgICAgIH0KICAgIH0pOwogIH0pLCAxKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImFkZGZvbnQiLAogICAgb246IHsKICAgICAgImNsaWNrIjogX3ZtLmZyZWlnaHQKICAgIH0KICB9LCBbX3ZtLl92KCLmlrDlop7ov5DotLnmqKHmnb8iKV0pXSwgMSldKV0sIDEpIDogX3ZtLl9lKCksIF9jKCdlbC1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAic3BhbiI6IDI0CiAgICB9CiAgfSwgW19jKCdlbC1mb3JtLWl0ZW0nLCB7CiAgICBhdHRyczogewogICAgICAibGFiZWwiOiAi5ou85Zui5pe25pWIKOWNleS9jSDlsI/ml7Yp77yaIiwKICAgICAgInByb3AiOiAiZWZmZWN0aXZlX3RpbWUiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ2VsLWlucHV0LW51bWJlcicsIHsKICAgIHN0YXRpY0NsYXNzOiAiY29udGVudF93aWR0aCIsCiAgICBhdHRyczogewogICAgICAiY29udHJvbHMiOiBmYWxzZSwKICAgICAgInBsYWNlaG9sZGVyIjogIuivt+i+k+WFpeaLvOWbouaXtuaViCjljZXkvY0g5bCP5pe2KSIKICAgIH0sCiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLmZvcm1WYWxpZGF0ZS5lZmZlY3RpdmVfdGltZSwKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS4kc2V0KF92bS5mb3JtVmFsaWRhdGUsICJlZmZlY3RpdmVfdGltZSIsICQkdik7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJmb3JtVmFsaWRhdGUuZWZmZWN0aXZlX3RpbWUiCiAgICB9CiAgfSksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImdyZXkiCiAgfSwgW192bS5fdigiXG4gICAgICAgICAgICAgICAgICAgIOeUqOaIt+WPkei1t+aLvOWbouWQjuW8gOWni+iuoeaXtu+8jOmcgOWcqOiuvue9ruaXtumXtOWGhemCgOivt+WIsOinhOWumuWlveWPi+S6uuaVsOWPguWbou+8jOi2hei/h+aXtuaViOaXtumXtO+8jOWImeezu+e7n+WIpOWumuaLvOWbouWksei0pe+8jOiHquWKqOWPkei1t+mAgOasvlxuICAgICAgICAgICAgICAgICAgIildKV0sIDEpXSldLCAxKSwgX2MoJ2VsLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcGFuIjogMjQKICAgIH0KICB9LCBbX2MoJ2VsLWZvcm0taXRlbScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLmi7zlm6LkurrmlbDvvJoiLAogICAgICAicHJvcCI6ICJwZW9wbGUiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ2VsLWlucHV0LW51bWJlcicsIHsKICAgIHN0YXRpY0NsYXNzOiAiY29udGVudF93aWR0aCIsCiAgICBhdHRyczogewogICAgICAiY29udHJvbHMiOiBmYWxzZSwKICAgICAgIm1pbiI6IDIsCiAgICAgICJtYXgiOiAxMDAwMCwKICAgICAgInBsYWNlaG9sZGVyIjogIuivt+i+k+WFpeaLvOWbouS6uuaVsCIsCiAgICAgICJwcmVjaXNpb24iOiAwCiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5mb3JtVmFsaWRhdGUucGVvcGxlLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm1WYWxpZGF0ZSwgInBlb3BsZSIsICQkdik7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJmb3JtVmFsaWRhdGUucGVvcGxlIgogICAgfQogIH0pLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJncmV5IgogIH0sIFtfdm0uX3YoIuWNleasoeaLvOWboumcgOimgeWPguS4jueahOeUqOaIt+aVsCIpXSldLCAxKV0pXSwgMSksIF9jKCdlbC1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAic3BhbiI6IDI0CiAgICB9CiAgfSwgW19jKCdlbC1mb3JtLWl0ZW0nLCB7CiAgICBhdHRyczogewogICAgICAibGFiZWwiOiAi6Jma5ouf5oiQ5Zui6KGl6b2Q5Lq65pWw77yaIiwKICAgICAgInByb3AiOiAidmlydHVhbFBlb3BsZSIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygnZWwtaW5wdXQtbnVtYmVyJywgewogICAgc3RhdGljQ2xhc3M6ICJjb250ZW50X3dpZHRoIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb250cm9scyI6IGZhbHNlLAogICAgICAicGxhY2Vob2xkZXIiOiAi6K6+572u6Jma5ouf5oiQ5Zui55qE6KGl6b2Q5Lq65pWwIiwKICAgICAgInByZWNpc2lvbiI6IDAsCiAgICAgICJtYXgiOiAxMDAwMCwKICAgICAgIm1pbiI6IDAKICAgIH0sCiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLmZvcm1WYWxpZGF0ZS52aXJ0dWFsUGVvcGxlLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm1WYWxpZGF0ZSwgInZpcnR1YWxQZW9wbGUiLCAkJHYpOwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAiZm9ybVZhbGlkYXRlLnZpcnR1YWxQZW9wbGUiCiAgICB9CiAgfSksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImdyZXkiCiAgfSwgW192bS5fdigiXG4gICAgICAgICAgICAgICAgICAgIOiuvue9ruiZmuaLn+aIkOWboueahOihpem9kOS6uuaVsO+8jOWmgu+8mjXkurrlm6Lorr7nva7ooaXpvZAy5Lq677yM5b2T5Zui6Zif5oiQ5ZGY5aSn5LqO562J5LqOM+S6uuaXtu+8jOaLvOWboue7k+adn+aXtuiHquWKqOihpem9kOWJqeS9meacgOWkmjLkuKrkvY3nva7vvIzkuI3lvIDlkK/omZrmi5/miJDlm6Lor7forr7nva7kuLowXG4gICAgICAgICAgICAgICAgICAiKV0pXSwgMSldKV0sIDEpLCBfYygnZWwtY29sJywgewogICAgYXR0cnM6IHsKICAgICAgInNwYW4iOiAyNAogICAgfQogIH0sIFtfYygnZWwtZm9ybS1pdGVtJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIuaAu+i0reS5sOaVsOmHj+mZkOWItu+8miIsCiAgICAgICJwcm9wIjogIm51bSIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygnZWwtaW5wdXQtbnVtYmVyJywgewogICAgc3RhdGljQ2xhc3M6ICJjb250ZW50X3dpZHRoIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb250cm9scyI6IGZhbHNlLAogICAgICAibWluIjogMSwKICAgICAgInBsYWNlaG9sZGVyIjogIuivt+i+k+WFpeaAu+aVsOmHj+mZkOWItiIsCiAgICAgICJwcmVjaXNpb24iOiAwLAogICAgICAibWF4IjogMTAwMDAKICAgIH0sCiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLmZvcm1WYWxpZGF0ZS5udW0sCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0uZm9ybVZhbGlkYXRlLCAibnVtIiwgJCR2KTsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogImZvcm1WYWxpZGF0ZS5udW0iCiAgICB9CiAgfSksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImdyZXkiCiAgfSwgW192bS5fdigiXG4gICAgICAgICAgICAgICAgICAgIOivpeWVhuWTgea0u+WKqOacn+mXtOWGhe+8jOeUqOaIt+WPr+i0reS5sOeahOacgOWkp+aVsOmHj+OAguS+i+Wmguiuvue9ruS4ujTvvIzooajnpLrmnKzmrKHmtLvliqjmnInmlYjmnJ/lhoXvvIzmr4/kuKrnlKjmiLfmnIDlpJrlj6/otK3kubA05Lu2XG4gICAgICAgICAgICAgICAgICAiKV0pXSwgMSldKV0sIDEpLCBfYygnZWwtY29sJywgewogICAgYXR0cnM6IHsKICAgICAgInNwYW4iOiAyNAogICAgfQogIH0sIFtfYygnZWwtZm9ybS1pdGVtJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIuWNleasoei0reS5sOaVsOmHj+mZkOWItu+8miIsCiAgICAgICJwcm9wIjogIm9uY2VfbnVtIgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdlbC1pbnB1dC1udW1iZXInLCB7CiAgICBzdGF0aWNDbGFzczogImNvbnRlbnRfd2lkdGgiLAogICAgYXR0cnM6IHsKICAgICAgImNvbnRyb2xzIjogZmFsc2UsCiAgICAgICJtaW4iOiAxLAogICAgICAicGxhY2Vob2xkZXIiOiAi6K+36L6T5YWl5Y2V5qyh6LSt5Lmw5pWw6YeP6ZmQ5Yi2IiwKICAgICAgInByZWNpc2lvbiI6IDAsCiAgICAgICJtYXgiOiAxMDAwMAogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uZm9ybVZhbGlkYXRlLm9uY2VfbnVtLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm1WYWxpZGF0ZSwgIm9uY2VfbnVtIiwgJCR2KTsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogImZvcm1WYWxpZGF0ZS5vbmNlX251bSIKICAgIH0KICB9KSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZ3JleSIKICB9LCBbX3ZtLl92KCJcbiAgICAgICAgICAgICAgICAgICAg55So5oi35Y+C5LiO5ou85Zui5pe277yM5LiA5qyh6LSt5Lmw5pyA5aSn5pWw6YeP6ZmQ5Yi244CC5L6L5aaC6K6+572u5Li6Mu+8jOihqOekuuavj+asoeWPguS4juaLvOWbouaXtu+8jOeUqOaIt+S4gOasoei0reS5sOaVsOmHj+acgOWkp+WPr+mAieaLqTLkuKpcbiAgICAgICAgICAgICAgICAgICIpXSldLCAxKV0pXSwgMSksIF9jKCdlbC1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAic3BhbiI6IDI0CiAgICB9CiAgfSwgW19jKCdlbC1mb3JtLWl0ZW0nLCB7CiAgICBhdHRyczogewogICAgICAibGFiZWwiOiAi5Y2V5L2N77yaIiwKICAgICAgInByb3AiOiAidW5pdF9uYW1lIiwKICAgICAgImxhYmVsLWZvciI6ICJ1bml0X25hbWUiCiAgICB9CiAgfSwgW19jKCdlbC1pbnB1dCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiY29udGVudF93aWR0aCIsCiAgICBhdHRyczogewogICAgICAiY2xlYXJhYmxlIjogIiIsCiAgICAgICJwbGFjZWhvbGRlciI6ICLor7fovpPlhaXljZXkvY0iCiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5mb3JtVmFsaWRhdGUudW5pdF9uYW1lLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm1WYWxpZGF0ZSwgInVuaXRfbmFtZSIsICQkdik7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJmb3JtVmFsaWRhdGUudW5pdF9uYW1lIgogICAgfQogIH0pXSwgMSldLCAxKSwgX2MoJ2VsLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcGFuIjogMjQKICAgIH0KICB9LCBbX2MoJ2VsLWZvcm0taXRlbScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLlm6Lplb/ov5TkvaPmr5TkvovvvJoiLAogICAgICAicHJvcCI6ICJoZWFkX2NvbW1pc3Npb24iCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ2VsLWlucHV0LW51bWJlcicsIHsKICAgIHN0YXRpY0NsYXNzOiAiY29udGVudF93aWR0aCIsCiAgICBhdHRyczogewogICAgICAiY29udHJvbHMiOiBmYWxzZSwKICAgICAgIm1pbiI6IDAsCiAgICAgICJtYXgiOiAxMDAsCiAgICAgICJwbGFjZWhvbGRlciI6ICLlm6Lplb/ov5TkvaPmr5TkvosiLAogICAgICAicHJlY2lzaW9uIjogMAogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uZm9ybVZhbGlkYXRlLmhlYWRfY29tbWlzc2lvbiwKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS4kc2V0KF92bS5mb3JtVmFsaWRhdGUsICJoZWFkX2NvbW1pc3Npb24iLCAkJHYpOwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAiZm9ybVZhbGlkYXRlLmhlYWRfY29tbWlzc2lvbiIKICAgIH0KICB9KSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZ3JleSIKICB9LCBbX3ZtLl92KCJcbiAgICAgICAgICAgICAgICAgICAg5ou85Zui5oiQ5Yqf5ZCO77yM5aaC5p6c5Zui6ZW/5piv5YiG6ZSA5ZGY77yM5YiZ5Zyo6K6i5Y2V56Gu6K6k5pS26LSn5pe25Lya57uZ5Zui6ZW/6L+U5LiA5a6a55qE5L2j6YeR77yM5L2j6YeR5q+U5L6L5piv5a6e6ZmF5pSv5LuY6YeR6aKd55qEMC0xMDAlXG4gICAgICAgICAgICAgICAgICAiKV0pXSwgMSldKV0sIDEpLCBfYygnZWwtY29sJywgewogICAgYXR0cnM6IHsKICAgICAgInNwYW4iOiAyNAogICAgfQogIH0sIFtfYygnZWwtZm9ybS1pdGVtJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIuaLvOWbouaYr+WQpuWPguS4juWIhumUgO+8miIsCiAgICAgICJwcm9wcyI6ICJpc19jb21taXNzaW9uIiwKICAgICAgImxhYmVsLWZvciI6ICJpc19jb21taXNzaW9uIgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdlbC1zd2l0Y2gnLCB7CiAgICBzdGF0aWNDbGFzczogImRlZmluZVN3aXRjaCIsCiAgICBhdHRyczogewogICAgICAiYWN0aXZlLXZhbHVlIjogMSwKICAgICAgImluYWN0aXZlLXZhbHVlIjogMCwKICAgICAgInNpemUiOiAibGFyZ2UiLAogICAgICAiYWN0aXZlLXRleHQiOiAi5byA5ZCvIiwKICAgICAgImluYWN0aXZlLXRleHQiOiAi5YWz6ZetIgogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uZm9ybVZhbGlkYXRlLmlzX2NvbW1pc3Npb24sCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0uZm9ybVZhbGlkYXRlLCAiaXNfY29tbWlzc2lvbiIsICQkdik7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJmb3JtVmFsaWRhdGUuaXNfY29tbWlzc2lvbiIKICAgIH0KICB9KSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZ3JleSIKICB9LCBbX3ZtLl92KCLmi7zlm6LllYblk4HmmK/lkKblj4LkuI7llYbln47liIbplIDov5TkvaMiKV0pXSwgMSldKV0sIDEpLCBfYygnZWwtY29sJywgewogICAgYXR0cnM6IHsKICAgICAgInNwYW4iOiAyNAogICAgfQogIH0sIFtfYygnZWwtZm9ybS1pdGVtJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIuaOkuW6j++8miIKICAgIH0KICB9LCBbX2MoJ2VsLWlucHV0LW51bWJlcicsIHsKICAgIHN0YXRpY0NsYXNzOiAiY29udGVudF93aWR0aCIsCiAgICBhdHRyczogewogICAgICAiY29udHJvbHMiOiBmYWxzZSwKICAgICAgInBsYWNlaG9sZGVyIjogIuivt+i+k+WFpeaOkuW6jyIsCiAgICAgICJwcmVjaXNpb24iOiAwLAogICAgICAibWF4IjogMTAwMDAsCiAgICAgICJtaW4iOiAwCiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5mb3JtVmFsaWRhdGUuc29ydCwKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS4kc2V0KF92bS5mb3JtVmFsaWRhdGUsICJzb3J0IiwgJCR2KTsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogImZvcm1WYWxpZGF0ZS5zb3J0IgogICAgfQogIH0pXSwgMSldLCAxKSwgX2MoJ2VsLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcGFuIjogMjQKICAgIH0KICB9LCBbX2MoJ2VsLWZvcm0taXRlbScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLng63pl6jmjqjojZDvvJoiLAogICAgICAicHJvcHMiOiAiaXNfaG90IiwKICAgICAgImxhYmVsLWZvciI6ICJpc19ob3QiCiAgICB9CiAgfSwgW19jKCdlbC1zd2l0Y2gnLCB7CiAgICBzdGF0aWNDbGFzczogImRlZmluZVN3aXRjaCIsCiAgICBhdHRyczogewogICAgICAiYWN0aXZlLXZhbHVlIjogMSwKICAgICAgImluYWN0aXZlLXZhbHVlIjogMCwKICAgICAgInNpemUiOiAibGFyZ2UiLAogICAgICAiYWN0aXZlLXRleHQiOiAi5byA5ZCvIiwKICAgICAgImluYWN0aXZlLXRleHQiOiAi5YWz6ZetIgogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uZm9ybVZhbGlkYXRlLmlzX2hvc3QsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0uZm9ybVZhbGlkYXRlLCAiaXNfaG9zdCIsICQkdik7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJmb3JtVmFsaWRhdGUuaXNfaG9zdCIKICAgIH0KICB9KV0sIDEpXSwgMSksIF9jKCdlbC1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAic3BhbiI6IDI0CiAgICB9CiAgfSwgW19jKCdlbC1mb3JtLWl0ZW0nLCB7CiAgICBhdHRyczogewogICAgICAibGFiZWwiOiAi5rS75Yqo54q25oCB77yaIiwKICAgICAgInByb3BzIjogImlzX3Nob3ciLAogICAgICAibGFiZWwtZm9yIjogImlzX3Nob3ciCiAgICB9CiAgfSwgW19jKCdlbC1zd2l0Y2gnLCB7CiAgICBzdGF0aWNDbGFzczogImRlZmluZVN3aXRjaCIsCiAgICBhdHRyczogewogICAgICAiYWN0aXZlLXZhbHVlIjogMSwKICAgICAgImluYWN0aXZlLXZhbHVlIjogMCwKICAgICAgInNpemUiOiAibGFyZ2UiLAogICAgICAiYWN0aXZlLXRleHQiOiAi5byA5ZCvIiwKICAgICAgImluYWN0aXZlLXRleHQiOiAi5YWz6ZetIgogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uZm9ybVZhbGlkYXRlLmlzX3Nob3csCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0uZm9ybVZhbGlkYXRlLCAiaXNfc2hvdyIsICQkdik7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJmb3JtVmFsaWRhdGUuaXNfc2hvdyIKICAgIH0KICB9KV0sIDEpXSwgMSksIF9jKCdlbC1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAic3BhbiI6IDI0CiAgICB9CiAgfSwgW19jKCdlbC1mb3JtLWl0ZW0nLCB7CiAgICBhdHRyczogewogICAgICAibGFiZWwiOiAi6KeE5qC86YCJ5oup77yaIgogICAgfQogIH0sIFtfYygnZWwtdGFibGUnLCB7CiAgICByZWY6ICJtdWx0aXBsZVRhYmxlIiwKICAgIGF0dHJzOiB7CiAgICAgICJkYXRhIjogX3ZtLnNwZWNzRGF0YSwKICAgICAgInJvdy1rZXkiOiBfdm0uZ2V0Um93S2V5cywKICAgICAgImJvcmRlciI6ICIiCiAgICB9LAogICAgb246IHsKICAgICAgInNlbGVjdGlvbi1jaGFuZ2UiOiBfdm0uY2hhbmdlQ2hlY2tib3gKICAgIH0KICB9LCBbX2MoJ2VsLXRhYmxlLWNvbHVtbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ0eXBlIjogInNlbGVjdGlvbiIsCiAgICAgICJyZXNlcnZlLXNlbGVjdGlvbiI6IHRydWUsCiAgICAgICJ3aWR0aCI6ICI1NSIKICAgIH0KICB9KSwgX3ZtLl9sKF92bS5jb2x1bW5zLCBmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgIHJldHVybiBfYygnZWwtdGFibGUtY29sdW1uJywgewogICAgICBrZXk6IGluZGV4LAogICAgICBhdHRyczogewogICAgICAgICJsYWJlbCI6IGl0ZW0udGl0bGUsCiAgICAgICAgIm1pbi13aWR0aCI6IGl0ZW0ubWluV2lkdGgKICAgICAgfSwKICAgICAgc2NvcGVkU2xvdHM6IF92bS5fdShbewogICAgICAgIGtleTogImRlZmF1bHQiLAogICAgICAgIGZuOiBmdW5jdGlvbiBmbihzY29wZSkgewogICAgICAgICAgcmV0dXJuIFtpdGVtLmtleSA/IFtfYygnZGl2JywgW19jKCdzcGFuJywgW192bS5fdihfdm0uX3Moc2NvcGUucm93W2l0ZW0ua2V5XSkpXSldKV0gOiBpdGVtLnNsb3QgPT09ICdwaWMnID8gW19jKCdkaXYnLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYWNlYS1yb3cgcm93LW1pZGRsZSByb3ctY2VudGVyLXdyYXBwZXIiLAogICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgICAgICAgcmV0dXJuIF92bS5tb2RhbFBpY1RhcCgnZGFuJywgJ2RhblRhYmxlJywgc2NvcGUuJGluZGV4KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIFtzY29wZS5yb3cucGljID8gX2MoJ2RpdicsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJwaWN0cnVlIHBpY3RydWVUYWIiCiAgICAgICAgICB9LCBbX2MoJ2ltZycsIHsKICAgICAgICAgICAgZGlyZWN0aXZlczogW3sKICAgICAgICAgICAgICBuYW1lOiAibGF6eSIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtbGF6eSIsCiAgICAgICAgICAgICAgdmFsdWU6IHNjb3BlLnJvdy5waWMsCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInNjb3BlLnJvdy5waWMiCiAgICAgICAgICAgIH1dCiAgICAgICAgICB9KV0pIDogX2MoJ2RpdicsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ1cExvYWQgcGljdHJ1ZVRhYiBhY2VhLXJvdyByb3ctY2VudGVyLXdyYXBwZXIiCiAgICAgICAgICB9LCBbX2MoJ2knLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZWwtaWNvbi1waWN0dXJlLW91dGxpbmUiLAogICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICJmb250LXNpemUiOiAiMjRweCIKICAgICAgICAgICAgfQogICAgICAgICAgfSldKV0pXSA6IGl0ZW0uc2xvdCA9PT0gJ3ByaWNlJyA/IFtfYygnZWwtaW5wdXQtbnVtYmVyJywgewogICAgICAgICAgICBzdGF0aWNDbGFzczogInByaWNlQm94IiwKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAiY29udHJvbHMiOiBmYWxzZSwKICAgICAgICAgICAgICAibWluIjogMCwKICAgICAgICAgICAgICAicHJlY2lzaW9uIjogMiwKICAgICAgICAgICAgICAiYWN0aXZlLWNoYW5nZSI6IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgdmFsdWU6IHNjb3BlLnJvdy5wcmljZSwKICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgICAgICAgICBfdm0uJHNldChzY29wZS5yb3csICJwcmljZSIsICQkdik7CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBleHByZXNzaW9uOiAic2NvcGUucm93LnByaWNlIgogICAgICAgICAgICB9CiAgICAgICAgICB9KV0gOiBfdm0uX2UoKSwgaXRlbS5zbG90ID09PSAncXVvdGEnID8gW19jKCdlbC1pbnB1dC1udW1iZXInLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicHJpY2VCb3giLAogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICJjb250cm9scyI6IGZhbHNlLAogICAgICAgICAgICAgICJtaW4iOiAxLAogICAgICAgICAgICAgICJhY3RpdmUtY2hhbmdlIjogIiIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICB2YWx1ZTogc2NvcGUucm93LnF1b3RhLAogICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICAgICAgICAgIF92bS4kc2V0KHNjb3BlLnJvdywgInF1b3RhIiwgJCR2KTsKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJzY29wZS5yb3cucXVvdGEiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pXSA6IF92bS5fZSgpXTsKICAgICAgICB9CiAgICAgIH1dLCBudWxsLCB0cnVlKQogICAgfSk7CiAgfSldLCAyKV0sIDEpXSwgMSldLCAxKSwgX2MoJ2VsLXJvdycsIHsKICAgIGRpcmVjdGl2ZXM6IFt7CiAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgIHZhbHVlOiBfdm0uY3VycmVudCA9PT0gMiwKICAgICAgZXhwcmVzc2lvbjogImN1cnJlbnQgPT09IDIiCiAgICB9XQogIH0sIFtfYygnZWwtY29sJywgewogICAgYXR0cnM6IHsKICAgICAgInNwYW4iOiAyNAogICAgfQogIH0sIFtfYygnZWwtZm9ybS1pdGVtJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIuWGheWuue+8miIKICAgIH0KICB9LCBbX2MoJ1dhbmdFZGl0b3InLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAid2lkdGgiOiAiOTAlIgogICAgfSwKICAgIGF0dHJzOiB7CiAgICAgICJjb250ZW50IjogX3ZtLmZvcm1WYWxpZGF0ZS5kZXNjcmlwdGlvbgogICAgfSwKICAgIG9uOiB7CiAgICAgICJlZGl0b3JDb250ZW50IjogX3ZtLmdldEVkaXRvckNvbnRlbnQKICAgIH0KICB9KV0sIDEpXSwgMSldLCAxKSwgX2MoJ2VsLWZvcm0taXRlbScsIFtfYygnZWwtYnV0dG9uJywgewogICAgc3RhdGljQ2xhc3M6ICJzdWJtaXNzaW9uIiwKICAgIGF0dHJzOiB7CiAgICAgICJkaXNhYmxlZCI6IF92bS4kcm91dGUucGFyYW1zLmlkICYmIF92bS5jdXJyZW50ID09PSAxIHx8IF92bS5jdXJyZW50ID09PSAwCiAgICB9LAogICAgb246IHsKICAgICAgImNsaWNrIjogX3ZtLnN0ZXAKICAgIH0KICB9LCBbX3ZtLl92KCLkuIrkuIDmraUiKV0pLCBfYygnZWwtYnV0dG9uJywgewogICAgc3RhdGljQ2xhc3M6ICJzdWJtaXNzaW9uIiwKICAgIGF0dHJzOiB7CiAgICAgICJ0eXBlIjogInByaW1hcnkiLAogICAgICAiZGlzYWJsZWQiOiBfdm0uc3VibWl0T3BlbiAmJiBfdm0uY3VycmVudCA9PT0gMgogICAgfSwKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0ubmV4dCgnZm9ybVZhbGlkYXRlJyk7CiAgICAgIH0KICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uY3VycmVudCA9PT0gMiA/ICfmj5DkuqQnIDogJ+S4i+S4gOatpScpKV0pXSwgMSldLCAxKV0sIDEpXSwgMSldLCAxKSwgX2MoJ2VsLWRpYWxvZycsIHsKICAgIHN0YXRpY0NsYXNzOiAicGF5bWVudEZvb3RlciIsCiAgICBhdHRyczogewogICAgICAidmlzaWJsZSI6IF92bS5tb2RhbHMsCiAgICAgICJ0aXRsZSI6ICLllYblk4HliJfooagiLAogICAgICAid2lkdGgiOiAiMTAwMHB4IgogICAgfSwKICAgIG9uOiB7CiAgICAgICJ1cGRhdGU6dmlzaWJsZSI6IGZ1bmN0aW9uIHVwZGF0ZVZpc2libGUoJGV2ZW50KSB7CiAgICAgICAgX3ZtLm1vZGFscyA9ICRldmVudDsKICAgICAgfQogICAgfQogIH0sIFtfYygnZ29vZHMtbGlzdCcsIHsKICAgIHJlZjogImdvb2RzbGlzdCIsCiAgICBvbjogewogICAgICAiZ2V0UHJvZHVjdElkIjogX3ZtLmdldFByb2R1Y3RJZAogICAgfQogIH0pXSwgMSksIF9jKCdlbC1kaWFsb2cnLCB7CiAgICBhdHRyczogewogICAgICAidmlzaWJsZSI6IF92bS5tb2RhbFBpYywKICAgICAgIndpZHRoIjogIjk1MHB4IiwKICAgICAgInRpdGxlIjogIuS4iuS8oOWVhuWTgeWbviIsCiAgICAgICJjbG9zZS1vbi1jbGljay1tb2RhbCI6IGZhbHNlCiAgICB9LAogICAgb246IHsKICAgICAgInVwZGF0ZTp2aXNpYmxlIjogZnVuY3Rpb24gdXBkYXRlVmlzaWJsZSgkZXZlbnQpIHsKICAgICAgICBfdm0ubW9kYWxQaWMgPSAkZXZlbnQ7CiAgICAgIH0KICAgIH0KICB9LCBbX3ZtLm1vZGFsUGljID8gX2MoJ3VwbG9hZFBpY3R1cmVzJywgewogICAgYXR0cnM6IHsKICAgICAgImlzQ2hvaWNlIjogX3ZtLmlzQ2hvaWNlLAogICAgICAiZ3JpZEJ0biI6IF92bS5ncmlkQnRuLAogICAgICAiZ3JpZFBpYyI6IF92bS5ncmlkUGljCiAgICB9LAogICAgb246IHsKICAgICAgImdldFBpYyI6IF92bS5nZXRQaWMsCiAgICAgICJnZXRQaWNEIjogX3ZtLmdldFBpY0QKICAgIH0KICB9KSA6IF92bS5fZSgpXSwgMSksIF9jKCdmcmVpZ2h0LXRlbXBsYXRlJywgewogICAgcmVmOiAidGVtcGxhdGUiLAogICAgb246IHsKICAgICAgImFkZFN1Y2Nlc3MiOiBfdm0ucHJvZHVjdEdldFRlbXBsYXRlCiAgICB9CiAgfSldLCAxKTsKfTsKdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdOwpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Ow=="},null]}