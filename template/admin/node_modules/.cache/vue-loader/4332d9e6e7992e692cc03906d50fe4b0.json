{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/system/systemMenus/index.vue?vue&type=style&index=0&id=0489b0ec&scoped=true&lang=scss","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/system/systemMenus/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/sass-loader/dist/cjs.js","mtime":1746465018452},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci52eGVUYWJsZSB7CiAgPiAudnhlLXRhYmxlLS1oZWFkZXItd3JhcHBlciB7CiAgICBiYWNrZ3JvdW5kOiAjZmZmICFpbXBvcnRhbnQ7CiAgfQogIC5pY29uIHsKICAgIGZvbnQtc2l6ZTogMjBweDsKICB9Cn0KCi5ydWxlIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogd3JhcDsKICBvdmVyZmxvdy15OiBzY3JvbGw7CiAgaGVpZ2h0OiBtYXgtY29udGVudDsKICBtYXgtaGVpZ2h0OiA2MDBweDsKICBmbGV4OiAxOwp9Ci50cmVlOjotd2Via2l0LXNjcm9sbGJhciB7CiAgd2lkdGg6IDJweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1Owp9Ci8q5a6a5LmJ5rua5Yqo5p2h6auY5a695Y+K6IOM5pmvIOmrmOWuveWIhuWIq+WvueW6lOaoquerlua7muWKqOadoeeahOWwuuWvuCovCi5ydWxlOjotd2Via2l0LXNjcm9sbGJhciB7CiAgd2lkdGg6IDEwcHg7CiAgaGVpZ2h0OiAxMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7Cn0KCi8q5a6a5LmJ5rua5Yqo5p2h6L2o6YGTIOWGhemYtOW9sSvlnIbop5IqLwoucnVsZTo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sgewogIGJvcmRlci1yYWRpdXM6IDRweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1Owp9CgovKuWumuS5iea7keWdlyDlhoXpmLTlvbEr5ZyG6KeSKi8KLnJ1bGU6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2NjYzsKfQoKLnJ1bGUtbGlzdCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjsKICB3aWR0aDogNDguNSU7CiAgaGVpZ2h0OiBtYXgtY29udGVudDsKICBtYXJnaW46IDVweDsKICBib3JkZXItcmFkaXVzOiAzcHg7CiAgcGFkZGluZzogMTBweDsKICBjb2xvcjogIzMzMzsKICBjdXJzb3I6IHBvaW50ZXI7CiAgdHJhbnNpdGlvbjogYWxsIDAuMXM7Cn0KCi5ydWxlLWxpc3Q6aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByZXYtYmctbWVudS1ob3Zlci1iYS1jb2xvcik7Cn0KCi5ydWxlLWxpc3QgZGl2IHsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwp9Cgouc2VsZWN0LXJ1bGUgewogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByZXYtYmctbWVudS1ob3Zlci1iYS1jb2xvcik7Cn0KLnJvdXRlLWxpc3QgewogIGRpc3BsYXk6IGZsZXg7CiAgbWFyZ2luLXRvcDogMTBweDsKCiAgLnRyZWUgewogICAgd2lkdGg6IDIwMHB4OwogICAgb3ZlcmZsb3cteTogc2Nyb2xsOwogICAgbWF4LWhlaWdodDogNjAwcHg7CiAgICA6OnYtZGVlcCAuZWwtdHJlZS1ub2RlX19jaGlsZHJlbiAuZWwtdHJlZS1ub2RlIC5lbC10cmVlLW5vZGVfX2NvbnRlbnQgewogICAgICBwYWRkaW5nLWxlZnQ6IDE0cHggIWltcG9ydGFudDsKICAgIH0KICB9Cn0KLmVsLWRyb3Bkb3duLWxpbmsgewogIGN1cnNvcjogcG9pbnRlcjsKICBjb2xvcjogdmFyKC0tcHJldi1jb2xvci1wcmltYXJ5KTsKICBmb250LXNpemU6IDEycHg7CiAgbWFyZ2luLWxlZnQ6IDZweDsKfQouZWwtaWNvbi1hcnJvdy1kb3duIHsKICBmb250LXNpemU6IDEycHg7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAweA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/system/systemMenus","sourcesContent":["<template>\n  <div>\n    <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mb-16\" :body-style=\"{ padding: 0 }\">\n      <div class=\"padding-add\">\n        <el-form\n          ref=\"roleData\"\n          :model=\"roleData\"\n          :label-width=\"labelWidth\"\n          :label-position=\"labelPosition\"\n          @submit.native.prevent\n          inline\n        >\n          <el-form-item label=\"规则状态：\">\n            <el-select\n              v-model=\"roleData.is_show\"\n              placeholder=\"请选择\"\n              clearable\n              @change=\"getData\"\n              class=\"form_content_width\"\n            >\n              <el-option value=\"1\" label=\"显示\"></el-option>\n              <el-option value=\"0\" label=\"不显示\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"按钮名称：\" prop=\"status2\" label-for=\"status2\">\n            <el-input clearable v-model=\"roleData.keyword\" placeholder=\"请输入按钮名称\" class=\"form_content_width\" />\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"getData\">查询</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n    </el-card>\n    <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt\">\n      <el-button type=\"primary\" @click=\"menusAdd('添加规则')\">添加规则 </el-button>\n      <vxe-table\n        :border=\"false\"\n        class=\"vxeTable mt14\"\n        highlight-hover-row\n        highlight-current-row\n        :loading=\"loading\"\n        ref=\"xTable\"\n        header-row-class-name=\"false\"\n        :tree-config=\"tabconfig\"\n        :data=\"tableData\"\n        row-id=\"id\"\n      >\n        <vxe-table-column field=\"menu_name\" tree-node title=\"按钮名称\" min-width=\"100\"></vxe-table-column>\n        <vxe-table-column field=\"unique_auth\" title=\"前端权限\" min-width=\"200\"></vxe-table-column>\n        <vxe-table-column field=\"menu_path\" title=\"路由\" min-width=\"240\" tooltip=\"true\">\n          <template v-slot=\"{ row }\">\n            <span v-if=\"row.auth_type == 1\">菜单：{{ row.menu_path }}</span>\n            <span v-if=\"row.auth_type == 3\">按钮</span>\n            <span v-if=\"row.auth_type == 2\">接口：[{{ row.methods }}]{{ row.api_url }}</span>\n          </template>\n        </vxe-table-column>\n        <vxe-table-column field=\"flag\" title=\"规则状态\" min-width=\"120\">\n          <template v-slot=\"{ row }\">\n            <el-switch\n              :active-value=\"1\"\n              :inactive-value=\"0\"\n              v-model=\"row.is_show\"\n              :value=\"row.is_show\"\n              @change=\"onchangeIsShow(row)\"\n              size=\"large\"\n            >\n            </el-switch>\n          </template>\n        </vxe-table-column>\n        <vxe-table-column field=\"mark\" title=\"备注\" min-width=\"120\"></vxe-table-column>\n        <vxe-table-column field=\"date\" title=\"操作\" width=\"230\" fixed=\"right\">\n          <template v-slot=\"{ row }\">\n            <span>\n              <a @click=\"addRoute(row)\" v-if=\"row.auth_type === 1 || row.auth_type === 3\">选择权限</a>\n              <el-divider direction=\"vertical\" v-if=\"row.auth_type === 1 || row.auth_type === 3\" />\n              <a @click=\"addE(row, '添加子菜单')\" v-if=\"row.auth_type === 1 || row.auth_type === 3\">添加下级</a>\n              <!-- <a @click=\"addE(row, '添加规则')\" v-else>添加规则</a> -->\n            </span>\n            <el-divider direction=\"vertical\" v-if=\"row.auth_type === 1 || row.auth_type === 3\"></el-divider>\n            <a @click=\"edit(row, '编辑')\">编辑</a>\n            <el-divider direction=\"vertical\"></el-divider>\n            <a @click=\"del(row, '删除规则')\">删除</a>\n          </template>\n        </vxe-table-column>\n      </vxe-table>\n    </el-card>\n    <menus-from\n      :formVal=\"formValidate\"\n      :titleFrom=\"titleFrom\"\n      @getList=\"getList\"\n      @changeMenu=\"getMenusUnique\"\n      ref=\"menusFrom\"\n      @clearFrom=\"clearFrom\"\n    ></menus-from>\n    <el-dialog :visible.sync=\"ruleModal\" width=\"1100px\" title=\"权限列表\" @closed=\"modalchange\">\n      <div class=\"search-rule\">\n        <el-alert>\n          <template slot=\"title\">\n            1.接口可多选，可重复添加；<br />2.添加路由按照路由规则进行添加，即可在开发工具->接口管理里面点击同步；<br />3.同步完成即可在此选择对应的接口；\n          </template>\n        </el-alert>\n        <el-input\n          class=\"mr10 mt10 form_content_width\"\n          v-model=\"searchRule\"\n          placeholder=\"输入关键词搜索\"\n          clearable\n          ref=\"search\"\n        />\n        <el-button class=\"mr10\" type=\"primary\" @click=\"searchRules\">搜索</el-button>\n        <el-button @click=\"init\">重置</el-button>\n      </div>\n      <div class=\"route-list\">\n        <div class=\"tree\">\n          <el-tree\n            ref=\"treeBox\"\n            :data=\"ruleCateList\"\n            :highlight-current=\"true\"\n            :props=\"defaultProps\"\n            node-key=\"id\"\n            :default-expanded-keys=\"expandedKeys\"\n            :current-node-key=\"nodeKey\"\n            @node-click=\"handleNodeClick\"\n          ></el-tree>\n        </div>\n        <div class=\"rule\">\n          <div\n            class=\"rule-list\"\n            v-show=\"!arrs.length || arrs.includes(item.id)\"\n            :class=\"{ 'select-rule': seletRouteIds.includes(item.id) }\"\n            v-for=\"(item, index) in children\"\n            :key=\"index\"\n            @click=\"selectRule(item)\"\n          >\n            <div>接口名称：{{ item.name }}</div>\n            <div>请求方式：{{ item.method }}</div>\n            <div>接口地址：{{ item.path }}</div>\n          </div>\n        </div>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"ruleModal = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addRouters\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport {\n  getTable,\n  menusDetailsApi,\n  isShowApi,\n  editMenus,\n  getRuleList,\n  menusBatch,\n  getMenusUnique,\n  menusRuleCate,\n} from '@/api/systemMenus';\nimport formCreate from '@form-create/element-ui';\nimport menusFrom from './components/menusFrom';\nimport { formatFlatteningRoutes, findFirstNonNullChildren, findFirstNonNullChildrenKeys } from '@/libs/system';\n\nexport default {\n  name: 'systemMenus',\n  data() {\n    return {\n      children: [],\n      expandedKeys: [],\n      tabconfig: { children: 'children', reserve: true, accordion: true },\n      spinShow: false,\n      ruleModal: false,\n      searchRule: '',\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      roleData: {\n        is_show: '',\n        keyword: '',\n      },\n      defaultProps: {\n        children: 'children',\n        label: 'name',\n      },\n      ruleCateList: [], //权限树\n      loading: false,\n      tableData: [],\n      FromData: null,\n      icons: '',\n      formValidate: {\n        auth_type: '',\n        menu_name: '',\n        path: '',\n        api_url: '',\n        menu_path: '',\n        methods: '',\n        unique_auth: '',\n        mark: '',\n        sort: '',\n        is_show: 0,\n      },\n      titleFrom: '',\n      modalTitleSs: '',\n      routeType: '0',\n      arrs: [],\n      foundationList: [], // 基础接口列表\n      openList: [], // 公开接口列表\n      seletRoute: [], // 选中路由\n      seletRouteIds: [], // 选中id\n      menusId: 0, // 选中分类id\n      nodeKey: 0, // 选中节点\n    };\n  },\n  components: { menusFrom, formCreate: formCreate.$form() },\n  computed: {\n    ...mapState('admin/layout', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : '80px';\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  mounted() {\n    this.getData();\n  },\n  methods: {\n    init() {\n      this.searchRule = '';\n      this.searchRules();\n    },\n    addRouters() {\n      let data = {\n        menus: this.seletRoute,\n      };\n      menusBatch(data)\n        .then((res) => {\n          this.getData();\n          this.ruleModal = false;\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    selectRule(data) {\n      if (this.seletRouteIds.includes(data.id)) {\n        let i = this.seletRouteIds.findIndex((e) => e == data.id);\n        this.seletRouteIds.splice(i, 1);\n        this.seletRoute.splice(i, 1);\n      } else {\n        this.seletRouteIds.push(data.id);\n        this.seletRoute.push({\n          menu_name: data.name,\n          unique_auth: '',\n          api_url: data.path,\n          path: this.menusId,\n          method: data.method,\n        });\n      }\n    },\n    changTab(name) {\n      this.routeType = name;\n      let index = parseInt(name);\n      this.children = this.foundationList[index] ? this.foundationList[index].children : [];\n      this.searchRules();\n    },\n    // 搜索规则\n    searchRules() {\n      if (this.searchRule.trim()) {\n        this.arrs = [];\n        let arr = this.foundationList;\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i].name.indexOf(this.searchRule) !== -1) {\n            this.arrs.push(arr[i].id);\n          }\n        }\n      } else {\n        this.arrs = [];\n      }\n    },\n    addRoute(row) {\n      this.menusId = row.id;\n      this.routeType = '0';\n      // this.getRuleList();\n      menusRuleCate().then((res) => {\n        this.ruleCateList = res.data;\n        this.ruleModal = true;\n        if (res.data.length) {\n          this.$nextTick((e) => {\n            this.expandedKeys = findFirstNonNullChildrenKeys(res.data[0], []);\n            this.nodeKey = findFirstNonNullChildren(res.data).id;\n            this.$refs.treeBox.setCurrentKey(this.nodeKey);\n            this.getRuleList(this.nodeKey);\n          });\n        }\n      });\n    },\n    handleNodeClick(data) {\n      this.getRuleList(data.id);\n    },\n    modalchange() {\n      this.seletRouteIds = [];\n      this.seletRoute = [];\n    },\n    // 获取权限列表\n    getRuleList(cate_id) {\n      getRuleList(cate_id).then((res) => {\n        this.foundationList = res.data;\n        this.children = res.data;\n        this.searchRules();\n\n        // this.openList = [];\n        // this.seletRouteIds = [];\n        // this.seletRoute = [];\n      });\n    },\n    // 修改规则状态\n    onchangeIsShow(row) {\n      let data = {\n        id: row.id,\n        is_show: row.is_show,\n      };\n      isShowApi(data)\n        .then(async (res) => {\n          this.$message.success(res.msg);\n          this.$store.dispatch('menus/getMenusNavList');\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 请求列表\n    getList() {\n      this.formValidate = Object.assign({}, this.$options.data().formValidate);\n      this.getData();\n    },\n\n    // 清除表单数据\n    clearFrom() {\n      this.formValidate = Object.assign({}, this.$options.data().formValidate);\n    },\n    // 添加子菜单\n    addE(row, title) {\n      this.formValidate = {\n        is_show: 0,\n      };\n      let pid = row.id.toString();\n      if (pid) {\n        menusDetailsApi(row.id)\n          .then(async (res) => {\n            this.formValidate.path = res.data.path;\n            this.formValidate.path.push(row.id);\n            this.formValidate.pid = pid;\n            this.$refs.menusFrom.valids = false;\n            this.titleFrom = title;\n            this.formValidate.auth_type = 1;\n            this.formValidate.is_show_path = 0;\n            this.$refs.menusFrom.getAddFrom();\n            this.$refs.menusFrom.modals = true;\n          })\n          .catch((res) => {\n            this.$message.error(res.msg);\n          });\n      } else {\n        this.formValidate.pid = pid;\n        this.$refs.menusFrom.modals = true;\n        this.$refs.menusFrom.valids = false;\n        this.titleFrom = title;\n        this.formValidate.auth_type = 1;\n        this.formValidate.is_show_path = 0;\n      }\n    },\n    // 删除\n    del(row, tit) {\n      let delfromData = {\n        title: tit,\n        url: `/setting/menus/${row.id}`,\n        method: 'DELETE',\n        ids: '',\n      };\n\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.getData();\n          this.getMenusUnique();\n          // this.$store.dispatch('menus/getMenusNavList');\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 规则详情\n    menusDetails(id) {\n      menusDetailsApi(id)\n        .then(async (res) => {\n          this.formValidate = res.data;\n          this.$refs.menusFrom.modals = true;\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 编辑\n    edit(row, title, index) {\n      this.formValidate = {};\n      this.menusDetails(row.id);\n      this.titleFrom = title;\n      this.$refs.menusFrom.valids = false;\n      this.$refs.menusFrom.getAddFrom(row.id);\n    },\n    // 添加\n    menusAdd(title) {\n      // this.formValidate = {};\n      this.$refs.menusFrom.modals = true;\n      this.$refs.menusFrom.valids = false;\n      this.$refs.menusFrom.getAddFrom();\n      // this.formValidate = Object.assign(this.$data, this.$options.formValidate());\n      this.titleFrom = title;\n      this.formValidate.auth_type = 1;\n      this.formValidate.is_show = 0;\n      this.formValidate.is_show_path = 0;\n    },\n    // 新增页面表单\n    // getAddFrom () {\n    //     this.spinShow = true;\n    //     addMenus(this.roleData).then(async res => {\n    //         this.FromData = res.data;\n    //         this.$refs.menusFrom.modals = true;\n    //         this.spinShow = false;\n    //     }).catch(res => {\n    //         this.spinShow = false;\n    //         this.$message.error(res.msg);\n    //     })\n    // },\n    // 列表\n    getData() {\n      this.loading = true;\n      this.roleData.is_show = this.roleData.is_show || '';\n      getTable(this.roleData)\n        .then(async (res) => {\n          this.tableData = res.data;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$message.error(res.msg);\n        });\n    },\n    getMenusUnique() {\n      getMenusUnique().then((res) => {\n        let data = res.data;\n        this.$store.commit('userInfo/uniqueAuth', data.uniqueAuth);\n        this.$store.commit('menus/getmenusNav', data.menus);\n        this.$store.dispatch('routesList/setRoutesList', data.menus);\n        let arr = formatFlatteningRoutes(this.$router.options.routes);\n        this.formatTwoStageRoutes(arr);\n        let routes = formatFlatteningRoutes(data.menus);\n        this.$store.commit('menus/setOneLvRoute', routes);\n        this.bus.$emit('routesListChange');\n      });\n    },\n    formatTwoStageRoutes(arr) {\n      if (arr.length <= 0) return false;\n      const newArr = [];\n      const cacheList = [];\n      arr.forEach((v) => {\n        if (v && v.meta && v.meta.keepAlive) {\n          newArr.push({ ...v });\n          cacheList.push(v.name);\n          this.$store.dispatch('keepAliveNames/setCacheKeepAlive', cacheList);\n        }\n      });\n      return newArr;\n    },\n    // 关闭按钮\n    cancel() {\n      this.$emit('onCancel');\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.vxeTable {\n  > .vxe-table--header-wrapper {\n    background: #fff !important;\n  }\n  .icon {\n    font-size: 20px;\n  }\n}\n\n.rule {\n  display: flex;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n  height: max-content;\n  max-height: 600px;\n  flex: 1;\n}\n.tree::-webkit-scrollbar {\n  width: 2px;\n  background-color: #f5f5f5;\n}\n/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/\n.rule::-webkit-scrollbar {\n  width: 10px;\n  height: 10px;\n  background-color: #f5f5f5;\n}\n\n/*定义滚动条轨道 内阴影+圆角*/\n.rule::-webkit-scrollbar-track {\n  border-radius: 4px;\n  background-color: #f5f5f5;\n}\n\n/*定义滑块 内阴影+圆角*/\n.rule::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: #ccc;\n}\n\n.rule-list {\n  background-color: #f2f2f2;\n  width: 48.5%;\n  height: max-content;\n  margin: 5px;\n  border-radius: 3px;\n  padding: 10px;\n  color: #333;\n  cursor: pointer;\n  transition: all 0.1s;\n}\n\n.rule-list:hover {\n  background-color: var(--prev-bg-menu-hover-ba-color);\n}\n\n.rule-list div {\n  white-space: nowrap;\n}\n\n.select-rule {\n  background-color: var(--prev-bg-menu-hover-ba-color);\n}\n.route-list {\n  display: flex;\n  margin-top: 10px;\n\n  .tree {\n    width: 200px;\n    overflow-y: scroll;\n    max-height: 600px;\n    ::v-deep .el-tree-node__children .el-tree-node .el-tree-node__content {\n      padding-left: 14px !important;\n    }\n  }\n}\n.el-dropdown-link {\n  cursor: pointer;\n  color: var(--prev-color-primary);\n  font-size: 12px;\n  margin-left: 6px;\n}\n.el-icon-arrow-down {\n  font-size: 12px;\n}\n</style>\n"]}]}