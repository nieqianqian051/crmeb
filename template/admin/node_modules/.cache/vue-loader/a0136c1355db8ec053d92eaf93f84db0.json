{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/layout/navBars/breadcrumb/breadcrumb.vue?vue&type=style&index=0&id=a68ffd92&scoped=true&lang=scss","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/layout/navBars/breadcrumb/breadcrumb.vue","mtime":1720247281000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/sass-loader/dist/cjs.js","mtime":1746465018452},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5sYXlvdXQtbmF2YmFycy1icmVhZGNydW1iIHsKICAvLyBmbGV4OiAxOwogIGhlaWdodDogaW5oZXJpdDsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgcGFkZGluZy1sZWZ0OiAxNXB4OwogIC5sYXlvdXQtbmF2YmFycy1icmVhZGNydW1iLWljb24gewogICAgY3Vyc29yOiBwb2ludGVyOwogICAgZm9udC1zaXplOiAxOHB4OwogICAgbWFyZ2luLXJpZ2h0OiAxNXB4OwogICAgY29sb3I6IHZhcigtLXByZXYtYmctdG9wQmFyQ29sb3IpOwogICAgb3BhY2l0eTogMC44OwogICAgJjpob3ZlciB7CiAgICAgIG9wYWNpdHk6IDE7CiAgICB9CiAgfQogIC5sYXlvdXQtbmF2YmFycy1icmVhZGNydW1iLXNwYW4gewogICAgb3BhY2l0eTogMC43OwogICAgY29sb3I6IHZhcigtLXByZXYtYmctdG9wQmFyQ29sb3IpOwogIH0KICAubGF5b3V0LW5hdmJhcnMtYnJlYWRjcnVtYi1pY29uZm9udCB7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBtYXJnaW4tcmlnaHQ6IDVweDsKICB9Cn0K"},{"version":3,"sources":["breadcrumb.vue"],"names":[],"mappings":";AA2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"breadcrumb.vue","sourceRoot":"src/layout/navBars/breadcrumb","sourcesContent":["<template>\n  <div class=\"layout-navbars-breadcrumb\">\n    <!-- {{[...breadCrumbList,...crumbPast]}} -->\n    <i\n      v-if=\"collapseShow\"\n      class=\"layout-navbars-breadcrumb-icon\"\n      :class=\"getThemeConfig.isCollapse ? 'el-icon-s-unfold' : 'el-icon-s-fold'\"\n      @click=\"onThemeConfigChange\"\n    ></i>\n    <el-breadcrumb class=\"layout-navbars-breadcrumb-hide\" v-if=\"isShowcrumb\" :style=\"{ display: isShowBreadcrumb }\">\n      <transition-group name=\"breadcrumb\" mode=\"out-in\">\n        <el-breadcrumb-item v-for=\"(v, k) in [...breadCrumbList, ...crumbPast]\" :key=\"v.path\">\n          <span v-if=\"k == 1\" class=\"layout-navbars-breadcrumb-span\">\n            <Icon\n              :type=\"v.icon\"\n              class=\"ivu-icon layout-navbars-breadcrumb-iconfont\"\n              v-if=\"getThemeConfig.isBreadcrumbIcon\"\n            />{{ $t(v.title) }}\n          </span>\n          <a v-else @click.prevent=\"onBreadcrumbClick(v)\">\n            <Icon\n              :type=\"v.icon\"\n              class=\"ivu-icon layout-navbars-breadcrumb-iconfont\"\n              v-if=\"getThemeConfig.isBreadcrumbIcon\"\n            />{{ $t(v.title) }}\n          </a>\n        </el-breadcrumb-item>\n      </transition-group>\n    </el-breadcrumb>\n  </div>\n</template>\n\n<script>\nimport { Local } from '@/utils/storage.js';\nimport { R } from '@/libs/util';\nimport { getMenuopen } from '@/libs/util';\n\nexport default {\n  name: 'layoutBreadcrumb',\n  data() {\n    return {\n      breadcrumbList: [],\n      routeSplit: [],\n      routeSplitFirst: '',\n      routeSplitIndex: 1,\n    };\n  },\n  computed: {\n    breadCrumbList() {\n      let menuList = this.$store.state.menus.menusName;\n      let openMenus = getMenuopen(this.$route, menuList);\n      let allMenuList = R(menuList, []);\n      let selectMenu = [];\n      if (allMenuList.length > 0) {\n        openMenus.forEach((i) => {\n          allMenuList.forEach((a) => {\n            if (i === a.path) {\n              selectMenu.push(a);\n            }\n          });\n        });\n      }\n      return selectMenu;\n    },\n    crumbPast() {\n      let that = this;\n      let menuList = that.$store.state.menus.menusName;\n      let allMenuList = R(menuList, []);\n      let selectMenu = [];\n      if (allMenuList.length > 0) {\n        allMenuList.forEach((a) => {\n          if (that.$route.path === a.path) {\n            selectMenu.push(a);\n          }\n        });\n      }\n      return selectMenu;\n    },\n    // 获取布局配置信息\n    getThemeConfig() {\n      return this.$store.state.themeConfig.themeConfig;\n    },\n    // 动态设置经典、横向布局不显示\n    isShowBreadcrumb() {\n      const { layout, isBreadcrumb } = this.$store.state.themeConfig.themeConfig;\n      if (layout === 'transverse' || layout === 'classic') {\n        return 'none';\n      } else {\n        return isBreadcrumb ? '' : 'none';\n      }\n    },\n    isShowcrumb() {\n      const { layout } = this.$store.state.themeConfig.themeConfig;\n      if (layout === 'transverse' || layout === 'classic') {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    collapseShow() {\n      return  ['defaults','columns'].includes(this.$store.state.themeConfig.themeConfig.layout);\n    },\n  },\n  mounted() {\n    this.initRouteSplit(this.$route.path);\n  },\n  methods: {\n    // breadcrumb 当前项点击时\n    onBreadcrumbClick(v) {\n      const { redirect, path } = v;\n      if (redirect) this.$router.push(redirect);\n      else this.$router.push(path);\n    },\n    // breadcrumb icon 点击菜单展开与收起\n    onThemeConfigChange() {\n      if (\n        this.$store.state.themeConfig.themeConfig.layout == 'columns' &&\n        !this.$store.state.menus.childMenuList.length &&\n        this.$store.state.themeConfig.themeConfig.isCollapse\n      ) {\n        return;\n      }\n      this.$store.state.themeConfig.themeConfig.isCollapse = !this.$store.state.themeConfig.themeConfig.isCollapse;\n      this.setLocalThemeConfig();\n    },\n    // 存储布局配置\n    setLocalThemeConfig() {\n      Local.remove('themeConfigPrev');\n      Local.set('themeConfigPrev', this.$store.state.themeConfig.themeConfig);\n    },\n    // 递归设置 breadcrumb\n    getBreadcrumbList(arr) {\n      arr.map((item) => {\n        this.routeSplit.map((v, k, arrs) => {\n          if (this.routeSplitFirst === item.path) {\n            this.routeSplitFirst += `/${arrs[this.routeSplitIndex]}`;\n            this.breadcrumbList.push(item);\n            this.routeSplitIndex++;\n            if (item.children) this.getBreadcrumbList(item.children);\n          }\n        });\n      });\n    },\n    // 当前路由分割处理\n    initRouteSplit(path) {\n      this.breadcrumbList = [\n        {\n          path: '/',\n          meta: {\n            title: this.$store.state.routesList.routesList[0].title,\n            icon: this.$store.state.routesList.routesList[0].icon,\n          },\n        },\n      ];\n      //   this.routeSplit = path.split('/');\n      //   this.routeSplit.shift();\n      this.routeSplitFirst = path;\n      this.routeSplitIndex = 1;\n      this.getBreadcrumbList(this.$store.state.routesList.routesList);\n    },\n  },\n  // 监听路由的变化\n  watch: {\n    $route: {\n      handler(newVal) {\n        // this.initRouteSplit(newVal.path);\n        let menuList = this.$store.state.menus.menusName;\n        let openMenus = getMenuopen(newVal, menuList);\n        let allMenuList = R(menuList, []);\n        let selectMenu = [];\n        if (allMenuList.length > 0) {\n          openMenus.forEach((i) => {\n            allMenuList.forEach((a) => {\n              if (i === a.path) {\n                selectMenu.push(a);\n              }\n            });\n          });\n        }\n      },\n      deep: true,\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.layout-navbars-breadcrumb {\n  // flex: 1;\n  height: inherit;\n  display: flex;\n  align-items: center;\n  padding-left: 15px;\n  .layout-navbars-breadcrumb-icon {\n    cursor: pointer;\n    font-size: 18px;\n    margin-right: 15px;\n    color: var(--prev-bg-topBarColor);\n    opacity: 0.8;\n    &:hover {\n      opacity: 1;\n    }\n  }\n  .layout-navbars-breadcrumb-span {\n    opacity: 0.7;\n    color: var(--prev-bg-topBarColor);\n  }\n  .layout-navbars-breadcrumb-iconfont {\n    font-size: 14px;\n    margin-right: 5px;\n  }\n}\n</style>\n"]}]}