{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/kefu/pc/components/msgWindow.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/kefu/pc/components/msgWindow.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/thread-loader/dist/cjs.js","mtime":1746465018446},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7CiAgc3BlZUNoY3JhZnQsCiAgc2VydmljZUNhdGUsCiAgc2VydmljZUNhdGVVcGRhdGUsCiAgYWRkU3BlZUNoY3JhZnQsCiAgYWRkU2VydmljZUNhdGUsCiAgZWRpdFNlcnZpY2VDYXRlLAp9IGZyb20gJ0AvYXBpL2tlZnUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ21zZ1dpbmRvdycsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG9wczogewogICAgICAgIHZ1ZXNjcm9sbDogewogICAgICAgICAgbW9kZTogJ25hdGl2ZScsCiAgICAgICAgICBlbmFibGU6IGZhbHNlLAogICAgICAgICAgdGlwczogewogICAgICAgICAgICBkZWFjdGl2ZTogJ1B1c2ggdG8gTG9hZCcsCiAgICAgICAgICAgIGFjdGl2ZTogJ1JlbGVhc2UgdG8gTG9hZCcsCiAgICAgICAgICAgIHN0YXJ0OiAnTG9hZGluZy4uLicsCiAgICAgICAgICAgIGJlZm9yZURlYWN0aXZlOiAnTG9hZCBTdWNjZXNzZnVsbHkhJywKICAgICAgICAgIH0sCiAgICAgICAgICBhdXRvOiBmYWxzZSwKICAgICAgICAgIGF1dG9Mb2FkRGlzdGFuY2U6IDAsCiAgICAgICAgICBwdWxsUmVmcmVzaDogewogICAgICAgICAgICBlbmFibGU6IGZhbHNlLAogICAgICAgICAgfSwKICAgICAgICAgIHB1c2hMb2FkOiB7CiAgICAgICAgICAgIGVuYWJsZTogZmFsc2UsCiAgICAgICAgICAgIGF1dG86IHRydWUsCiAgICAgICAgICAgIGF1dG9Mb2FkRGlzdGFuY2U6IDEwLAogICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgIGJhcjogewogICAgICAgICAgYmFja2dyb3VuZDogJyMzOTMyMzInLAogICAgICAgICAgb3BhY2l0eTogJy41JywKICAgICAgICAgIHNpemU6ICcycHgnLAogICAgICAgIH0sCiAgICAgIH0sCiAgICAgIGlzU2Nyb2xsOiB0cnVlLAogICAgICBwYWdlOiAxLAogICAgICBsaW1pdDogMTUsCiAgICAgIHRhYkN1cjogMSwKICAgICAgdGFiTGlzdDogWwogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn5Liq5Lq65bqTJywKICAgICAgICAgIGtleTogMSwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn5YWs5YWx5bqTJywKICAgICAgICAgIGtleTogMCwKICAgICAgICB9LAogICAgICBdLAogICAgICBzZWFyY2hUeHQ6ICcnLCAvLyDmkJzntKIKICAgICAgbGlzdDogWwogICAgICAgIHsKICAgICAgICAgIGlzRWRpdDogZmFsc2UsCiAgICAgICAgfSwKICAgICAgXSwgLy8g5YiX6KGoCiAgICAgIG1vZGVsMTogJycsCiAgICAgIG1zZ1RpdGxlOiAnJywgLy8g5aGr5YaZ55qE5qCH6aKYCiAgICAgIHNvcnRMaXN0OiBbXSwgLy8g5YiG57G7CiAgICAgIGNhdGVJZDogJycsIC8vIOmAieS4reeahGlkCiAgICAgIGFkZE1zZzogewogICAgICAgIHRpdGxlOiAnJywKICAgICAgICBtZXNzYWdlOiAnJywKICAgICAgICBjYXRlSWQ6ICcnLAogICAgICAgIGlzRWRpdDogZmFsc2UsCiAgICAgIH0sCiAgICAgIGlzQWRkU29ydDogZmFsc2UsIC8vIOa3u+WKoOWIhuexuwogICAgICBjbGFzc1RpdGxlOiAnJywgLy8g5YiG57G75ZCN56ewCiAgICAgIGNsYXNzU29ydDogJycsIC8vIOWIhuexu+aOkuW6jwogICAgICBtYXNrVGl0bGU6ICcnLCAvLyDlvLnnqpfmoIfpopgKICAgICAgZWRpdE9iajoge30sIC8vIOe8lui+keWIhuexu+WvueixoQogICAgfTsKICB9LAogIGZpbHRlcnM6IHsKICAgIGZpbHRlcnNUaXRsZSh2YWwpIHsKICAgICAgbGV0IGxlbiA9IDM3OwogICAgICBpZiAodmFsLmxlbmd0aCA+IGxlbikgewogICAgICAgIGxldCBkYXRhID0gdmFsLnN1YnN0cmluZygwLCBsZW4pOwogICAgICAgIHJldHVybiBgJHtkYXRhfS4uLmA7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHZhbDsKICAgICAgfQogICAgfSwKICAgIGZpbHRlcnNDb24odmFsKSB7CiAgICAgIGxldCBsZW4gPSAxMTM7CiAgICAgIGlmICh2YWwubGVuZ3RoID4gbGVuKSB7CiAgICAgICAgbGV0IGRhdGEgPSB2YWwuc3Vic3RyaW5nKDAsIGxlbik7CiAgICAgICAgcmV0dXJuIGAke2RhdGF9Li4uYDsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdmFsOwogICAgICB9CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIGxldCBzZWxmID0gdGhpczsKICAgIHRoaXMuc2VydmljZUNhdGUoKTsKICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgdGhpcy5zY3JvbGwgPSBuZXcgQlNjcm9sbCh0aGlzLiRyZWZzLndyYXBwZXIsIHsKICAgICAgICBtb3VzZVdoZWVsOiB7CiAgICAgICAgICBzcGVlZDogMjAsCiAgICAgICAgICBpbnZlcnQ6IGZhbHNlLAogICAgICAgICAgZWFzZVRpbWU6IDMwMCwKICAgICAgICB9LAogICAgICAgIHNjcm9sbGJhcjogdHJ1ZSwKICAgICAgICBkaXNhYmxlTW91c2U6IHRydWUsCiAgICAgICAgLy8gYW5kIHNvIG9uCiAgICAgIH0pOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDmiZPlvIDnvJbovpEKICAgIGVkaXRNc2coaXRlbSkgewogICAgICBpdGVtLmlzRWRpdCA9IHRydWU7CiAgICAgIHRoaXMuY2F0ZUlkID0gaXRlbS5jYXRlX2lkOwogICAgfSwKICAgIC8vIOe8lui+keahhgogICAgYmluZEVkaXQoaXRlbSwgaW5kZXgpIHsKICAgICAgLy8gICBpZiAoaW5kZXggPT0gMCkgewogICAgICAvLyAgICAgcmV0dXJuOwogICAgICAvLyAgIH0gZWxzZSB7CiAgICAgIGl0ZW0uaXNFZGl0ID0gIWl0ZW0uaXNFZGl0OwogICAgICAvLyAgIH0KICAgIH0sCiAgICAvLyDlpLTpg6jpgInmi6kKICAgIGJpbmRUYWIoaXRlbSkgewogICAgICB0aGlzLnRhYkN1ciA9IGl0ZW0ua2V5OwogICAgICB0aGlzLmNhdGVJZCA9ICcnOwogICAgICB0aGlzLnNvcnRMaXN0ID0gW107CiAgICAgIHRoaXMuaXNTY3JvbGwgPSB0cnVlOwogICAgICB0aGlzLnBhZ2UgPSAxOwogICAgICB0aGlzLmxpc3QgPSBbXTsKICAgICAgdGhpcy5zZXJ2aWNlQ2F0ZSgpOwogICAgfSwKICAgIC8vIOaQnOe0ogogICAgYmluZFNlYXJjaCgpIHsKICAgICAgdGhpcy5pc1Njcm9sbCA9IHRydWU7CiAgICAgIHRoaXMucGFnZSA9IDE7CiAgICAgIHRoaXMubGlzdCA9IFtdOwogICAgICB0aGlzLmdldExpc3QoKTsKICAgIH0sCiAgICAvLyDpgInmi6nliIbnsbsKICAgIHNlbGVjdFNvcnQoaXRlbSkgewogICAgICBpZiAodGhpcy5jYXRlSWQgPT0gaXRlbS5pZCkgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB0aGlzLnNvcnRMaXN0LmZvckVhY2goKGVsLCBpbmRleCkgPT4gewogICAgICAgIGlmIChlbC5pZCAhPSBpdGVtLmlkKSB7CiAgICAgICAgICBlbC5pc0VkaXQgPSBmYWxzZTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLmNhdGVJZCA9IGl0ZW0uaWQ7CiAgICAgIHRoaXMuaXNTY3JvbGwgPSB0cnVlOwogICAgICB0aGlzLnBhZ2UgPSAxOwogICAgICB0aGlzLmxpc3QgPSBbXTsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgLy8g5Yig6Zmk5YiG57G7CiAgICBkZWxTb3J0KHJvdywgdGl0LCBudW0pIHsKICAgICAgbGV0IGRlbGZyb21EYXRhID0gewogICAgICAgIHRpdGxlOiB0aXQsCiAgICAgICAgbnVtOiBudW0sCiAgICAgICAgdXJsOiBgL3NlcnZpY2UvY2F0ZS8ke3Jvdy5pZH1gLAogICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgaWRzOiAnJywKICAgICAgICBrZWZ1OiB0cnVlLAogICAgICB9OwogICAgICB0aGlzLiRtb2RhbFN1cmUoZGVsZnJvbURhdGEpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgdGhpcy5pc1Njcm9sbCA9IHRydWU7CiAgICAgICAgICB0aGlzLnBhZ2UgPSAxOwogICAgICAgICAgdGhpcy5saXN0ID0gW107CiAgICAgICAgICB0aGlzLmNhdGVJZCA9ICcnOwogICAgICAgICAgdGhpcy5zZXJ2aWNlQ2F0ZSgpOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChyZXMpID0+IHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgfSk7CiAgICB9LAogICAgLy8g6I635Y+W5YiG57G7CiAgICBzZXJ2aWNlQ2F0ZSgpIHsKICAgICAgc2VydmljZUNhdGUoewogICAgICAgIHR5cGU6IHRoaXMudGFiQ3VyLAogICAgICB9KS50aGVuKChyZXMpID0+IHsKICAgICAgICBsZXQgb2JqID0gewogICAgICAgICAgaWQ6ICcnLAogICAgICAgICAgbmFtZTogJ+WFqOmDqCcsCiAgICAgICAgfTsKICAgICAgICByZXMuZGF0YS5kYXRhLmZvckVhY2goKGVsLCBpbmRleCkgPT4gewogICAgICAgICAgZWwuaXNFZGl0ID0gZmFsc2U7CiAgICAgICAgfSk7CiAgICAgICAgLy8gcmVzLmRhdGEuZGF0YS51bnNoaWZ0KG9iaikKICAgICAgICB0aGlzLnNvcnRMaXN0ID0gcmVzLmRhdGEuZGF0YTsKICAgICAgICBpZiAodGhpcy5jYXRlSWQgPT09ICcnKSB7CiAgICAgICAgICB0aGlzLmNhdGVJZCA9IHJlcy5kYXRhLmRhdGFbMF0uaWQ7CiAgICAgICAgfQogICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDojrflj5bliJfooagKICAgIGdldExpc3QoKSB7CiAgICAgIGlmICghdGhpcy5pc1Njcm9sbCkgcmV0dXJuOwogICAgICBzcGVlQ2hjcmFmdCh7CiAgICAgICAgcGFnZTogdGhpcy5wYWdlLAogICAgICAgIGxpbWl0OiB0aGlzLmxpbWl0LAogICAgICAgIHRpdGxlOiB0aGlzLnNlYXJjaFR4dCwKICAgICAgICBjYXRlX2lkOiB0aGlzLmNhdGVJZCwKICAgICAgICB0eXBlOiB0aGlzLnRhYkN1ciwKICAgICAgfSkudGhlbigocmVzKSA9PiB7CiAgICAgICAgdGhpcy5pc1Njcm9sbCA9IHJlcy5kYXRhLmxlbmd0aCA+PSB0aGlzLmxpbWl0OwogICAgICAgIHJlcy5kYXRhLmZvckVhY2goKGVsLCBpbmRleCkgPT4gewogICAgICAgICAgZWwuaXNFZGl0ID0gZmFsc2U7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5wYWdlKys7CiAgICAgICAgdGhpcy5saXN0ID0gdGhpcy5saXN0LmNvbmNhdChyZXMuZGF0YSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOS/ruaUueivneacrwogICAgdXBkYXRhTXNnKGl0ZW0pIHsKICAgICAgc2VydmljZUNhdGVVcGRhdGUoaXRlbS5pZCwgewogICAgICAgIHRpdGxlOiBpdGVtLnRpdGxlLAogICAgICAgIGNhdGVfaWQ6IHRoaXMuY2F0ZUlkLAogICAgICAgIG1lc3NhZ2U6IGl0ZW0ubWVzc2FnZSwKICAgICAgfSkKICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+S/ruaUueaIkOWKnycpOwogICAgICAgICAgaXRlbS5pc0VkaXQgPSBmYWxzZTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyb3IubXNnKTsKICAgICAgICAgIGl0ZW0uaXNFZGl0ID0gdHJ1ZTsKICAgICAgICB9KTsKICAgIH0sCiAgICAvLyDmt7vliqDmoYbmmL7npLoKICAgIGJpbmRGb2N1cygpIHsKICAgICAgdGhpcy5saXN0LmZvckVhY2goKGVsLCBpdGVtKSA9PiB7CiAgICAgICAgZWwuaXNFZGl0ID0gZmFsc2U7CiAgICAgIH0pOwogICAgICB0aGlzLmFkZE1zZy5pc0VkaXQgPSB0cnVlOwogICAgfSwKICAgIC8vIOaJk+W8gOa3u+WKoOeql+WPowogICAgb3BlbkFkZFNvcnQoKSB7CiAgICAgIHRoaXMuaXNBZGRTb3J0ID0gdHJ1ZTsKICAgICAgdGhpcy5tYXNrVGl0bGUgPSAn5re75Yqg5YiG57uEJzsKICAgICAgdGhpcy5lZGl0T2JqLmlkID0gMDsKICAgIH0sCiAgICAvLyDmt7vliqDor53mnK8KICAgIGJpbmRBZGQoKSB7CiAgICAgIGFkZFNwZWVDaGNyYWZ0KHsKICAgICAgICB0aXRsZTogdGhpcy5hZGRNc2cudGl0bGUsCiAgICAgICAgY2F0ZV9pZDogdGhpcy5hZGRNc2cuY2F0ZUlkLAogICAgICAgIG1lc3NhZ2U6IHRoaXMuYWRkTXNnLm1lc3NhZ2UsCiAgICAgIH0pCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhpcy5hZGRNc2cudGl0bGUgPSAnJzsKICAgICAgICAgIHRoaXMuYWRkTXNnLm1lc3NhZ2UgPSAnJzsKICAgICAgICAgIHRoaXMuYWRkTXNnLmNhdGVJZCA9ICcnOwogICAgICAgICAgdGhpcy5hZGRNc2cuaXNFZGl0ID0gZmFsc2U7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICByZXMuZGF0YS5pc0VkaXQgPSBmYWxzZTsKICAgICAgICAgIHRoaXMucGFnZSA9IDE7CiAgICAgICAgICB0aGlzLmxpc3QgPSBbXTsKICAgICAgICAgIHRoaXMuaXNTY3JvbGwgPSB0cnVlOwogICAgICAgICAgdGhpcy5zZXJ2aWNlQ2F0ZSgpOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihlcnJvci5tc2cpOwogICAgICAgIH0pOwogICAgfSwKICAgIC8vIOWIoOmZpAogICAgZGVsTXNnKHJvdywgdGl0LCBudW0sIHR5cGUpIHsKICAgICAgbGV0IGRlbGZyb21EYXRhID0gewogICAgICAgIHRpdGxlOiB0aXQsCiAgICAgICAgbnVtOiBudW0sCiAgICAgICAgdXJsOiBgc2VydmljZS9zcGVlY2hjcmFmdC8ke3Jvdy5pZH1gLAogICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgaWRzOiAnJywKICAgICAgICBrZWZ1OiB0cnVlLAogICAgICB9OwogICAgICB0aGlzLiRtb2RhbFN1cmUoZGVsZnJvbURhdGEpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgdGhpcy5saXN0LnNwbGljZShudW0sIDEpOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChyZXMpID0+IHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgfSk7CiAgICB9LAogICAgLy8g5re75Yqg5YiG57G7CiAgICBhZGRTZXJ2aWNlQ2F0ZSgpIHsKICAgICAgaWYgKHRoaXMuZWRpdE9iai5pZCkgewogICAgICAgIGVkaXRTZXJ2aWNlQ2F0ZSh0aGlzLmVkaXRPYmouaWQsIHsKICAgICAgICAgIG5hbWU6IHRoaXMuY2xhc3NUaXRsZSwKICAgICAgICAgIHNvcnQ6IHRoaXMuY2xhc3NTb3J0LAogICAgICAgIH0pCiAgICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgIHRoaXMuY2xhc3NUaXRsZSA9ICcnOwogICAgICAgICAgICB0aGlzLmNsYXNzU29ydCA9ICcnOwogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgIHRoaXMuaXNBZGRTb3J0ID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMucGFnZSA9IDE7CiAgICAgICAgICAgIHRoaXMubGlzdCA9IFtdOwogICAgICAgICAgICB0aGlzLmlzU2Nyb2xsID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy5zZXJ2aWNlQ2F0ZSgpOwogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgICAgdGhpcy5jbGFzc1RpdGxlID0gJyc7CiAgICAgICAgICAgIHRoaXMuY2xhc3NTb3J0ID0gJyc7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyb3IubXNnKTsKICAgICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGFkZFNlcnZpY2VDYXRlKHsKICAgICAgICAgIG5hbWU6IHRoaXMuY2xhc3NUaXRsZSwKICAgICAgICAgIHNvcnQ6IHRoaXMuY2xhc3NTb3J0LAogICAgICAgIH0pCiAgICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgIHRoaXMuY2xhc3NUaXRsZSA9ICcnOwogICAgICAgICAgICB0aGlzLmNsYXNzU29ydCA9ICcnOwogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgIHRoaXMuaXNBZGRTb3J0ID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMucGFnZSA9IDE7CiAgICAgICAgICAgIHRoaXMubGlzdCA9IFtdOwogICAgICAgICAgICB0aGlzLmlzU2Nyb2xsID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy5zZXJ2aWNlQ2F0ZSgpOwogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgICAgdGhpcy5jbGFzc1RpdGxlID0gJyc7CiAgICAgICAgICAgIHRoaXMuY2xhc3NTb3J0ID0gJyc7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyb3IubXNnKTsKICAgICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgLy8g57yW6L6R5YiG57G7CiAgICBlZGl0U29ydChpdGVtKSB7CiAgICAgIHRoaXMuY2xhc3NTb3J0ID0gaXRlbS5zb3J0OwogICAgICB0aGlzLmNsYXNzVGl0bGUgPSBpdGVtLm5hbWU7CiAgICAgIHRoaXMuaXNBZGRTb3J0ID0gdHJ1ZTsKICAgICAgdGhpcy5tYXNrVGl0bGUgPSAn57yW6L6R5YiG57uEJzsKICAgICAgdGhpcy5lZGl0T2JqID0gaXRlbTsKICAgIH0sCiAgICBoYW5kbGVSZWFjaEJvdHRvbSgpIHsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgYmluZFJhZGlvKGRhdGEpIHsKICAgICAgdGhpcy4kZW1pdCgnYWN0aXZlVHh0JywgZGF0YS5tZXNzYWdlKTsKICAgIH0sCiAgfSwKfTsK"},null]}