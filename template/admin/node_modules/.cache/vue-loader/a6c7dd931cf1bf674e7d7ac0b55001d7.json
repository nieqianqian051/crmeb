{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/layout/navBars/breadcrumb/search.vue?vue&type=style&index=0&id=63364a5c&scoped=true&lang=scss","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/layout/navBars/breadcrumb/search.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/sass-loader/dist/cjs.js","mtime":1746465018452},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5sYXlvdXQtc2VhcmNoLWRpYWxvZyB7CiAgOjp2LWRlZXAgLmVsLWRpYWxvZyB7CiAgICBib3gtc2hhZG93OiB1bnNldCAhaW1wb3J0YW50OwogICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50OwogICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpOwogIH0KICA6OnYtZGVlcCAuZWwtYXV0b2NvbXBsZXRlIHsKICAgIHdpZHRoOiA1NjBweDsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHRvcDogMTAwcHg7CiAgICBsZWZ0OiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7CiAgfQp9Cjo6di1kZWVwIC5lbC1kaWFsb2dfX2hlYWRlciB7CiAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7Cn0KOjp2LWRlZXAgLmVsLWlucHV0LS1zbWFsbCAuZWwtaW5wdXRfX2lubmVyIHsKICBoZWlnaHQ6IDM2cHg7CiAgbGluZS1oZWlnaHQ6IDM2cHg7Cn0K"},{"version":3,"sources":["search.vue"],"names":[],"mappings":";AAkGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"search.vue","sourceRoot":"src/layout/navBars/breadcrumb","sourcesContent":["<template>\n  <div class=\"layout-search-dialog\">\n    <el-dialog :visible.sync=\"isShowSearch\" width=\"540px\" destroy-on-close :modal=\"false\" fullscreen :show-close=\"true\">\n      <el-autocomplete\n        v-model=\"menuQuery\"\n        :fetch-suggestions=\"menuSearch\"\n        :placeholder=\"$t('message.user.searchPlaceholder')\"\n        prefix-icon=\"el-icon-search\"\n        ref=\"layoutMenuAutocompleteRef\"\n        @select=\"onHandleSelect\"\n        @blur=\"onSearchBlur\"\n      >\n        <template slot-scope=\"{ item }\">\n          <div><i :class=\"item.icon\" class=\"mr10\"></i>{{ $t(item.title) }}</div>\n        </template>\n      </el-autocomplete>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { menusSearch } from '@/api/setting';\nimport { getAllSiderMenu } from '@/libs/system';\n\nexport default {\n  name: 'layoutBreadcrumbSearch',\n  data() {\n    return {\n      isShowSearch: false,\n      menuQuery: '',\n      tagsViewList: [],\n    };\n  },\n  methods: {\n    // 搜索弹窗打开\n    openSearch() {\n      this.menuQuery = '';\n      this.isShowSearch = true;\n      this.initTageView();\n      this.$nextTick(() => {\n        this.$refs.layoutMenuAutocompleteRef.focus();\n      });\n    },\n    // 搜索弹窗关闭\n    closeSearch() {\n      setTimeout(() => {\n        this.isShowSearch = false;\n      }, 150);\n    },\n    // 菜单搜索数据过滤\n    menuSearch(queryString, cb) {\n      if (!queryString) {\n        let results = queryString ? this.tagsViewList.filter(this.createFilter(queryString)) : this.tagsViewList;\n        cb(results);\n      } else {\n        let queryData = {\n          keyword: queryString,\n        };\n        menusSearch(queryData).then((res) => {\n          cb(res.data);\n        });\n      }\n    },\n    // 菜单搜索过滤\n    createFilter(queryString) {\n      return (restaurant) => {\n        return (\n          restaurant.path.toLowerCase().indexOf(queryString.toLowerCase()) > -1 ||\n          restaurant.title.toLowerCase().indexOf(queryString.toLowerCase()) > -1 ||\n          this.$t(restaurant.title).toLowerCase().indexOf(queryString.toLowerCase()) > -1\n        );\n      };\n    },\n    // 初始化菜单数据\n    initTageView() {\n      if (this.tagsViewList.length > 0) return false;\n      this.tagsViewList = getAllSiderMenu(this.$store.state.routesList.routesList);\n      // this.$store.state.tagsViewRoutes.tagsViewRoutes.map((v) => {\n      // \tif (!v.isHide) this.tagsViewList.push({ ...v });\n      // });\n    },\n    // 当前菜单选中时\n    onHandleSelect(item) {\n      let { path, redirect } = item;\n      if (item.isLink && !item.isIframe) window.open(item.isLink);\n      else if (redirect) this.$router.push(redirect);\n      else this.$router.push(path);\n      this.closeSearch();\n    },\n    // input 失去焦点时\n    onSearchBlur() {\n      this.closeSearch();\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.layout-search-dialog {\n  ::v-deep .el-dialog {\n    box-shadow: unset !important;\n    border-radius: 0 !important;\n    background: rgba(0, 0, 0, 0.5);\n  }\n  ::v-deep .el-autocomplete {\n    width: 560px;\n    position: absolute;\n    top: 100px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n}\n::v-deep .el-dialog__header {\n  border: none !important;\n}\n::v-deep .el-input--small .el-input__inner {\n  height: 36px;\n  line-height: 36px;\n}\n</style>\n"]}]}