{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/food/list/handle/foodDetails.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/food/list/handle/foodDetails.vue","mtime":1718871097000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["foodDetails.vue"],"names":[],"mappings":";AAmfile":"foodDetails.vue","sourceRoot":"src/pages/food/list/handle","sourcesContent":["<template>\n\t<div style=\"width: 100%;padding:25px\">\n\t\t<el-drawer :visible.sync=\"modals\" :title=\"activeName\" \n\t\t:wrapperClosable=\"false\" :size=\"1100\" \n\t\tdestroy-on-close @close=\"draChange\" v-loading=\"loading\">\n\t\t\t<div class=\"acea-row head\">\n\t\t\t\t<div class=\"edit-btn\">\n\t\t\t\t\t<el-button type=\"primary\" @click=\"editSave\">保存</el-button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<el-row>\n\t\t\t\t<el-form ref=\"foodFrom\" :model=\"food\" \n\t\t\t\tlabel-width=\"100px\" label-position=\"right\">\n\t\t\t\t    <el-row>\n\t\t\t\t        <el-col :span=\"24\" ref=\"left\">\n\t\t\t\t            <el-form-item label=\"食材名称\" prop=\"name\" \n\t\t\t\t\t\t\t:rules=\"[{required: 'true', message: '食材名称不能为空'}]\">\n\t\t\t\t                <el-input v-model=\"food.name\" placeholder=\"请输入食材名称\"/>\n\t\t\t\t            </el-form-item>\n \t\t\t\t            <el-form-item label=\"食材别名\" v-for=\"(alias, index) in aliases\" :key=\"index\">\n\t\t\t\t                <el-input v-model=\"aliases[index]\" placeholder=\"请输入食材别名\">\n\t\t\t\t                    <template slot=\"append\">\n\t\t\t\t                        <el-tooltip content=\"增加别名\" placement=\"top\" effect=\"light\">\n\t\t\t\t                            <el-button @click=\"aliases.push('')\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"el-icon-plus\"/></el-button>\n\t\t\t\t                        </el-tooltip>\n\t\t\t\t                        <el-tooltip content=\"减少别名\" \n\t\t\t\t\t\t\t\t\t\tplacement=\"top\" effect=\"light\" v-show=\"aliases.length > 1\">\n\t\t\t\t                            <el-button @click=\"aliases.splice(index, 1)\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"el-icon-minus\"/></el-button>\n\t\t\t\t                        </el-tooltip>\n\t\t\t\t                    </template>\n\t\t\t\t                </el-input>\n\t\t\t\t            </el-form-item>\n\t\t\t\t          <el-form-item label=\"食材主图\" prop=\"mainImageId\" \n\t\t\t\t\t\t  :rules=\"[{required: 'true', message: '食材主图不能为空'}]\">\n\t\t\t\t                <span style=\"color: gray;\">建议图片尺寸：345 * 345</span>\n\t\t\t\t                <el-upload action=\"\" list-type=\"picture-card\" :limit=\"1\"\n\t\t\t\t                           :http-request=\"addFoodMainImage\"\n\t\t\t\t                           :file-list=\"foodMainImage? [foodMainImage]: []\"\n\t\t\t\t                           :on-exceed=\"() => $message.warning(`只能上传1张食材主图`)\">\n\t\t\t\t                    <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n\t\t\t\t                </el-upload>\n\t\t\t\t            </el-form-item>\n\t\t\t\t             <el-form-item label=\"食材分类\" prop=\"typeLabelId\" \n\t\t\t\t\t\t\t :rules=\"[{required: 'true', message: '食材分类不能为空'}]\">\n\t\t\t\t                <el-cascader \n\t\t\t\t\t\t\t\t\tv-model=\"cascader\" \n\t\t\t\t\t\t\t\t\t:options=\"foodTypes\" \n\t\t\t\t\t\t\t\t\tplaceholder=\"试试搜索: 请选择食材分类\"\n\t\t\t\t\t\t\t\t\tstyle=\"width: 100%;\"\n\t\t\t\t\t\t\t\t\t:filterable=\"true\"\n\t\t\t\t\t\t\t\t\t:filter-method=\"handleFilterMethod\"/>\n\t\t\t\t            </el-form-item>\n\t\t\t\t            <el-form-item label=\"关联商品\">\n\t\t\t\t                <el-button plain type=\"info\"\n\t\t\t\t\t\t\t\t@click=\"relevantGoodsShowChange(true)\"\n\t\t\t\t                           style=\"width: 100%; margin-bottom: 10px;\">\n\t\t\t\t\t\t\t\t\t\t   <i class=\"el-icon-plus\"/></el-button>\n\t\t\t\t                <el-table stripe :data=\"relevantGoodsTable\"\n\t\t\t\t                          :show-header=\"true\"\n\t\t\t\t\t\t\t\t\t\t  v-show=\"relevantGoodsTable.length != 0\"\n\t\t\t\t                          :header-cell-style=\"{backgroundColor: '#DCDFE6'}\"\n\t\t\t\t                          :cell-style=\"{paddingTop: '7px', paddingBottom: 0}\">\n\t\t\t\t                    <el-table-column label=\"主图\" width=\"65\">\n\t\t\t\t                        <template slot-scope=\"scope\">\n\t\t\t\t                            <img :src=\"scope.row.mainImage.url\" width=\"45\" height=\"45\"/>\n\t\t\t\t                        </template>\n\t\t\t\t                    </el-table-column>\n\t\t\t\t                    <el-table-column label=\"商品名称\" width=\"115\"\n\t\t\t\t                                     prop=\"name\"\n\t\t\t\t                                     show-overflow-tooltip/>\n\t\t\t\t                    <el-table-column label=\"库存数量\" width=\"90\"\n\t\t\t\t                                     :formatter=\"(row) => row.stockVolume + ' 件'\"/>\n\t\t\t\t                    <el-table-column label=\"现价格\" width=\"80\"\n\t\t\t\t                                     :formatter=\"(row) => row.presentPrice + ' 元'\"/>\n\t\t\t\t                    <el-table-column label=\"操作\" min-width=\"80\">\n\t\t\t\t                        <template slot-scope=\"scope\">\n\t\t\t\t                            <el-button type=\"danger\" size=\"small\"\n\t\t\t\t                                       >\n\t\t\t\t                                取消\n\t\t\t\t                            </el-button>\n\t\t\t\t                        </template>\n\t\t\t\t                    </el-table-column>\n\t\t\t\t                </el-table>\n\t\t\t\t            </el-form-item>\n\t\t\t\t            <el-form-item label=\"麦吉阶段\">\n\t\t\t\t              <el-checkbox-group v-model=\"food.maijiStageLabelIds\" style=\"width: 350px;\">\n\t\t\t\t                <el-checkbox v-for=\"(label,index) in allMaijiStageLabels\" \n\t\t\t\t\t\t\t\t:key=\"index\" :label=\"label.uuId\">{{label.name}}</el-checkbox>\n\t\t\t\t              </el-checkbox-group>\n\t\t\t\t            </el-form-item>\n\t\t\t\t            <el-form-item label=\"食材标签\">\n\t\t\t\t              <el-checkbox-group v-model=\"food.foodLabelIds\" style=\"width: 350px;\">\n\t\t\t\t                <el-checkbox v-for=\"(label,index) in foodLabels\" \n\t\t\t\t\t\t\t\t:key=\"index\" :label=\"label.uuId\">{{label.name}}</el-checkbox>\n\t\t\t\t               <!-- <el-button icon=\"el-icon-plus\" circle size=\"mini\" \n\t\t\t\t\t\t\t\t style=\"margin-left: 20px;\"></el-button> -->\n\t\t\t\t              </el-checkbox-group>\n\t\t\t\t            </el-form-item>\n\t\t\t\t\t\t\t<el-form-item label=\"食材热量\" prop=\"heat\" \n\t\t\t\t\t\t\t:rules=\"[{required: 'true', message: '食材热量不能为空'}]\">\n\t\t\t\t\t\t\t  <el-input placeholder=\"请输入食材热量\" v-model=\"food.heat\">\n\t\t\t\t\t\t\t    <!-- <template slot=\"append\">千卡</template> -->\n\t\t\t\t\t\t\t\t <template slot=\"append\">千卡/100克</template>\n\t\t\t\t\t\t\t  </el-input>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\t<div v-for=\"(nc, index) in ncs\">\n\t\t\t\t\t\t\t  <el-form-item label=\"营养元素\">\n\t\t\t\t\t\t\t    <el-autocomplete v-model=\"ncs[index].element\" \n\t\t\t\t\t\t\t\t:fetch-suggestions=\"querySearch\"\n\t\t\t\t\t\t\t                     placeholder=\"请输入元素名称\" style=\"width: 100%;\">\n\t\t\t\t\t\t\t      <template slot=\"prepend\">名称</template>\n\t\t\t\t\t\t\t      <template slot=\"append\">\n\t\t\t\t\t\t\t        <el-tooltip content=\"增加营养元素\" placement=\"top\" effect=\"light\">\n\t\t\t\t\t\t\t          <el-button @click=\"ncs.push({element: '',value: ''})\"><i class=\"el-icon-plus\"/>\n\t\t\t\t\t\t\t          </el-button>\n\t\t\t\t\t\t\t        </el-tooltip>\n\t\t\t\t\t\t\t        <el-tooltip content=\"减少营养元素\" placement=\"top\" \n\t\t\t\t\t\t\t\t\teffect=\"light\" v-show=\"ncs.length > 1\">\n\t\t\t\t\t\t\t          <el-button @click=\"ncs.splice(index, 1)\"><i class=\"el-icon-minus\"/></el-button>\n\t\t\t\t\t\t\t        </el-tooltip>\n\t\t\t\t\t\t\t        <br/>\n\t\t\t\t\t\t\t      </template>\n\t\t\t\t\t\t\t    </el-autocomplete>\n\t\t\t\t\t\t\t    <el-input v-model=\"ncs[index].value\" placeholder=\"请输入元素含量\"\n\t\t\t\t\t\t\t              style=\"width: 100%; margin-top: 10px;\">\n\t\t\t\t\t\t\t      <template slot=\"prepend\">含量</template>\n\t\t\t\t\t\t\t      <template slot=\"append\">克/100克</template>\n\t\t\t\t\t\t\t    </el-input>\n\t\t\t\t\t\t\t  </el-form-item>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<el-form-item label=\"食材简介\">\n\t\t\t\t\t\t\t  <el-input type=\"textarea\" :rows=\"2\" v-model=\"food.description\" placeholder=\"请输入食材简介\"/>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\t<el-form-item label=\"注意事项\">\n\t\t\t\t\t\t\t  <el-input type=\"textarea\" :rows=\"2\" v-model=\"food.remark\" placeholder=\"请输入食材注意事项\"/>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t        </el-col>\n\t\t\t\t    </el-row>\n\t\t\t\t</el-form>\n\t\t\t</el-row>\n        </el-drawer>\n    </div>\n</template>\n\n<script>\nimport { detailsApi,uploadFoodImages,editFood,findAllFoodTypes } from '@/api/food';\nimport {dealImg} from \"@/utils/index\"\nexport default {\n  name: 'foodDetails',\n  data() {\n    return {\n\t\tactiveName: '食材详情',\n\t\tmodals: false,\n\t\tloading: false,\n\t\tfoodTypes: [],\n\t\taliases: [''],\n\t\tncs: [{element: '脂肪', value: ''}, {element: '蛋白质', value: ''}, {element: '膳食纤维', value: ''}, {element: '碳水化合物', value: ''}],\n\t\tcascader: [],\n\t\tfood: {\n\t\t    uuId: '',\n\t\t    name: '',\n\t\t    alias: '',\n\t\t    mainImageId: '',\n\t\t    detailText: '',\n\t\t    description: '',\n\t\t    remark: '',\n\t\t    heat: '',\n\t\t    goods: [],\n\t\t    typeLabelId: '',\n\t\t    cascaderStr: '',\n\t\t    maijiStageLabelIds: [],\n\t\t    foodLabelIds: [],\n\t\t},\n\t\tfoodMainImage: null,\n\t\tfoodAreaLabels: [],\n\t\tallMaijiStageLabels: [\n\t\t\t{\n\t\t\t\tuuId: \"57142cf72651433590d4724aeaa5a307\", \n\t\t\t\tname: \"第一阶段\", \n\t\t\t\torderNo: 1, \n\t\t\t\tlistShow: 1, \n\t\t\t\tsource: \"食材\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tuuId: \"e8a88718dcb44004aba992d46cc16c5d\", \n\t\t\t\tname: \"第二阶段\", \n\t\t\t\torderNo: 2, \n\t\t\t\tlistShow: 1, \n\t\t\t\tsource: \"食材\",\n\t\t\t}\n\t\t],\n\t\tfoodLabels: [\n\t\t\t{\n\t\t\t\tuuId: \"e8a88718dc465265626552d46cc16123\", \n\t\t\t\tname: \"推荐\", \n\t\t\t\torderNo: 3, \n\t\t\t\tlistShow: 0, \n\t\t\t\tdesc: \"\",\n\t\t\t\turl: \"?uuId=e8a88718dc465265626552d46cc16123\"\n\t\t\t},\n\t\t],\n\t\trelevantGoodsTable: []\n    };\n  },\n  created() {},\n  mounted() {\n  },\n  methods: {\n\t// 获取所有食材分类\n\tfindAllFoodTypes() {\n\t    findAllFoodTypes().then(async (res) => {\n\t\t\tif (res.code == 200){\n\t\t\t\tthis.foodTypes = res.data.map(type => {\n\t\t\t\t    if (type.children && type.children.length >1)\n\t\t\t\t        type.children.sort((c1, c2) =>c1.label.length - c2.label.length)\n\t\t\t\t    return type\n\t\t\t\t}).sort((t1, t2) => t1.label.length - t2.label.length)\n\t\t\t} else {\n\t\t\t\tthis.$message.error(res.msg);\n\t\t\t}\n\t\t}).catch((err) => {\n\t\t\tthis.$message({\n\t\t\t\ttype: \"error\",\n\t\t\t\tmessage: err.msg,\n\t\t\t\tduration: 1000\n\t\t\t})\n\t\t});\n\t},\n\tdraChange(){\n\t\tthis.food = {\n\t\t    uuId: '',\n\t\t    name: '',\n\t\t    alias: '',\n\t\t    mainImageId: '',\n\t\t    detailText: '',\n\t\t    description: '',\n\t\t    remark: '',\n\t\t    heat: '',\n\t\t    goods: [],\n\t\t    typeLabelId: '',\n\t\t    cascaderStr: '',\n\t\t    maijiStageLabelIds: [],\n\t\t    foodLabelIds: [],\n\t\t}\n\t\tthis.cascader = []\n\t\tthis.aliases = ['']\n\t\tthis.foodMainImage = null\n\t\tthis.ncs = [{element: '脂肪', value: ''}, {element: '蛋白质', value: ''}, {element: '膳食纤维', value: ''}, {element: '碳水化合物', value: ''}]\n\t\tthis.relevantGoodsTable = []\n\t},\n\teditSave() {\n\t  this.$refs.foodFrom.validate(async valid => {\n\t      if (!valid) {\n\t          return this.$message({\n\t\t\t\ttype: \"error\",\n\t\t\t\tmessage: \"编辑食材失败，请确认编辑规范！\",\n\t\t\t\tduration: 1000\n\t\t\t})\n\t      }\t \n\t\t  console.log(this.cascader)\n\t\t  this.food.cascaderStr = this.cascader.join(\",\")\n\t\t  this.food.typeLabelId = this.cascader[1]\n\t\t  this.food.labels = [...this.food.maijiStageLabelIds, ...this.food.foodLabelIds].map(labelId => Object.assign({labelId}))\n\t\t  this.food.alias = this.aliases && this.aliases.join('、')\n\t\t  this.food.goods = this.relevantGoodsTable.map(goods => Object.assign({goodsId: goods.uuId}))\n\t\t  this.food.ncs = [...this.ncs, {element: '热量', value: this.food.heat}]\n\t\t  if (this.food.detailText) this.food.detailText = dealImg(this.food.detailText)\n\t      this.loading = true\n\t\t  editFood(this.food).then(res=>{\n\t\t\t  console.log(res)\n\t\t\tif (res.code == 200) {\n\t\t\t  this.$message.success('保存成功！')\n\t\t\t  setTimeout(()=>{\n\t\t\t\t  this.getDetails(this.food.uuId);\n\t\t\t\t  this.loading = false\n\t\t\t  },2000)\n\t\t\t}else{\n\t\t\t  this.loading = false\n\t\t\t  this.$message.error('编辑食材失败！')\n\t\t\t}\n\t\t  }).catch(err=>{\n\t\t\t  this.loading = false\n\t\t\t  this.$message.error(err)\n\t\t  });\n\t  })\n\t},\n\tgetDetails(id) {\n\t\tthis.draChange();\n\t    detailsApi(id)\n\t\t.then(async (res) => {\n\t      if (res.code === 200) {\n\t\t\tconsole.log(res)\n\t\t\tObject.assign(this.food, res.data)\n\t\t\tthis.aliases = res.data.alias && res.data.alias.split(\"、\") || ['']\n\t\t\tthis.cascader = res.data.cascaderStr.split(\",\")\n\t\t\tthis.foodMainImage = res.data.imgData\n\t\t\tthis.food.mainImageId = res.data.imgData && res.data.imgData.uuId\n\t\t\tconst maijiStageLabelIds = res.data.labelList.filter(label => label.orderNo && label.orderNo < 3)\n\t\t\tif (maijiStageLabelIds && maijiStageLabelIds.length > 0) this.food.maijiStageLabelIds = maijiStageLabelIds.map(label => label.uuId)\n\t\t\tconst foodLabelIds = res.data.labelList.filter(label => label.orderNo > 2)\n\t\t\tif (foodLabelIds && foodLabelIds.length > 0) this.food.foodLabelIds = foodLabelIds.map(label => label.uuId)\n\t\t\t// const result2 = await findAllGoodsByFoodIdAjax(foodId);\n\t\t\t// if (result2.status == \"SUCCESS\") this.relevantGoodsTableChange(result2.data || [])\n\t\t\tconst heatNC = res.data.nutrientContentList.filter(nc => nc.element == '热量')\n\t\t\tif (heatNC.length > 0) this.food.heat = heatNC[0].value\n\t\t\tthis.ncs = res.data.nutrientContentList.filter(nc => nc.element != '热量')\n\t      } else {\n\t\t\t  this.$message({\n\t\t\t  \ttype: \"error\",\n\t\t\t  \tmessage: res.msg,\n\t\t\t  \tduration: 1000\n\t\t\t  })\n\t      }\n\t    })\n\t    .catch((err) => {\n\t\t\tthis.$message({\n\t\t\t\ttype: \"error\",\n\t\t\t\tmessage: err,\n\t\t\t\tduration: 1000\n\t\t\t})\n\t    });\n\t},\n\trelevantGoodsShowChange(){\n\t\t\n\t},\n\tquerySearch(queryString, cb) {\n\t\tconst queryArr = [{value: '脂肪'}, {value: '蛋白质'}, {value: '膳食纤维'}, {value: '碳水化合物'}, {value: '或输入自定义'}]\n\t\tconst results = queryString ? queryArr.filter(query => query.value.includes(queryString)) : queryArr\n\t\tcb(results)  // 调用 callback 返回建议列表的数据\n\t},\n\t// 上传食材主图\n\tasync addFoodMainImage(param) {\n\t    const imageData = new FormData()\n\t    imageData.append('uploadFiles', param.file)\n\t    const result = await uploadFoodImages(imageData)\n\t    if (result.code != 200) this.$message.error(`上传食材主图失败，请稍后重试！`)\n\t    this.foodMainImage = Object.assign(result.data[0], {isMain: 1})\n\t    this.food.mainImageId = this.foodMainImage.uuId\n\t},\n\thandleFilterMethod(node,keyword){\n\t\treturn node.label.indexOf(keyword) !== -1;\n\t},\n\t// ElCascaderChange(value, index, isMain) {\n\t//     if (isMain) {\n\t//         const foodName = this.$refs.myMainElCascader[index].getCheckedNodes(true)[0].data.label\n\t//         this.mainFoods[index].foodId = value[2]\n\t//         this.mainFoods[index].foodName = foodName\n\t//         this.mainFoods[index].cascaderStr = value.join(',')\n\t//         this.recipe.mainFoodId = value[2]\n\t//     } else {\n\t//         const foodName = this.$refs.myElCascader[index].getCheckedNodes(true)[0].data.label\n\t//         this.foods[index].foodId = value[2]\n\t//         this.foods[index].foodName = foodName\n\t//         this.foods[index].cascaderStr = value.join(',')\n\t//         this.recipe.foodId = value[2]\n\t//     }\n\t// },\n\t\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n    .el-form-item {\n        text-align: left;\n    }\n\t.head {\n\t  position: relative;\n\t  padding: 0 15px;\n\t  margin-bottom: 40px;\n\t  .edit-btn {\n\t    position: absolute;\n\t    right: 10px;\n\t    top: 0px;\n\t    display: flex;\n\t    align-items: center;\n\t  }\n\t}\n</style>\n\n"]}]}