{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/crud/index.vue?vue&type=style&index=0&id=6644f3c5&scoped=true&lang=scss","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/crud/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/sass-loader/dist/cjs.js","mtime":1746465018452},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50YWJCb3hfaW1nIHsKICB3aWR0aDogMzZweDsKICBoZWlnaHQ6IDM2cHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGN1cnNvcjogcG9pbnRlcjsKICBtYXJnaW46IDFweDsKCiAgaW1nIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwogIH0KfQoKLmZyYW1lLWltYWdlcyB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA0XA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/crud","sourcesContent":["<template>\n  <div>\n    <el-card shadow=\"never\" class=\"ivu-mt\" :body-style=\"{ padding: 0 }\">\n      <div class=\"padding-add\">\n        <el-form\n          v-if=\"search.length\"\n          ref=\"curlFrom\"\n          :model=\"from\"\n          :label-width=\"labelWidth\"\n          :label-position=\"labelPosition\"\n          inline\n          @submit.native.prevent\n        >\n          <el-form-item :label=\"item.name + ':'\" v-for=\"(item, index) in search\" :key=\"index\">\n            <el-input\n              v-if=\"item.type === 'input'\"\n              v-model=\"from[item.field]\"\n              :placeholder=\"'请输入' + item.name\"\n              class=\"form_content_width\"\n              @input=\"change($event)\"\n            />\n            <el-date-picker\n              v-else-if=\"item.type === 'date-picker'\"\n              :editable=\"false\"\n              clearabl\n              @change=\"searchs\"\n              v-model=\"from[item.field]\"\n              format=\"yyyy/MM/dd\"\n              type=\"daterange\"\n              value-format=\"yyyy/MM/dd\"\n              start-placeholder=\"开始日期\"\n              end-placeholder=\"结束日期\"\n              style=\"width: 250px\"\n            ></el-date-picker>\n            <el-select\n              v-else-if=\"item.type === 'select'\"\n              v-model=\"from[item.field]\"\n              placeholder=\"请选择\"\n              clearable\n              @change=\"searchs\"\n              class=\"form_content_width\"\n            >\n              <el-option v-for=\"(val, i) in item.option\" :value=\"val.value\" :label=\"val.label\" :key=\"i\"></el-option>\n            </el-select>\n          </el-form-item>\n          <!-- <template v-for=\"(item, index) in search\">\n            <el-form-item :label=\"item.name + ':'\" label-for=\"name\" v-if=\"item.type === 'input'\" :key=\"index\">\n              <el-input v-model=\"from[item.field]\" :placeholder=\"'请输入' + item.name\" class=\"form_content_width\"/>\n            </el-form-item>\n            <el-form-item :label=\"item.name + ':'\" v-else-if=\"item.type === 'date-picker'\" :key=\"index\">\n              <el-date-picker\n                  :editable=\"false\"\n                  clearabl\n                  @change=\"searchs\"\n                  v-model=\"from[item.field]\"\n                  format=\"yyyy/MM/dd\"\n                  type=\"daterange\"\n                  value-format=\"yyyy/MM/dd\"\n                  start-placeholder=\"开始日期\"\n                  end-placeholder=\"结束日期\"\n                  style=\"width: 250px\"\n              ></el-date-picker>\n            </el-form-item>\n            <el-form-item\n                :label=\"item.name + ':'\"\n                :label-for=\"item.field\"\n                v-else-if=\"item.type === 'select'\"\n                :key=\"index\"\n            >\n              <el-select\n                  v-model=\"from[item.field]\"\n                  placeholder=\"请选择\"\n                  clearable\n                  @change=\"searchs\"\n                  class=\"form_content_width\"\n              >\n                <el-option v-for=\"(val, i) in item.option\" :value=\"val.value\" :label=\"val.label\" :key=\"i\"></el-option>\n              </el-select>\n            </el-form-item>\n          </template> -->\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchs\">查询</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n    </el-card>\n    <el-card shadow=\"never\" class=\"ivu-mt\" :class=\"search.length ? 'mt16' : ''\">\n      <el-row>\n        <el-col v-bind=\"grid\">\n          <el-button type=\"primary\" @click=\"add\">添加</el-button>\n        </el-col>\n      </el-row>\n      <el-table\n          :data=\"dataList\"\n          ref=\"table\"\n          class=\"mt14\"\n          v-loading=\"loading\"\n          no-userFrom-text=\"暂无数据\"\n          no-filtered-userFrom-text=\"暂无筛选结果\"\n      >\n        <el-table-column :label=\"item.title\" :min-width=\"item.minWidth\" v-for=\"(item, index) in columns\" :key=\"index\">\n          <template slot-scope=\"scope\">\n            <template v-if=\"item.key\">\n              <span>{{ scope.row[item.key] }}</span>\n            </template>\n            <template v-else-if=\"item.from_type == 'frameImageOne'\">\n              <div class=\"tabBox_img\" v-viewer>\n                <img v-lazy=\"scope.row[item.slot]\"/>\n              </div>\n            </template>\n            <template v-else-if=\"item.from_type == 'frameImages'\">\n              <div class=\"frame-images\">\n                <div class=\"tabBox_img\" v-viewer v-for=\"(item, index) in scope.row[item.slot]\" :key=\"index\">\n                  <img v-lazy=\"item\"/>\n                </div>\n              </div>\n            </template>\n            <template v-else-if=\"item.from_type == 'dateTimeRange'\">\n              <span>{{ scope.row[item.slot][0] }}--{{ scope.row[item.slot][1] }}</span>\n            </template>\n            <template v-else-if=\"item.slot === 'action'\">\n              <a @click=\"show(scope.row)\">详情</a>\n              <el-divider direction=\"vertical\"/>\n              <a @click=\"edit(scope.row)\">修改</a>\n              <el-divider direction=\"vertical\"></el-divider>\n              <a @click=\"del(scope.row, '删除', scope.$index)\">删除</a>\n            </template>\n            <template v-else-if=\"item.from_type === 'switches'\">\n              <el-switch\n                  :active-value=\"1\"\n                  :inactive-value=\"0\"\n                  v-model=\"scope.row[item.slot]\"\n                  :value=\"scope.row[item.slot]\"\n                  size=\"large\"\n                  @change=\"onchangeIsShow(scope.row,item.slot)\"\n              >\n              </el-switch>\n            </template>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"acea-row row-right page\">\n        <pagination v-if=\"total\" :total=\"total\" :page.sync=\"from.page\" :limit.sync=\"from.limit\" @pagination=\"getList\"/>\n      </div>\n    </el-card>\n\n    <el-dialog title=\"查看详情\" :visible.sync=\"dialogTableVisible\" v-if=\"dialogTableVisible\">\n      <el-descriptions :title=\"readFields.name\">\n        <el-descriptions-item :label=\"item.comment\" v-for=\"(item, index) in readFields.all\" :key=\"index\">\n          <div v-if=\"item.from_type == 'frameImageOne'\">\n            <div class=\"tabBox_img\" v-viewer>\n              <img v-lazy=\"info[item.field]\"/>\n            </div>\n          </div>\n          <div v-else-if=\"item.from_type == 'frameImages'\">\n            <div class=\"frame-images\">\n              <div class=\"tabBox_img\" v-viewer v-for=\"(item, index) in info[item.field]\" :key=\"index\">\n                <img v-lazy=\"item\"/>\n              </div>\n            </div>\n          </div>\n          <div v-else-if=\"item.from_type == 'dateTimeRange'\">\n            <span>{{ info[item.field][0] }}--{{ info[item.field][1] }}</span>\n          </div>\n          <div v-else>{{ info[item.field] }}</div>\n        </el-descriptions-item>\n      </el-descriptions>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex';\nimport {crudApi, getList, getCreateApi, getStatusApi, getEditApi} from '@/api/crud.js';\n\nexport default {\n  name: 'crud_index',\n  data() {\n    return {\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      loading: false,\n      columns: [],\n      readFields: {\n        name: '',\n        all: [],\n      },\n      from: {\n        page: 1,\n        limit: 15,\n      },\n      dataList: [],\n      total: 0,\n      methodApi: {},\n      curdKey: '',\n      dialogTableVisible: false,\n      info: {},\n      search: [],\n    };\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : '80px';\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  beforeRouteUpdate(to, from, next) {\n    this.from.page = 1;\n    this.getCrudApi(to.params.table_name);\n    next();\n  },\n  created() {\n    this.getCrudApi(this.$route.params.table_name);\n  },\n  methods: {\n    show(row) {\n      let url = this.methodApi.read.replace('<id>', row.id);\n      getCreateApi(url)\n          .then((res) => {\n            this.dialogTableVisible = true;\n            this.info = res.data;\n          })\n          .catch((res) => {\n            this.$Message.error(res.msg);\n          });\n    },\n    onchangeIsShow(row, field) {\n      let url = this.methodApi.status.replace('<id>', row.id);\n      getStatusApi(url, {field: field, value: row[field]})\n          .then(async (res) => {\n            this.$message.success(res.msg);\n          })\n          .catch((res) => {\n            this.$message.error(res.msg);\n          });\n    },\n    // 表格搜索\n    searchs() {\n      this.from.page = 1;\n      this.getList();\n    },\n    change(e) {\n      this.$forceUpdate();\n    },\n    getCrudApi(tableName) {\n      crudApi(tableName).then((res) => {\n        this.methodApi = res.data.route;\n        this.curdKey = res.data.key;\n        this.readFields = res.data.readFields;\n        res.data.search.map((item) => {\n          this.from[item.field] = '';\n        });\n        this.search = res.data.search;\n        res.data.columns.push({\n          title: '操作',\n          slot: 'action',\n          fixed: 'right',\n          width: 100,\n          align: 'center',\n        });\n        res.data.columns.map((item) => {\n          if (item.from_type === 'frameImageOne') {\n            item.render = (h, params) => {\n              return h(\n                  'div',\n                  {\n                    class: 'tabBox_img',\n                    directives: [\n                      {\n                        name: 'viewer',\n                      },\n                    ],\n                  },\n                  [\n                    h('img', {\n                      directives: [\n                        {\n                          name: 'lazy',\n                          value: params.row[item.slot],\n                        },\n                      ],\n                    }),\n                  ],\n              );\n            };\n          } else if (item.from_type === 'frameImages') {\n            item.render = (h, params) => {\n              let image = params.row[item.slot] || [];\n              let imageH = [];\n              image.map((item) => {\n                imageH.push(\n                    h('img', {\n                      directives: [\n                        {\n                          name: 'lazy',\n                          value: item,\n                        },\n                      ],\n                    }),\n                );\n              });\n              return h(\n                  'div',\n                  {\n                    class: 'tabBox_img',\n                    directives: [\n                      {\n                        name: 'viewer',\n                      },\n                    ],\n                  },\n                  imageH,\n              );\n            };\n          }\n        });\n        this.columns = res.data.columns;\n        this.getList();\n      });\n    },\n    // 添加\n    add() {\n      let url = this.methodApi.create;\n      this.$modalForm(getCreateApi(url)).then(() => this.getList());\n    },\n    //列表\n    getList() {\n      this.loading = true;\n      let url = this.methodApi.index;\n      getList(url, this.from)\n          .then(async (res) => {\n            let data = res.data;\n            this.dataList = data.list;\n            this.total = data.count;\n            this.loading = false;\n          })\n          .catch((res) => {\n            this.loading = false;\n            this.$message.error(res.msg);\n          });\n    },\n    // 修改\n    edit(row) {\n      let url = this.methodApi.edit.replace('<id>', row[this.curdKey]);\n      this.$modalForm(getEditApi(url)).then(() => this.getList());\n    },\n    // 删除\n    del(row, tit, num) {\n      let url = this.methodApi.delete.replace('<id>', row[this.curdKey]);\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: url,\n        method: 'DELETE',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n          .then((res) => {\n            this.$message.success(res.msg);\n            this.getList();\n          })\n          .catch((res) => {\n            this.$message.error(res.msg);\n          });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.tabBox_img {\n  width: 36px;\n  height: 36px;\n  border-radius: 4px;\n  cursor: pointer;\n  margin: 1px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n.frame-images {\n  display: flex;\n  flex-wrap: wrap;\n}\n</style>\n"]}]}