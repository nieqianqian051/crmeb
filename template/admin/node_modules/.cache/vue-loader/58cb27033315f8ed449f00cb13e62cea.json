{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/statistic/integral/index.vue?vue&type=style&index=0&id=79aca6d2&scoped=true&lang=css","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/statistic/integral/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/css-loader/index.js","mtime":1746465018503},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1746465020031},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/postcss-loader/src/index.js","mtime":1746465019371},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jbCB7CiAgbWFyZ2luLXJpZ2h0OiAyMHB4Owp9Ci5jb2RlLXJvdy1iZyB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IG5vd3JhcDsKfQouY29kZS1yb3ctYmcgLml2dS1tdCB7CiAgd2lkdGg6IDEwMCU7CiAgbWFyZ2luOiAwIDVweDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA0PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/statistic/integral","sourcesContent":["<template>\n  <div v-loading=\"spinShow\">\n    <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt\">\n      <el-form ref=\"formValidate\" :model=\"formValidate\" class=\"tabform\" @submit.native.prevent>\n        <el-row :gutter=\"24\">\n          <el-col :span=\"24\">\n            <el-form-item label=\"订单时间：\">\n              <el-radio-group\n                v-model=\"formValidate.data\"\n                type=\"button\"\n                @change=\"selectChange(formValidate.data)\"\n                class=\"mr\"\n              >\n                <el-radio-button :label=\"item.val\" v-for=\"(item, i) in fromList.fromTxt\" :key=\"i\">{{\n                  item.text\n                }}</el-radio-button>\n              </el-radio-group>\n              <el-date-picker\n                :editable=\"false\"\n                clearable\n                @change=\"onchangeTime\"\n                v-model=\"timeVal\"\n                format=\"yyyy/MM/dd\"\n                type=\"daterange\"\n                value-format=\"yyyy/MM/dd\"\n                range-separator=\"-\"\n                start-placeholder=\"开始日期\"\n                end-placeholder=\"结束日期\"\n              ></el-date-picker>\n            </el-form-item> </el-col\n        ></el-row>\n      </el-form>\n    </el-card>\n    <cards-data :cardLists=\"cardLists\" v-if=\"cardLists.length >= 0\"></cards-data>\n    <echarts-new :option-data=\"optionData\" :styles=\"style\" height=\"100%\" width=\"100%\" v-if=\"optionData\"></echarts-new>\n    <div class=\"code-row-bg\">\n      <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt\">\n        <div class=\"acea-row row-between-wrapper\">\n          <div class=\"statics-header-title\">积分来源</div>\n          <div>切换样式</div>\n        </div>\n        <echarts-new\n          :option-data=\"optionData\"\n          :styles=\"style\"\n          height=\"100%\"\n          width=\"100%\"\n          v-if=\"optionData\"\n        ></echarts-new>\n      </el-card>\n      <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt\">\n        <div class=\"acea-row row-between-wrapper\">\n          <div class=\"statics-header-title\">积分消耗</div>\n          <div>切换样式</div>\n        </div>\n        <echarts-new\n          :option-data=\"optionData\"\n          :styles=\"style\"\n          height=\"100%\"\n          width=\"100%\"\n          v-if=\"optionData\"\n        ></echarts-new>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport cardsData from '@/components/cards/cards';\nimport echartsNew from '@/components/echartsNew/index';\n\nexport default {\n  name: 'index',\n  components: { cardsData, echartsNew },\n  data() {\n    return {\n      timeVal: [],\n      style: { height: '400px' },\n\n      fromList: {\n        title: '选择时间',\n        custom: true,\n        fromTxt: [\n          { text: '全部', val: '' },\n          { text: '今天', val: 'today' },\n          { text: '本周', val: 'week' },\n          { text: '本月', val: 'month' },\n          { text: '本季度', val: 'quarter' },\n          { text: '本年', val: 'year' },\n        ],\n      },\n      formValidate: {\n        status: '',\n        date: '',\n      },\n      cardLists: [\n        {\n          col: 6,\n          count: 0,\n          name: '参与人数(人)',\n          className: 'ios-speedometer-outline',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '成团数量(个)',\n          className: 'md-rose',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '参与人数(人)',\n          className: 'ios-speedometer-outline',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '成团数量(个)',\n          className: 'md-rose',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '参与人数(人)',\n          className: 'ios-speedometer-outline',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '成团数量(个)',\n          className: 'md-rose',\n        },\n      ],\n      optionData: {},\n      spinShow: false,\n    };\n  },\n  created() {\n    // this.getTrend();\n  },\n  methods: {\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.dataTime = this.timeVal ? this.timeVal.join('-') : '';\n      this.name = this.dataTime;\n    },\n    // 统计图\n    getTrend() {\n      this.spinShow = true;\n      statisticUserTrendApi(this.formInline)\n        .then(async (res) => {\n          let legend = res.data.series.map((item) => {\n            return item.name;\n          });\n          let xAxis = res.data.xAxis;\n          let col = ['#5B8FF9', '#5AD8A6', '#FFAB2B', '#5D7092'];\n          let series = [];\n          res.data.series.map((item, index) => {\n            series.push({\n              name: item.name,\n              type: 'line',\n              data: item.value,\n              itemStyle: {\n                normal: {\n                  color: col[index],\n                },\n              },\n              smooth: 0,\n            });\n          });\n          this.optionData = {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  backgroundColor: '#6a7985',\n                },\n              },\n            },\n            legend: {\n              x: 'center',\n              data: legend,\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true,\n            },\n            toolbox: {\n              feature: {\n                saveAsImage: {},\n              },\n            },\n            xAxis: {\n              type: 'category',\n              boundaryGap: true,\n              // axisTick:{\n              //     show:false\n              // },\n              // axisLine:{\n              //     show:false\n              // },\n              // splitLine: {\n              //     show: false\n              // },\n              axisLabel: {\n                interval: 0,\n                rotate: 40,\n                textStyle: {\n                  color: '#000000',\n                },\n              },\n              data: xAxis,\n            },\n            yAxis: {\n              type: 'value',\n              axisLine: {\n                show: false,\n              },\n              axisTick: {\n                show: false,\n              },\n              axisLabel: {\n                textStyle: {\n                  color: '#7F8B9C',\n                },\n              },\n              splitLine: {\n                show: true,\n                lineStyle: {\n                  color: '#F5F7F9',\n                },\n              },\n            },\n            series: series,\n          };\n          this.spinShow = false;\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n          this.spinShow = false;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.cl {\n  margin-right: 20px;\n}\n.code-row-bg {\n  display: flex;\n  flex-wrap: nowrap;\n}\n.code-row-bg .ivu-mt {\n  width: 100%;\n  margin: 0 5px;\n}\n</style>\n"]}]}