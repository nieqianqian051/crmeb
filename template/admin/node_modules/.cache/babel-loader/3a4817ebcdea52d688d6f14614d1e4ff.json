{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/components/uploadVideo/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/components/uploadVideo/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgeyB1cGxvYWRCeVBpZWNlcyB9IGZyb20gJ0AvdXRpbHMvdXBsb2FkJzsgLy/lvJXlhaV1cGxvYWRCeVBpZWNlc+aWueazlQppbXBvcnQgeyBwcm9kdWN0R2V0VGVtcEtleXNBcGksIHVwbG9hZFR5cGUgYXMgX3VwbG9hZFR5cGUgfSBmcm9tICdAL2FwaS9wcm9kdWN0JzsKaW1wb3J0IFNldHRpbmcgZnJvbSAnQC9zZXR0aW5nJzsKaW1wb3J0IHsgZ2V0Q29va2llcyB9IGZyb20gJ0AvbGlicy91dGlsJzsKaW1wb3J0IHsgaXNWaWRlb1VwbG9hZCB9IGZyb20gJ0AvdXRpbHMnOwoKLy8gaW1wb3J0ICcuLi8uLi8uLi9wdWJsaWMvVUVkaXRvci9kaWFsb2dzL2ludGVybmFsJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd2aWRlMTFvJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmlsZVVybDogU2V0dGluZy5hcGlCYXNlVVJMICsgJy9maWxlL3VwbG9hZCcsCiAgICAgIHVwbG9hZDogewogICAgICAgIHZpZGVvSW5nOiBmYWxzZSAvLyDmmK/lkKbmmL7npLrov5vluqbmnaHvvJsKICAgICAgfSwKICAgICAgcHJvZ3Jlc3M6IDAsCiAgICAgIC8vIOi/m+W6puadoem7mOiupDAKICAgICAgdmlkZW9MaW5rOiAnJywKICAgICAgZm9ybVZhbGlkYXRlOiB7CiAgICAgICAgdmlkZW9fbGluazogJycKICAgICAgfSwKICAgICAgdXBsb2FkX3R5cGU6ICcnLAogICAgICB1cGxvYWREYXRhOiB7fSwKICAgICAgaGVhZGVyOiB7fQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnVwbG9hZFR5cGUoKTsKICAgIHRoaXMuZ2V0VG9rZW4oKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOWIoOmZpOinhumike+8mwogICAgZGVsVmlkZW86IGZ1bmN0aW9uIGRlbFZpZGVvKCkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHRoYXQuJHNldCh0aGF0LmZvcm1WYWxpZGF0ZSwgJ3ZpZGVvX2xpbmsnLCAnJyk7CiAgICB9LAogICAgLy/ojrflj5bop4bpopHkuIrkvKDnsbvlnosKICAgIHVwbG9hZFR5cGU6IGZ1bmN0aW9uIHVwbG9hZFR5cGUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIF91cGxvYWRUeXBlKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMudXBsb2FkX3R5cGUgPSByZXMuZGF0YS51cGxvYWRfdHlwZTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5LiK5Lyg5oiQ5YqfCiAgICBoYW5kbGVTdWNjZXNzOiBmdW5jdGlvbiBoYW5kbGVTdWNjZXNzKHJlcywgZmlsZSwgZmlsZUxpc3QpIHsKICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDIwMCkgewogICAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLnZpZGVvX2xpbmsgPSByZXMuZGF0YS5zcmM7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgIH0KICAgIH0sCiAgICB2aWRlb1NhdmVUb1VybDogZnVuY3Rpb24gdmlkZW9TYXZlVG9VcmwoZmlsZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgaWYgKGlzVmlkZW9VcGxvYWQoZmlsZXgpKSB1cGxvYWRCeVBpZWNlcyh7CiAgICAgICAgZmlsZTogZmlsZSwKICAgICAgICAvLyDop4bpopHlrp7kvZMKICAgICAgICBwaWVjZVNpemU6IDMsCiAgICAgICAgLy8g5YiG54mH5aSn5bCPCiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gc3VjY2VzcyhkYXRhKSB7CiAgICAgICAgICBfdGhpczIuZm9ybVZhbGlkYXRlLnZpZGVvX2xpbmsgPSBkYXRhLmZpbGVfcGF0aDsKICAgICAgICAgIF90aGlzMi5wcm9ncmVzcyA9IDEwMDsKICAgICAgICB9LAogICAgICAgIGVycm9yOiBmdW5jdGlvbiBlcnJvcihlKSB7CiAgICAgICAgICBfdGhpczIuJG1lc3NhZ2UuZXJyb3IoZS5tc2cpOwogICAgICAgIH0sCiAgICAgICAgdXBsb2FkaW5nOiBmdW5jdGlvbiB1cGxvYWRpbmcoY2h1bmssIGFsbENodW5rKSB7CiAgICAgICAgICBfdGhpczIudmlkZW9JbmcgPSB0cnVlOwogICAgICAgICAgdmFyIHN0ID0gTWF0aC5mbG9vcihjaHVuayAvIGFsbENodW5rICogMTAwKTsKICAgICAgICAgIF90aGlzMi5wcm9ncmVzcyA9IHN0OwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICBnZXRUb2tlbjogZnVuY3Rpb24gZ2V0VG9rZW4oKSB7CiAgICAgIHRoaXMuaGVhZGVyWydBdXRob3JpLXphdGlvbiddID0gJ0JlYXJlciAnICsgZ2V0Q29va2llcygndG9rZW4nKTsKICAgIH0sCiAgICBiZWZvcmVVcGxvYWQ6IGZ1bmN0aW9uIGJlZm9yZVVwbG9hZCgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CiAgICAgIHRoaXMudXBsb2FkRGF0YSA9IHt9OwogICAgICB2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgX3RoaXMzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXNvbHZlKHRydWUpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgcmV0dXJuIHByb21pc2U7CiAgICB9LAogICAgemhfdXBsb2FkRmlsZTogZnVuY3Rpb24gemhfdXBsb2FkRmlsZSgpIHsKICAgICAgaWYgKHRoaXMudmlkZW9MaW5rKSB7CiAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUudmlkZW9fbGluayA9IHRoaXMudmlkZW9MaW5rOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJHJlZnMucmVmaWQuY2xpY2soKTsKICAgICAgfQogICAgfSwKICAgIHpoX3VwbG9hZEZpbGVfY2hhbmdlOiBmdW5jdGlvbiB6aF91cGxvYWRGaWxlX2NoYW5nZShldmZpbGUpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICBpZiAoZXZmaWxlLnRhcmdldC5maWxlc1swXS50eXBlICE9PSAndmlkZW8vbXA0JykgewogICAgICAgIHJldHVybiB0aGF0LiRtZXNzYWdlLmVycm9yKCflj6rog73kuIrkvKBtcDTmlofku7YnKTsKICAgICAgfQogICAgICB2YXIgdHlwZXMgPSB7CiAgICAgICAga2V5OiBldmZpbGUudGFyZ2V0LmZpbGVzWzBdLm5hbWUsCiAgICAgICAgY29udGVudFR5cGU6IGV2ZmlsZS50YXJnZXQuZmlsZXNbMF0udHlwZQogICAgICB9OwogICAgICBwcm9kdWN0R2V0VGVtcEtleXNBcGkodHlwZXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHRoYXQuJHZpZGVvQ2xvdWQudmlkZW9VcGxvYWQoewogICAgICAgICAgdHlwZTogcmVzLmRhdGEudHlwZSwKICAgICAgICAgIGV2ZmlsZTogZXZmaWxlLAogICAgICAgICAgcmVzOiByZXMsCiAgICAgICAgICB1cGxvYWRpbmc6IGZ1bmN0aW9uIHVwbG9hZGluZyhzdGF0dXMsIHByb2dyZXNzKSB7CiAgICAgICAgICAgIHRoYXQudXBsb2FkLnZpZGVvSW5nID0gc3RhdHVzOwogICAgICAgICAgfQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgdGhhdC5mb3JtVmFsaWRhdGUudmlkZW9fbGluayA9IHJlcy51cmw7CiAgICAgICAgICB0aGF0LiRtZXNzYWdlLnN1Y2Nlc3MoJ+inhumikeS4iuS8oOaIkOWKnycpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIHRoYXQuJG1lc3NhZ2UuZXJyb3IocmVzKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgdXBsb2FkczogZnVuY3Rpb24gdXBsb2FkcygpIHsKICAgICAgdGhpcy4kZW1pdCgnZ2V0dmlkZW8nLCB0aGlzLmZvcm1WYWxpZGF0ZS52aWRlb19saW5rKTsKICAgIH0KICB9Cn07"},{"version":3,"names":["uploadByPieces","productGetTempKeysApi","uploadType","Setting","getCookies","isVideoUpload","name","data","fileUrl","apiBaseURL","upload","videoIng","progress","videoLink","formValidate","video_link","upload_type","uploadData","header","created","getToken","methods","delVideo","that","$set","_this","then","res","handleSuccess","file","fileList","status","src","$message","success","msg","error","videoSaveToUrl","_this2","filex","pieceSize","file_path","e","uploading","chunk","allChunk","st","Math","floor","beforeUpload","_this3","promise","Promise","resolve","$nextTick","zh_uploadFile","$refs","refid","click","zh_uploadFile_change","evfile","target","files","type","types","key","contentType","$videoCloud","videoUpload","url","catch","uploads","$emit"],"sources":["src/components/uploadVideo/index.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"mt20 ml20\">\n      <el-input class=\"perW35\" v-model=\"videoLink\" placeholder=\"请输入视频链接\" />\n      <input type=\"file\" ref=\"refid\" style=\"display: none\" @change=\"zh_uploadFile_change\" />\n      <el-button\n        v-if=\"upload_type !== '1' || videoLink\"\n        type=\"primary\"\n        icon=\"ios-cloud-upload-outline\"\n        class=\"ml10\"\n        @click=\"zh_uploadFile\"\n        >{{ videoLink ? '确认添加' : '上传视频' }}</el-button\n      >\n      <el-upload\n        v-if=\"upload_type === '1' && !videoLink\"\n        :show-file-list=\"false\"\n        :action=\"fileUrl\"\n        class=\"ml10\"\n        :before-upload=\"videoSaveToUrl\"\n        :data=\"uploadData\"\n        :headers=\"header\"\n        :multiple=\"true\"\n        style=\"display: inline-block\"\n        accept=\".mp4\"\n      >\n        <el-button type=\"primary\" icon=\"ios-cloud-upload-outline\">上传视频</el-button>\n      </el-upload>\n      <Progress :percent=\"progress\" :stroke-width=\"5\" v-if=\"upload.videoIng\" />\n      <div class=\"video-style\" v-if=\"formValidate.video_link\">\n        <video\n          style=\"width: 100%; height: 100% !important; border-radius: 10px\"\n          :src=\"formValidate.video_link\"\n          controls=\"controls\"\n        >\n          您的浏览器不支持 video 标签。\n        </video>\n        <div class=\"mark\"></div>\n        <i class=\"el-icon-delete iconv\" @click=\"delVideo\"></i>\n      </div>\n    </div>\n    <div class=\"mt50 ml20\">\n      <el-button type=\"primary\" @click=\"uploads\">确认</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { uploadByPieces } from '@/utils/upload'; //引入uploadByPieces方法\nimport { productGetTempKeysApi, uploadType } from '@/api/product';\nimport Setting from '@/setting';\nimport { getCookies } from '@/libs/util';\nimport { isVideoUpload } from '@/utils';\n\n// import '../../../public/UEditor/dialogs/internal';\nexport default {\n  name: 'vide11o',\n  data() {\n    return {\n      fileUrl: Setting.apiBaseURL + '/file/upload',\n      upload: {\n        videoIng: false, // 是否显示进度条；\n      },\n      progress: 0, // 进度条默认0\n      videoLink: '',\n      formValidate: {\n        video_link: '',\n      },\n      upload_type: '',\n      uploadData: {},\n      header: {},\n    };\n  },\n  created() {\n    this.uploadType();\n    this.getToken();\n  },\n  methods: {\n    // 删除视频；\n    delVideo() {\n      let that = this;\n      that.$set(that.formValidate, 'video_link', '');\n    },\n    //获取视频上传类型\n    uploadType() {\n      uploadType().then((res) => {\n        this.upload_type = res.data.upload_type;\n      });\n    },\n    // 上传成功\n    handleSuccess(res, file, fileList) {\n      if (res.status === 200) {\n        this.formValidate.video_link = res.data.src;\n        this.$message.success(res.msg);\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    videoSaveToUrl(file) {\n      if (isVideoUpload(filex))\n        uploadByPieces({\n          file: file, // 视频实体\n          pieceSize: 3, // 分片大小\n          success: (data) => {\n            this.formValidate.video_link = data.file_path;\n            this.progress = 100;\n          },\n          error: (e) => {\n            this.$message.error(e.msg);\n          },\n          uploading: (chunk, allChunk) => {\n            this.videoIng = true;\n            let st = Math.floor((chunk / allChunk) * 100);\n            this.progress = st;\n          },\n        });\n      return false;\n    },\n    getToken() {\n      this.header['Authori-zation'] = 'Bearer ' + getCookies('token');\n    },\n    beforeUpload() {\n      this.uploadData = {};\n      let promise = new Promise((resolve) => {\n        this.$nextTick(function () {\n          resolve(true);\n        });\n      });\n      return promise;\n    },\n    zh_uploadFile() {\n      if (this.videoLink) {\n        this.formValidate.video_link = this.videoLink;\n      } else {\n        this.$refs.refid.click();\n      }\n    },\n    zh_uploadFile_change(evfile) {\n      let that = this;\n      if (evfile.target.files[0].type !== 'video/mp4') {\n        return that.$message.error('只能上传mp4文件');\n      }\n      let types = {\n        key: evfile.target.files[0].name,\n        contentType: evfile.target.files[0].type,\n      };\n      productGetTempKeysApi(types).then((res) => {\n        that.$videoCloud\n          .videoUpload({\n            type: res.data.type,\n            evfile: evfile,\n            res: res,\n            uploading(status, progress) {\n              that.upload.videoIng = status;\n            },\n          })\n          .then((res) => {\n            that.formValidate.video_link = res.url;\n            that.$message.success('视频上传成功');\n          })\n          .catch((res) => {\n            that.$message.error(res);\n          });\n      });\n    },\n    uploads() {\n      this.$emit('getvideo', this.formValidate.video_link);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.video-style {\n  width: 40%;\n  height: 180px;\n  border-radius: 10px;\n  background-color: #707070;\n  margin-top: 10px;\n  position: relative;\n  overflow: hidden;\n}\n.video-style .iconv {\n  color: #fff;\n  line-height: 180px;\n  width: 50px;\n  height: 50px;\n  display: inherit;\n  font-size: 26px;\n  position: absolute;\n  top: -74px;\n  left: 50%;\n  margin-left: -25px;\n}\n.video-style .mark {\n  position: absolute;\n  width: 100%;\n  height: 30px;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  text-align: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}