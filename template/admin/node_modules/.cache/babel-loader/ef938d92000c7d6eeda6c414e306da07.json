{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/statistic/user/components/userInfo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/statistic/user/components/userInfo.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["statisticUserBasicApi","statisticUserTrendApi","echartsNew","name","components","props","formInline","type","Object","default","channel_type","data","spinShow","grid","xl","lg","md","sm","xs","timeVal","dataTime","list","optionData","style","height","mounted","getStatistics","getTrend","methods","onSeach","onchangeTime","e","join","_this","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","cardLists","wrap","_callee$","_context","prev","next","icon","cumulativeUser","colors","people","browse","newUser","payPeople","payUser","stop","_x","apply","arguments","catch","$message","error","msg","_this2","_ref2","_callee2","legend","xAxis","col","series","_callee2$","_context2","map","item","index","push","value","itemStyle","normal","color","smooth","tooltip","trigger","axisPointer","label","backgroundColor","x","left","right","bottom","containLabel","toolbox","feature","saveAsImage","boundaryGap","axisLabel","interval","rotate","textStyle","yAxis","axisLine","show","axisTick","splitLine","lineStyle","_x2"],"sources":["src/pages/statistic/user/components/userInfo.vue"],"sourcesContent":["<template>\n  <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt-16\" v-loading=\"spinShow\">\n    <div class=\"acea-row row-between-wrapper\">\n      <div class=\"statics-header-title mb20\">\n        <h4>用户概况</h4>\n        <el-tooltip placement=\"right-start\">\n          <i class=\"el-icon-question ml10\"></i>\n          <div slot=\"content\">\n            <div>累积用户数</div>\n            <div>商城的总用户</div>\n            <br />\n            <div>访客数</div>\n            <div>在选定条件下，访问商城页面的去重人数</div>\n            <br />\n            <div>浏览量</div>\n            <div>在选定条件下，用户浏览商城页面的次数。每打开一个页面或每刷新一次页面都记录1次</div>\n            <br />\n            <div>新增用户数</div>\n            <div>在选定条件下，新注册的用户</div>\n            <br />\n            <div>成交用户数</div>\n            <div>在选定条件下，下单并支付成功的用户</div>\n            <br />\n            <div>付费会员数</div>\n            <div>筛选时间截止时，具有商城付费会员身份的用户数</div>\n          </div>\n        </el-tooltip>\n      </div>\n    </div>\n    <div class=\"mb20\">\n      <el-row>\n        <el-col v-bind=\"grid\" v-for=\"(item, index) in list\" :key=\"index\">\n          <div class=\"acea-row mb30 fwn\">\n            <div class=\"iconCrl mr15\" :class=\"item.colors\">\n              <i class=\"iconfont\" :class=\"item.icon\"></i>\n            </div>\n            <div class=\"info\">\n              <span class=\"sp1\" v-text=\"item.name\"></span>\n              <span class=\"sp2\" v-if=\"index === list.length - 1\" v-text=\"item.list.num\"></span>\n              <span class=\"sp2\" v-else v-text=\"item.list.num\"></span>\n              <span class=\"content-time spBlock\"\n                >环比增长：<i class=\"content-is\" :class=\"Number(item.list.percent) >= 0 ? 'up' : 'down'\"\n                  >{{ item.list.percent }}%</i\n                >\n                <i\n                  :style=\"{ color: Number(item.list.percent) >= 0 ? '#F5222D' : '#39C15B' }\"\n                  :class=\"[Number(item.list.percent) >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom']\"\n                />\n              </span>\n            </div>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n    <echarts-new :option-data=\"optionData\" :styles=\"style\" height=\"100%\" width=\"100%\" v-if=\"optionData\"></echarts-new>\n  </el-card>\n</template>\n\n<script>\nimport { statisticUserBasicApi, statisticUserTrendApi } from '@/api/statistic';\nimport echartsNew from '@/components/echartsNew/index';\nexport default {\n  name: 'userInfo',\n  components: {\n    echartsNew,\n  },\n  props: {\n    formInline: {\n      type: Object,\n      default: function () {\n        return {\n          channel_type: '',\n          data: '',\n        };\n      },\n    },\n  },\n  data() {\n    return {\n      spinShow: false,\n      grid: {\n        xl: 4,\n        lg: 4,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      name: '近30天',\n      timeVal: [],\n      dataTime: '',\n      list: [],\n      optionData: {},\n      style: { height: '400px' },\n    };\n  },\n  mounted() {\n    this.getStatistics();\n    this.getTrend();\n  },\n  methods: {\n    onSeach() {\n      this.getStatistics();\n      this.getTrend();\n    },\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.dataTime = this.timeVal ? this.timeVal.join('-') : '';\n      this.name = this.dataTime;\n    },\n    // 统计\n    getStatistics() {\n      statisticUserBasicApi(this.formInline)\n        .then(async (res) => {\n          const cardLists = res.data;\n          this.list = [\n            {\n              name: '累计用户',\n              icon: 'iconleijiyonghu',\n              list: cardLists.cumulativeUser,\n              colors: 'four',\n            },\n            {\n              name: '访客数',\n              icon: 'iconfangkeshu',\n              list: cardLists.people,\n              colors: 'one',\n            },\n            {\n              name: '浏览量',\n              icon: 'iconshangpinliulanliang',\n              list: cardLists.browse,\n              colors: 'two',\n            },\n            {\n              name: '新增用户数',\n              icon: 'iconxinzengyonghushu',\n              list: cardLists.newUser,\n              colors: 'three',\n            },\n            {\n              name: '成交用户数',\n              icon: 'iconchengjiaoyonghushu',\n              list: cardLists.payPeople,\n              colors: 'four',\n            },\n            {\n              name: '付费会员数',\n              icon: 'iconfufeihuiyuanshu',\n              list: cardLists.payUser,\n              colors: 'four',\n            },\n          ];\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 统计图\n    getTrend() {\n      this.spinShow = true;\n      statisticUserTrendApi(this.formInline)\n        .then(async (res) => {\n          let legend = res.data.series.map((item) => {\n            return item.name;\n          });\n          let xAxis = res.data.xAxis;\n          let col = ['#5B8FF9', '#5AD8A6', '#FFAB2B', '#5D7092'];\n          let series = [];\n          res.data.series.map((item, index) => {\n            series.push({\n              name: item.name,\n              type: 'line',\n              data: item.value,\n              itemStyle: {\n                normal: {\n                  color: col[index],\n                },\n              },\n              smooth: true,\n            });\n          });\n          this.optionData = {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  backgroundColor: '#6a7985',\n                },\n              },\n            },\n            legend: {\n              x: 'center',\n              data: legend,\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true,\n            },\n            toolbox: {\n              feature: {\n                saveAsImage: {},\n              },\n            },\n            xAxis: {\n              type: 'category',\n              boundaryGap: true,\n              // axisTick:{\n              //     show:false\n              // },\n              // axisLine:{\n              //     show:false\n              // },\n              // splitLine: {\n              //     show: false\n              // },\n              axisLabel: {\n                interval: 0,\n                rotate: 40,\n                textStyle: {\n                  color: '#000000',\n                },\n              },\n              data: xAxis,\n            },\n            yAxis: {\n              type: 'value',\n              axisLine: {\n                show: false,\n              },\n              axisTick: {\n                show: false,\n              },\n              axisLabel: {\n                textStyle: {\n                  color: '#7F8B9C',\n                },\n              },\n              splitLine: {\n                show: true,\n                lineStyle: {\n                  color: '#F5F7F9',\n                },\n              },\n            },\n            series: series,\n          };\n          this.spinShow = false;\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n          this.spinShow = false;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.one {\n  background: var(--prev-color-primary);\n}\n.two {\n  background: #00c050;\n}\n.three {\n  background: #ffab2b;\n}\n.four {\n  background: #b37feb;\n}\n.up,\n.el-icon-caret-top {\n  color: #f5222d;\n  font-size: 12px;\n  opacity: 1 !important;\n}\n.iconfont {\n  font-size: 16px;\n  color: #fff;\n}\n.down,\n.el-icon-caret-bottom {\n  color: #39c15b;\n  font-size: 12px;\n}\n.curP {\n  cursor: pointer;\n}\n.header {\n  &-title {\n    font-size: 16px;\n    color: rgba(0, 0, 0, 0.85);\n  }\n  &-time {\n    font-size: 12px;\n    color: #000000;\n    opacity: 0.45;\n  }\n}\n.iconCrl {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 32px;\n  opacity: 0.7;\n  /*margin-left: 74px;*/\n}\n\n.lan {\n  background: var(--prev-color-primary);\n}\n\n.iconshangpinliulanliang {\n  color: #fff;\n}\n\n.infoBox {\n  width: 20%;\n}\n\n.info {\n  .sp1 {\n    color: #666;\n    font-size: 14px;\n    display: block;\n  }\n  .sp2 {\n    font-weight: 400;\n    font-size: 30px;\n    color: rgba(0, 0, 0, 0.85);\n    display: block;\n  }\n  .sp3 {\n    font-size: 12px;\n    font-weight: 400;\n    color: rgba(0, 0, 0, 0.45);\n    display: block;\n  }\n}\n.fwn {\n  flex-wrap: nowrap;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}