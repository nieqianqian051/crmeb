{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/utils/videoCloud.js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/utils/videoCloud.js","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["qiniu","Cos","axios","upload","ossUpload","sign","method","publicKey","privateKey","md5","contentType","date","bucketName","fileName","CryptoJS","require","CanonicalizedResource","concat","StringToSign","Signature","HmacSHA1","enc","Base64","stringify","videoUpload","config","result","type","cosUpload","evfile","res","data","uploading","ossHttp","obsHttp","us3Http","jdHttp","qiniuHttp","uploadMp4ToLocal","file","cos","getAuthorization","options","callback","TmpSecretId","credentials","tmpSecretId","TmpSecretKey","tmpSecretKey","XCosSecurityToken","sessionToken","ExpiredTime","expiredTime","fileObject","target","files","Key","name","pos","lastIndexOf","suffix","substring","filename","Date","getTime","Promise","resolve","reject","sliceUploadFile","Bucket","bucket","Region","region","Body","onProgress","progressData","err","msg","url","Location","ETag","cosHttp","videoIng","camSafeUrlEncode","str","encodeURIComponent","replace","xhr","XMLHttpRequest","open","setRequestHeader","onprogress","e","progress","Math","round","loaded","total","onload","test","status","getResponseHeader","statu","onerror","send","onreadystatechange","that","formData","FormData","append","accessid","policy","signature","host","fileUrl","defaults","withCredentials","post","then","catch","cdn","auth","secretKey","storageName","put","headers","Authorization","uptoken","token","domain","useCdnDomain","putExtra","fname","params","mimeType","observable","subscribe","next","size","error","errResult","complete","r","upload_url","console","log"],"sources":["/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/utils/videoCloud.js"],"sourcesContent":["// +----------------------------------------------------------------------\n// | CRMEB [ CRMEB赋能开发者，助力企业发展 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2016~2023 https://www.crmeb.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Licensed CRMEB并不是自由软件，未经许可不能去掉CRMEB相关版权\n// +----------------------------------------------------------------------\n// | Author: CRMEB Team <admin@crmeb.com>\n// +----------------------------------------------------------------------\n\nimport * as qiniu from 'qiniu-js';\nimport Cos from 'cos-js-sdk-v5';\nimport axios from 'axios';\nimport { upload, ossUpload } from '@/api/upload';\n\nconst sign = (method, publicKey, privateKey, md5, contentType, date, bucketName, fileName) => {\n  const CryptoJS = require('crypto-js'); // 这里使用了crypto-js加密算法库，安装方法会在后面说明\n  const CanonicalizedResource = `/${bucketName}/${fileName}`;\n  const StringToSign = method + '\\n' + md5 + '\\n' + contentType + '\\n' + date + '\\n' + CanonicalizedResource; // 此处的md5以及date是可选的，contentType对于PUT请求是可选的，对于POST请求则是必须的\n  let Signature = CryptoJS.HmacSHA1(StringToSign, privateKey);\n  Signature = CryptoJS.enc.Base64.stringify(Signature);\n  return 'UCloud' + ' ' + publicKey + ':' + Signature;\n};\nexport default {\n  videoUpload(config) {\n    let result;\n    switch (config.type) {\n      case 'COS':\n        result = this.cosUpload(config.evfile, config.res.data, config.uploading);\n        break;\n      case 'OSS':\n        result = this.ossHttp(config.evfile, config.res, config.uploading);\n        break;\n      case 'OBS':\n        result = this.obsHttp(config.evfile, config.res, config.uploading);\n        break;\n      case 'US3':\n        result = this.us3Http(config.evfile, config.res, config.uploading);\n        break;\n      case 'JDOSS':\n        result = this.jdHttp(config.evfile, config.res, config.uploading);\n        break;\n      case 'CTOSS':\n        result = this.obsHttp(config.evfile, config.res, config.uploading);\n        break;\n      case 'QINIU':\n        result = this.qiniuHttp(config.evfile, config.res, config.uploading);\n        break;\n      case 'local':\n        result = this.uploadMp4ToLocal(config.evfile, config.res, config.uploading);\n        break;\n    }\n    return result;\n    // if (config.type === 'COS') {\n    //   return this.cosUpload(config.evfile, config.res.data, config.uploading);\n    // } else if (config.type === 'OSS') {\n    //   return this.ossHttp(config.evfile, config.res, config.uploading);\n    // } else {\n    //   return this.qiniuHttp(config.evfile, config.res, config.uploading);\n    // }\n  },\n  cosUpload(file, config, uploading) {\n    let cos = new Cos({\n      getAuthorization(options, callback) {\n        callback({\n          TmpSecretId: config.credentials.tmpSecretId, // 临时密钥的 tmpSecretId\n          TmpSecretKey: config.credentials.tmpSecretKey, // 临时密钥的 tmpSecretKey\n          XCosSecurityToken: config.credentials.sessionToken, // 临时密钥的 sessionToken\n          ExpiredTime: config.expiredTime, // 临时密钥失效时间戳，是申请临时密钥时，时间戳加 durationSeconds\n        });\n      },\n    });\n    let fileObject = file.target.files[0];\n    let Key = fileObject.name;\n    let pos = Key.lastIndexOf('.');\n    let suffix = '';\n    if (pos !== -1) {\n      suffix = Key.substring(pos);\n    }\n    let filename = new Date().getTime() + suffix;\n    return new Promise((resolve, reject) => {\n      cos.sliceUploadFile(\n        {\n          Bucket: config.bucket /* 必须 */,\n          Region: config.region /* 必须 */,\n          Key: filename /* 必须 */,\n          Body: fileObject, // 上传文件对象\n          onProgress: function (progressData) {\n            uploading(progressData);\n          },\n        },\n        function (err, data) {\n          if (err) {\n            reject({ msg: err });\n          } else {\n            resolve({ url: 'http://' + data.Location, ETag: data.ETag });\n          }\n        },\n      );\n    });\n  },\n  cosHttp(evfile, res, videoIng) {\n    // 腾讯云\n    // 对更多字符编码的 url encode 格式\n    let camSafeUrlEncode = function (str) {\n      return encodeURIComponent(str)\n        .replace(/!/g, '%21')\n        .replace(/'/g, '%27')\n        .replace(/\\(/g, '%28')\n        .replace(/\\)/g, '%29')\n        .replace(/\\*/g, '%2A');\n    };\n    let fileObject = evfile.target.files[0];\n    let Key = fileObject.name;\n    let pos = Key.lastIndexOf('.');\n    let suffix = '';\n    if (pos !== -1) {\n      suffix = Key.substring(pos);\n    }\n    let filename = new Date().getTime() + suffix;\n    let data = res.data;\n    let XCosSecurityToken = data.credentials.sessionToken;\n    let url = data.url + camSafeUrlEncode(filename).replace(/%2F/g, '/');\n    let xhr = new XMLHttpRequest();\n    xhr.open('PUT', url, true);\n    XCosSecurityToken && xhr.setRequestHeader('x-cos-security-token', XCosSecurityToken);\n    xhr.upload.onprogress = function (e) {\n      let progress = Math.round((e.loaded / e.total) * 10000) / 100;\n      videoIng(true, progress);\n    };\n    return new Promise((resolve, reject) => {\n      xhr.onload = function () {\n        if (/^2\\d\\d$/.test('' + xhr.status)) {\n          var ETag = xhr.getResponseHeader('etag');\n          videoIng(false, 0);\n          resolve({ url: url, ETag: ETag });\n        } else {\n          reject({ msg: '文件 ' + filename + ' 上传失败，状态码：' + xhr.statu });\n        }\n      };\n      xhr.onerror = function () {\n        reject({ msg: '文件 ' + filename + '上传失败，请检查是否没配置 CORS 跨域规' });\n      };\n      xhr.send(fileObject);\n      xhr.onreadystatechange = function () {};\n    });\n  },\n  ossHttp(evfile, res, videoIng) {\n    let that = this;\n    let fileObject = evfile.target.files[0];\n    let file = fileObject.name;\n    let pos = file.lastIndexOf('.');\n    let suffix = '';\n    if (pos !== -1) {\n      suffix = file.substring(pos);\n    }\n    let filename = new Date().getTime() + suffix;\n    let formData = new FormData();\n    let data = res.data;\n    // 注意formData里append添加的键的大小写\n    formData.append('key', filename); // 存储在oss的文件路径\n    formData.append('OSSAccessKeyId', data.accessid); // accessKeyId\n    formData.append('policy', data.policy); // policy\n    formData.append('Signature', data.signature); // 签名\n    // 如果是base64文件，那么直接把base64字符串转成blob对象进行上传就可以了\n    formData.append('file', fileObject);\n    formData.append('success_action_status', 200); // 成功后返回的操作码\n    let url = data.host;\n    let fileUrl = url + '/' + filename;\n    videoIng(true, 100);\n    return new Promise((resolve, reject) => {\n      axios.defaults.withCredentials = false;\n      axios\n        .post(url, formData)\n        .then(() => {\n          // that.progress = 0;\n          videoIng(false, 0);\n          resolve({ url: fileUrl });\n        })\n        .catch((res) => {\n          reject({ msg: res });\n        });\n    });\n  },\n  // qiniuHttp(evfile, res, videoIng) {\n  //   let uptoken = res.data.token;\n  //   let file = evfile.target.files[0]; // Blob 对象，上传的文件\n  //   let Key = file.name; // 上传后文件资源名以设置的 key 为主，如果 key 为 null 或者 undefined，则文件资源名会以 hash 值作为资源名。\n  //   let pos = Key.lastIndexOf('.');\n  //   let suffix = '';\n  //   if (pos !== -1) {\n  //     suffix = Key.substring(pos);\n  //   }\n  //   let filename = new Date().getTime() + suffix;\n  //   let fileUrl = res.data.domain + '/' + filename;\n  //   let config = {\n  //     useCdnDomain: true,\n  //   };\n  //   let putExtra = {\n  //     fname: '', // 文件原文件名\n  //     params: {}, // 用来放置自定义变量\n  //     mimeType: null, // 用来限制上传文件类型，为 null 时表示不对文件类型限制；限制类型放到数组里： [\"image/png\", \"image/jpeg\", \"image/gif\"]\n  //   };\n  //   let observable = qiniu.upload(file, filename, uptoken, putExtra, config);\n  //   return new Promise((resolve, reject) => {\n  //     observable.subscribe({\n  //       next: (result) => {\n  //         let progress = Math.round(result.total.loaded / result.total.size);\n  //         videoIng(true, progress);\n  //         // 主要用来展示进度\n  //       },\n  //       error: (errResult) => {\n  //         // 失败报错信息\n  //         reject({ msg: errResult });\n  //       },\n  //       complete: (result) => {\n  //         // 接收成功后返回的信息\n  //         videoIng(false, 0);\n  //         resolve({ url: fileUrl });\n  //       },\n  //     });\n  //   });\n  // },\n  obsHttp(file, res, videoIng) {\n    const fileObject = file.target.files[0];\n    const Key = fileObject.name;\n    const pos = Key.lastIndexOf('.');\n    let suffix = '';\n    if (pos !== -1) {\n      suffix = Key.substring(pos);\n    }\n    const filename = new Date().getTime() + suffix;\n    const formData = new FormData();\n    const data = res.data;\n    // 注意formData里append添加的键的大小写\n    formData.append('key', filename);\n    formData.append('AccessKeyId', data.accessid);\n    formData.append('policy', data.policy);\n    formData.append('signature', data.signature);\n    formData.append('file', fileObject);\n    formData.append('success_action_status', 200);\n    const url = data.host;\n    const fileUrl = url + '/' + filename;\n    videoIng(true, 100);\n    return new Promise((resolve, reject) => {\n      axios.defaults.withCredentials = false;\n      axios\n        .post(url, formData)\n        .then(() => {\n          videoIng(false, 0);\n          resolve({ url: data.cdn ? data.cdn + '/' + filename : fileUrl });\n        })\n        .catch((res) => {\n          reject({ msg: res });\n        });\n    });\n  },\n  us3Http(file, res, videoIng) {\n    const fileObject = file.target.files[0];\n    const Key = fileObject.name;\n    const pos = Key.lastIndexOf('.');\n    let suffix = '';\n    if (pos !== -1) {\n      suffix = Key.substring(pos);\n    }\n    const filename = new Date().getTime() + suffix;\n    const data = res.data;\n\n    const auth = sign('PUT', data.accessid, data.secretKey, '', fileObject.type, '', data.storageName, filename);\n    return new Promise((resolve, reject) => {\n      axios.defaults.withCredentials = false;\n      const url = `https://${data.storageName}.cn-bj.ufileos.com/${filename}`;\n      axios\n        .put(url, fileObject, {\n          headers: {\n            Authorization: auth,\n            'content-type': fileObject.type,\n          },\n        })\n        .then((res) => {\n          videoIng(false, 0);\n          resolve({ url: data.cdn ? data.cdn + '/' + filename : url });\n        })\n        .catch((res) => {\n          reject({ msg: res });\n        });\n    });\n  },\n  qiniuHttp(evfile, res, videoIng) {\n    const uptoken = res.data.token;\n    const file = evfile.target.files[0]; // Blob 对象，上传的文件\n    const Key = file.name; // 上传后文件资源名以设置的 key 为主，如果 key 为 null 或者 undefined，则文件资源名会以 hash 值作为资源名。\n    const pos = Key.lastIndexOf('.');\n    let suffix = '';\n    if (pos !== -1) {\n      suffix = Key.substring(pos);\n    }\n    const filename = new Date().getTime() + suffix;\n    const fileUrl = res.data.domain + '/' + filename;\n    const config = {\n      useCdnDomain: true,\n    };\n    const putExtra = {\n      fname: '', // 文件原文件名\n      params: {}, // 用来放置自定义变量\n      mimeType: null, // 用来限制上传文件类型，为 null 时表示不对文件类型限制；限制类型放到数组里： [\"image/png\", \"image/jpeg\", \"image/gif\"]\n    };\n    const observable = qiniu.upload(file, filename, uptoken, putExtra, config);\n    return new Promise((resolve, reject) => {\n      observable.subscribe({\n        next: (result) => {\n          const progress = Math.round(result.total.loaded / result.total.size);\n          videoIng(true, progress);\n          // 主要用来展示进度\n        },\n        error: (errResult) => {\n          // 失败报错信息\n          reject({ msg: errResult });\n        },\n        complete: (result) => {\n          // 接收成功后返回的信息\n          videoIng(false, 0);\n          resolve({ url: res.data.cdn ? res.data.cdn + '/' + filename : fileUrl });\n        },\n      });\n    });\n  },\n  // 京东云上传\n  jdHttp(evfile, r, videoIng) {\n    const fileObject = evfile.target.files[0]; // 获取的文件对象\n    const formData = new FormData();\n    formData.append('file', fileObject);\n    return new Promise((resolve, reject) => {\n      ossUpload(r.data.upload_url, formData)\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          videoIng(true, 100);\n          resolve(r.data);\n        });\n    });\n  },\n  // 本地上传\n  uploadMp4ToLocal(evfile, res, videoIng) {\n    const fileObject = evfile.target.files[0]; // 获取的文件对象\n    const formData = new FormData();\n    formData.append('file', fileObject);\n    videoIng(true, 100);\n    return upload(formData);\n  },\n};\n"],"mappings":"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","ignoreList":[]}]}