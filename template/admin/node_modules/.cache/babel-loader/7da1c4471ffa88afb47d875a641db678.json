{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/marketing/lottery/recordingList.vue?vue&type=template&id=75662a20&scoped=true","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/marketing/lottery/recordingList.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1746465020064},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CnZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7CiAgdmFyIF92bSA9IHRoaXMsCiAgICBfYyA9IF92bS5fc2VsZi5fYzsKICByZXR1cm4gX2MoJ2RpdicsIFtfYygnZWwtY2FyZCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiaXZ1LW10IiwKICAgIGF0dHJzOiB7CiAgICAgICJib3JkZXJlZCI6IGZhbHNlLAogICAgICAic2hhZG93IjogIm5ldmVyIiwKICAgICAgImJvZHktc3R5bGUiOiB7CiAgICAgICAgcGFkZGluZzogMAogICAgICB9CiAgICB9CiAgfSwgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogInBhZGRpbmctYWRkIgogIH0sIFtfYygnZWwtZm9ybScsIHsKICAgIHJlZjogInRhYmxlRnJvbSIsCiAgICBhdHRyczogewogICAgICAibW9kZWwiOiBfdm0udGFibGVGcm9tLAogICAgICAibGFiZWwtd2lkdGgiOiBfdm0ubGFiZWxXaWR0aCwKICAgICAgImxhYmVsLXBvc2l0aW9uIjogInJpZ2h0IiwKICAgICAgImlubGluZSI6ICIiCiAgICB9LAogICAgbmF0aXZlT246IHsKICAgICAgInN1Ym1pdCI6IGZ1bmN0aW9uIHN1Ym1pdCgkZXZlbnQpIHsKICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnZWwtZm9ybS1pdGVtJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIua0u+WKqOexu+Wei++8miIsCiAgICAgICJjbGVhcmFibGUiOiAiIgogICAgfQogIH0sIFtfYygnZWwtc2VsZWN0JywgewogICAgc3RhdGljQ2xhc3M6ICJmb3JtX2NvbnRlbnRfd2lkdGgiLAogICAgYXR0cnM6IHsKICAgICAgInR5cGUiOiAiYnV0dG9uIiwKICAgICAgImNsZWFyYWJsZSI6ICIiCiAgICB9LAogICAgb246IHsKICAgICAgImNoYW5nZSI6IF92bS5zZWxlY3RDaGFuZ2VGYWN0b3IKICAgIH0sCiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLnRhYmxlRnJvbS5mYWN0b3IsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0udGFibGVGcm9tLCAiZmFjdG9yIiwgJCR2KTsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogInRhYmxlRnJvbS5mYWN0b3IiCiAgICB9CiAgfSwgW19jKCdlbC1vcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAibGFiZWwiOiAi56ev5YiG5oq95Y+WIiwKICAgICAgInZhbHVlIjogMQogICAgfQogIH0pLCBfYygnZWwtb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIuiuouWNleaUr+S7mCIsCiAgICAgICJ2YWx1ZSI6IDMKICAgIH0KICB9KSwgX2MoJ2VsLW9wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLorqLljZXor4Tku7ciLAogICAgICAidmFsdWUiOiA0CiAgICB9CiAgfSldLCAxKV0sIDEpLCBfYygnZWwtZm9ybS1pdGVtJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIuaXtumXtOmAieaLqe+8miIKICAgIH0KICB9LCBbX2MoJ2VsLWRhdGUtcGlja2VyJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIndpZHRoIjogIjI1MHB4IgogICAgfSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGVhcmFibGUiOiAiIiwKICAgICAgInR5cGUiOiAiZGF0ZXJhbmdlIiwKICAgICAgImVkaXRhYmxlIjogZmFsc2UsCiAgICAgICJmb3JtYXQiOiAieXl5eS9NTS9kZCIsCiAgICAgICJ2YWx1ZS1mb3JtYXQiOiAieXl5eS9NTS9kZCIsCiAgICAgICJzdGFydC1wbGFjZWhvbGRlciI6ICLlvIDlp4vml6XmnJ8iLAogICAgICAiZW5kLXBsYWNlaG9sZGVyIjogIue7k+adn+aXpeacnyIsCiAgICAgICJwaWNrZXItb3B0aW9ucyI6IF92bS5waWNrZXJPcHRpb25zCiAgICB9LAogICAgb246IHsKICAgICAgImNoYW5nZSI6IF92bS5vbmNoYW5nZVRpbWUKICAgIH0sCiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLnRpbWVWYWwsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0udGltZVZhbCA9ICQkdjsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogInRpbWVWYWwiCiAgICB9CiAgfSldLCAxKSwgX2MoJ2VsLWZvcm0taXRlbScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLlpZblk4HnsbvlnovvvJoiCiAgICB9CiAgfSwgW19jKCdlbC1zZWxlY3QnLCB7CiAgICBzdGF0aWNDbGFzczogImZvcm1fY29udGVudF93aWR0aCIsCiAgICBhdHRyczogewogICAgICAidHlwZSI6ICJidXR0b24iLAogICAgICAiY2xlYXJhYmxlIjogIiIKICAgIH0sCiAgICBvbjogewogICAgICAiY2hhbmdlIjogX3ZtLnNlbGVjdFR5cGUKICAgIH0sCiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLnRhYmxlRnJvbS50eXBlLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLiRzZXQoX3ZtLnRhYmxlRnJvbSwgInR5cGUiLCAkJHYpOwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAidGFibGVGcm9tLnR5cGUiCiAgICB9CiAgfSwgX3ZtLl9sKF92bS50eXBlTGlzdCwgZnVuY3Rpb24gKGl0ZW0sIGkpIHsKICAgIHJldHVybiBfYygnZWwtb3B0aW9uJywgewogICAgICBrZXk6IGksCiAgICAgIGF0dHJzOiB7CiAgICAgICAgImxhYmVsIjogaXRlbS50ZXh0LAogICAgICAgICJ2YWx1ZSI6IGl0ZW0udmFsCiAgICAgIH0KICAgIH0pOwogIH0pLCAxKV0sIDEpLCBfYygnZWwtZm9ybS1pdGVtJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIuaQnOe0oueUqOaIt++8miIsCiAgICAgICJsYWJlbC1mb3IiOiAic3RvcmVfbmFtZSIKICAgIH0KICB9LCBbX2MoJ2VsLWlucHV0JywgewogICAgc3RhdGljQ2xhc3M6ICJmb3JtX2NvbnRlbnRfd2lkdGgiLAogICAgYXR0cnM6IHsKICAgICAgImNsZWFyYWJsZSI6ICIiLAogICAgICAicGxhY2Vob2xkZXIiOiAi6K+36L6T5YWl55So5oi35L+h5oGvIgogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0udGFibGVGcm9tLmtleXdvcmQsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0udGFibGVGcm9tLCAia2V5d29yZCIsICQkdik7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJ0YWJsZUZyb20ua2V5d29yZCIKICAgIH0KICB9KV0sIDEpLCBfYygnZWwtZm9ybS1pdGVtJywgW19jKCdlbC1idXR0b24nLCB7CiAgICBhdHRyczogewogICAgICAidHlwZSI6ICJwcmltYXJ5IgogICAgfSwKICAgIG9uOiB7CiAgICAgICJjbGljayI6IF92bS51c2VyU2VhcmNocwogICAgfQogIH0sIFtfdm0uX3YoIuafpeivoiIpXSldLCAxKV0sIDEpXSwgMSldKSwgX2MoJ2VsLWNhcmQnLCB7CiAgICBzdGF0aWNDbGFzczogIml2dS1tdCBtdDE2IiwKICAgIGF0dHJzOiB7CiAgICAgICJib3JkZXJlZCI6IGZhbHNlLAogICAgICAic2hhZG93IjogIm5ldmVyIgogICAgfQogIH0sIFtfYygnZWwtdGFibGUnLCB7CiAgICBkaXJlY3RpdmVzOiBbewogICAgICBuYW1lOiAibG9hZGluZyIsCiAgICAgIHJhd05hbWU6ICJ2LWxvYWRpbmciLAogICAgICB2YWx1ZTogX3ZtLmxvYWRpbmcsCiAgICAgIGV4cHJlc3Npb246ICJsb2FkaW5nIgogICAgfV0sCiAgICBhdHRyczogewogICAgICAiZGF0YSI6IF92bS50YWJsZUxpc3QsCiAgICAgICJoaWdobGlnaHQtY3VycmVudC1yb3ciOiAiIiwKICAgICAgIm5vLXVzZXJGcm9tLXRleHQiOiAi5pqC5peg5pWw5o2uIiwKICAgICAgIm5vLWZpbHRlcmVkLXVzZXJGcm9tLXRleHQiOiAi5pqC5peg562b6YCJ57uT5p6cIgogICAgfQogIH0sIFtfYygnZWwtdGFibGUtY29sdW1uJywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIklEIiwKICAgICAgIndpZHRoIjogIjgwIgogICAgfSwKICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAga2V5OiAiZGVmYXVsdCIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbihzY29wZSkgewogICAgICAgIHJldHVybiBbX2MoJ2RpdicsIFtfdm0uX3YoX3ZtLl9zKHNjb3BlLnJvdy5pZCkpXSldOwogICAgICB9CiAgICB9XSkKICB9KSwgX2MoJ2VsLXRhYmxlLWNvbHVtbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLnlKjmiLfkv6Hmga8iLAogICAgICAibWluLXdpZHRoIjogIjkwIgogICAgfSwKICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAga2V5OiAiZGVmYXVsdCIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbihzY29wZSkgewogICAgICAgIHJldHVybiBbX2MoJ3NwYW4nLCBbX3ZtLl92KF92bS5fcyhzY29wZS5yb3cudXNlci5uaWNrbmFtZSkgKyAiICIpXSldOwogICAgICB9CiAgICB9XSkKICB9KSwgX2MoJ2VsLXRhYmxlLWNvbHVtbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLlpZblk4Hkv6Hmga8iLAogICAgICAibWluLXdpZHRoIjogIjEzMCIKICAgIH0sCiAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgIGtleTogImRlZmF1bHQiLAogICAgICBmbjogZnVuY3Rpb24gZm4oc2NvcGUpIHsKICAgICAgICByZXR1cm4gW19jKCdkaXYnLCB7CiAgICAgICAgICBzdGF0aWNDbGFzczogInByaXplIgogICAgICAgIH0sIFtfYygnaW1nJywgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgInNyYyI6IHNjb3BlLnJvdy5wcml6ZS5pbWFnZSwKICAgICAgICAgICAgImFsdCI6ICIiCiAgICAgICAgICB9CiAgICAgICAgfSksIF9jKCdzcGFuJywgW192bS5fdihfdm0uX3Moc2NvcGUucm93LnByaXplLm5hbWUpKV0pXSldOwogICAgICB9CiAgICB9XSkKICB9KSwgX2MoJ2VsLXRhYmxlLWNvbHVtbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLmir3lpZbml7bpl7QiLAogICAgICAibWluLXdpZHRoIjogIjEwMCIKICAgIH0sCiAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgIGtleTogImRlZmF1bHQiLAogICAgICBmbjogZnVuY3Rpb24gZm4oc2NvcGUpIHsKICAgICAgICByZXR1cm4gW19jKCdkaXYnLCBbX3ZtLl92KF92bS5fcyhzY29wZS5yb3cuYWRkX3RpbWUpKV0pXTsKICAgICAgfQogICAgfV0pCiAgfSksIF9jKCdlbC10YWJsZS1jb2x1bW4nLCB7CiAgICBhdHRyczogewogICAgICAibGFiZWwiOiAi5pS26LSn5L+h5oGvIiwKICAgICAgIm1pbi13aWR0aCI6ICIxMDAiCiAgICB9LAogICAgc2NvcGVkU2xvdHM6IF92bS5fdShbewogICAgICBrZXk6ICJkZWZhdWx0IiwKICAgICAgZm46IGZ1bmN0aW9uIGZuKHNjb3BlKSB7CiAgICAgICAgcmV0dXJuIFtzY29wZS5yb3cucmVjZWl2ZV9pbmZvLm5hbWUgPyBfYygnZGl2JywgW19jKCdkaXYnLCBbX3ZtLl92KCLlp5PlkI3vvJoiICsgX3ZtLl9zKHNjb3BlLnJvdy5yZWNlaXZlX2luZm8ubmFtZSkpXSksIF9jKCdkaXYnLCBbX3ZtLl92KCLnlLXor53vvJoiICsgX3ZtLl9zKHNjb3BlLnJvdy5yZWNlaXZlX2luZm8ucGhvbmUpKV0pLCBfYygnZGl2JywgW192bS5fdigi5Zyw5Z2A77yaIiArIF92bS5fcyhzY29wZS5yb3cucmVjZWl2ZV9pbmZvLmFkZHJlc3MpKV0pLCBzY29wZS5yb3cucmVjZWl2ZV9pbmZvLm1hcmsgPyBfYygnZGl2JywgW192bS5fdigi5aSH5rOo77yaIiArIF92bS5fcyhzY29wZS5yb3cucmVjZWl2ZV9pbmZvLm1hcmspKV0pIDogX3ZtLl9lKCldKSA6IF92bS5fZSgpXTsKICAgICAgfQogICAgfV0pCiAgfSksIF9jKCdlbC10YWJsZS1jb2x1bW4nLCB7CiAgICBhdHRyczogewogICAgICAibGFiZWwiOiAi5aSH5rOoIiwKICAgICAgIm1pbi13aWR0aCI6ICIxMDAiCiAgICB9LAogICAgc2NvcGVkU2xvdHM6IF92bS5fdShbewogICAgICBrZXk6ICJkZWZhdWx0IiwKICAgICAgZm46IGZ1bmN0aW9uIGZuKHNjb3BlKSB7CiAgICAgICAgcmV0dXJuIFtfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKHNjb3BlLnJvdy5kZWxpdmVyX2luZm8ubWFyaykpXSldOwogICAgICB9CiAgICB9XSkKICB9KSwgX2MoJ2VsLXRhYmxlLWNvbHVtbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLmk43kvZwiLAogICAgICAiZml4ZWQiOiAicmlnaHQiLAogICAgICAid2lkdGgiOiAiMTIwIgogICAgfSwKICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAga2V5OiAiZGVmYXVsdCIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbihzY29wZSkgewogICAgICAgIHJldHVybiBbc2NvcGUucm93LnR5cGUgPT0gNiAmJiBzY29wZS5yb3cuaXNfZGVsaXZlciA9PT0gMCA/IF9jKCdhJywgewogICAgICAgICAgb246IHsKICAgICAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICAgICAgcmV0dXJuIF92bS5kZWxpdmVyKHNjb3BlLnJvdywgMSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBbX3ZtLl92KCLlj5HotKciKV0pIDogc2NvcGUucm93LnR5cGUgPT0gNiAmJiBzY29wZS5yb3cuaXNfZGVsaXZlciA9PT0gMSA/IF9jKCdhJywgewogICAgICAgICAgb246IHsKICAgICAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICAgICAgcmV0dXJuIF92bS5pc0RlbGl2ZXIoc2NvcGUucm93KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIFtfdm0uX3YoIumFjemAgeS/oeaBryIpXSkgOiBfdm0uX2UoKSwgc2NvcGUucm93LnR5cGUgPT0gNiA/IF9jKCdlbC1kaXZpZGVyJywgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgImRpcmVjdGlvbiI6ICJ2ZXJ0aWNhbCIKICAgICAgICAgIH0KICAgICAgICB9KSA6IF92bS5fZSgpLCBfYygnYScsIHsKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgICAgIHJldHVybiBfdm0uZGVsaXZlcihzY29wZS5yb3csIDIpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgW192bS5fdigi5aSH5rOoIildKV07CiAgICAgIH0KICAgIH1dKQogIH0pXSwgMSksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImFjZWEtcm93IHJvdy1yaWdodCBwYWdlIgogIH0sIFtfdm0udG90YWwgPyBfYygncGFnaW5hdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ0b3RhbCI6IF92bS50b3RhbCwKICAgICAgInBhZ2UiOiBfdm0udGFibGVGcm9tLnBhZ2UsCiAgICAgICJsaW1pdCI6IF92bS50YWJsZUZyb20ubGltaXQKICAgIH0sCiAgICBvbjogewogICAgICAidXBkYXRlOnBhZ2UiOiBmdW5jdGlvbiB1cGRhdGVQYWdlKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0uJHNldChfdm0udGFibGVGcm9tLCAicGFnZSIsICRldmVudCk7CiAgICAgIH0sCiAgICAgICJ1cGRhdGU6bGltaXQiOiBmdW5jdGlvbiB1cGRhdGVMaW1pdCgkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLiRzZXQoX3ZtLnRhYmxlRnJvbSwgImxpbWl0IiwgJGV2ZW50KTsKICAgICAgfSwKICAgICAgInBhZ2luYXRpb24iOiBfdm0uZ2V0TGlzdAogICAgfQogIH0pIDogX3ZtLl9lKCldLCAxKV0sIDEpLCBfYygnZWwtZGlhbG9nJywgewogICAgYXR0cnM6IHsKICAgICAgInZpc2libGUiOiBfdm0uc2hpcE1vZGVsLAogICAgICAid2lkdGgiOiAiNTQwcHgiLAogICAgICAidGl0bGUiOiAhX3ZtLm1vZGVsVGl0bGUgPyBfdm0ubW9kZWxUeXBlID09PSAxID8gJ+WPkei0pycgOiAn5aSH5rOoJyA6IF92bS5tb2RlbFRpdGxlLAogICAgICAiY2xvc2Utb24tY2xpY2stbW9kYWwiOiBmYWxzZQogICAgfSwKICAgIG9uOiB7CiAgICAgICJ1cGRhdGU6dmlzaWJsZSI6IGZ1bmN0aW9uIHVwZGF0ZVZpc2libGUoJGV2ZW50KSB7CiAgICAgICAgX3ZtLnNoaXBNb2RlbCA9ICRldmVudDsKICAgICAgfQogICAgfQogIH0sIFtfYygnZWwtZm9ybScsIHsKICAgIHJlZjogX3ZtLm1vZGVsVHlwZSA9PT0gMSA/ICdzaGlwRm9ybScgOiAnbWFya0Zvcm0nLAogICAgYXR0cnM6IHsKICAgICAgIm1vZGVsIjogX3ZtLm1vZGVsVHlwZSA9PT0gMSA/IF92bS5zaGlwRm9ybSA6IF92bS5tYXJrRm9ybSwKICAgICAgInJ1bGVzIjogX3ZtLm1vZGVsVHlwZSA9PT0gMSA/IF92bS5ydWxlU2hpcCA6IF92bS5ydWxlTWFyaywKICAgICAgImxhYmVsLXdpZHRoIjogIjkwcHgiCiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5zaGlwTW9kZWwsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uc2hpcE1vZGVsID0gJCR2OwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAic2hpcE1vZGVsIgogICAgfQogIH0sIFtfdm0ubW9kZWxUeXBlID09PSAxID8gX2MoJ2VsLWZvcm0taXRlbScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICLlv6vpgJLlhazlj7jvvJoiLAogICAgICAicHJvcCI6ICJkZWxpdmVyX25hbWUiCiAgICB9CiAgfSwgW19jKCdlbC1zZWxlY3QnLCB7CiAgICBzdGF0aWNDbGFzczogIncxMDAiLAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5zaGlwRm9ybS5kZWxpdmVyX25hbWUsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0uc2hpcEZvcm0sICJkZWxpdmVyX25hbWUiLCAkJHYpOwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAic2hpcEZvcm0uZGVsaXZlcl9uYW1lIgogICAgfQogIH0sIF92bS5fbChfdm0ubG9jYXRpb25MaXN0LCBmdW5jdGlvbiAoaXRlbSkgewogICAgcmV0dXJuIF9jKCdlbC1vcHRpb24nLCB7CiAgICAgIGtleTogaXRlbS5pZCwKICAgICAgYXR0cnM6IHsKICAgICAgICAidmFsdWUiOiBpdGVtLnZhbHVlLAogICAgICAgICJsYWJlbCI6IGl0ZW0udmFsdWUKICAgICAgfQogICAgfSk7CiAgfSksIDEpXSwgMSkgOiBfdm0uX2UoKSwgX3ZtLm1vZGVsVHlwZSA9PT0gMSA/IF9jKCdlbC1mb3JtLWl0ZW0nLCB7CiAgICBhdHRyczogewogICAgICAibGFiZWwiOiAi5b+r6YCS5Y2V5Y+377yaIiwKICAgICAgInByb3AiOiAiZGVsaXZlcl9udW1iZXIiCiAgICB9CiAgfSwgW19jKCdlbC1pbnB1dCcsIHsKICAgIHN0YXRpY0NsYXNzOiAidzEwMCIsCiAgICBhdHRyczogewogICAgICAicGxhY2Vob2xkZXIiOiAi6K+36L6T5YWl5b+r6YCS5Y2V5Y+3IgogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uc2hpcEZvcm0uZGVsaXZlcl9udW1iZXIsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0uc2hpcEZvcm0sICJkZWxpdmVyX251bWJlciIsICQkdik7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJzaGlwRm9ybS5kZWxpdmVyX251bWJlciIKICAgIH0KICB9KSwgX3ZtLnNoaXBGb3JtLmRlbGl2ZXJfbmFtZSA9PSAn6aG65Liw6YCf6L+QJyA/IF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogInRpcHMtaW5mbyIKICB9LCBbX2MoJ3AnLCBbX3ZtLl92KCLpobrkuLDor7fovpPlhaXljZXlj7cgOuaUtuS7tuS6uuaIluWvhOS7tuS6uuaJi+acuuWPt+WQjuWbm+S9jSIpXSksIF9jKCdwJywgW192bS5fdigi5L6L5aaC77yaU0YwMDAwMDAwMDAwMDA6Mzk0MSIpXSldKSA6IF92bS5fZSgpXSwgMSkgOiBfdm0uX2UoKSwgX3ZtLm1vZGVsVHlwZSA9PT0gMiA/IF9jKCdlbC1mb3JtLWl0ZW0nLCB7CiAgICBhdHRyczogewogICAgICAibGFiZWwiOiAi5aSH5rOo77yaIgogICAgfQogIH0sIFtfYygnZWwtaW5wdXQnLCB7CiAgICBzdGF0aWNDbGFzczogIncxMDAiLAogICAgYXR0cnM6IHsKICAgICAgInBsYWNlaG9sZGVyIjogIuivt+i+k+WFpeWkh+azqCIKICAgIH0sCiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLm1hcmtGb3JtLm1hcmssCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0ubWFya0Zvcm0sICJtYXJrIiwgJCR2KTsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogIm1hcmtGb3JtLm1hcmsiCiAgICB9CiAgfSldLCAxKSA6IF92bS5fZSgpLCBfYygnZWwtZm9ybS1pdGVtJywgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImFjZWEtcm93IHJvdy1yaWdodCIKICB9LCBbX2MoJ2VsLWJ1dHRvbicsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0uY2FuY2VsKCdmb3JtVmFsaWRhdGUnKTsKICAgICAgfQogICAgfQogIH0sIFtfdm0uX3YoIuWFs+mXrSIpXSksIF9jKCdlbC1idXR0b24nLCB7CiAgICBhdHRyczogewogICAgICAidHlwZSI6ICJwcmltYXJ5IgogICAgfSwKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0ub2soX3ZtLm1vZGVsVHlwZSA9PT0gMSA/ICdzaGlwRm9ybScgOiAnbWFya0Zvcm0nKTsKICAgICAgfQogICAgfQogIH0sIFtfdm0uX3YoIuaPkOS6pCIpXSldLCAxKV0pXSwgMSldLCAxKV0sIDEpOwp9Owp2YXIgc3RhdGljUmVuZGVyRm5zID0gW107CmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH07"},null]}