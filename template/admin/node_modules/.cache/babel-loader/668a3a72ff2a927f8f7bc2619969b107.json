{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/utils/upload.js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/utils/upload.js","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL25pZXFpYW5xaWFuL0Rvd25sb2Fkcy94aW54aWFuZ211L0NSTUVCL3RlbXBsYXRlL2FkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL25pZXFpYW5xaWFuL0Rvd25sb2Fkcy94aW54aWFuZ211L0NSTUVCL3RlbXBsYXRlL2FkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBtZDUgZnJvbSAnanMtbWQ1JzsgLy/lvJXlhaVNRDXliqDlr4YKaW1wb3J0IHsgdXBsb2FkIH0gZnJvbSAnQC9hcGkvdXBsb2FkLmpzJzsgLy8g6L+Z6YeM5oyH5YmN56uv6LCD55So5o6l5Y+j55qEYXBp5pa55rOVCmV4cG9ydCB2YXIgdXBsb2FkQnlQaWVjZXMgPSBmdW5jdGlvbiB1cGxvYWRCeVBpZWNlcyhfcmVmKSB7CiAgdmFyIGZpbGUgPSBfcmVmLmZpbGUsCiAgICBfcmVmJHBpZWNlU2l6ZSA9IF9yZWYucGllY2VTaXplLAogICAgcGllY2VTaXplID0gX3JlZiRwaWVjZVNpemUgPT09IHZvaWQgMCA/IDIgOiBfcmVmJHBpZWNlU2l6ZSwKICAgIHN1Y2Nlc3MgPSBfcmVmLnN1Y2Nlc3MsCiAgICBlcnJvciA9IF9yZWYuZXJyb3IsCiAgICB1cGxvYWRpbmcgPSBfcmVmLnVwbG9hZGluZzsKICAvLyDlpoLmnpzmlofku7bkvKDlhaXkuLrnqbrnm7TmjqUgcmV0dXJuIOi/lOWbngogIGlmICghZmlsZSkgcmV0dXJuOwogIHZhciBmaWxlTUQ1ID0gJyc7IC8vIOaAu+aWh+S7tuWIl+ihqAogIHZhciBjaHVua1NpemUgPSBwaWVjZVNpemUgKiAxMDI0ICogMTAyNDsgLy8gNU1C5LiA54mHCiAgdmFyIGNodW5rQ291bnQgPSBNYXRoLmNlaWwoZmlsZS5zaXplIC8gY2h1bmtTaXplKTsgLy8g5oC754mH5pWwCiAgLy8g6I635Y+WbWQ1CiAgdmFyIHJlYWRGaWxlTUQ1ID0gZnVuY3Rpb24gcmVhZEZpbGVNRDUoKSB7CiAgICAvLyDor7vlj5bop4bpopHmlofku7bnmoRtZDUKICAgIHZhciBmaWxlUmVkZXJJbnN0YW5jZSA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICBmaWxlUmVkZXJJbnN0YW5jZS5yZWFkQXNCaW5hcnlTdHJpbmcoZmlsZSk7CiAgICBmaWxlUmVkZXJJbnN0YW5jZS5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKGUpIHsKICAgICAgdmFyIGZpbGVCb2xiID0gZS50YXJnZXQucmVzdWx0OwogICAgICBmaWxlTUQ1ID0gbWQ1KGZpbGVCb2xiKTsKICAgICAgcmVhZENodW5rTUQ1KCk7CiAgICB9KTsKICB9OwogIHZhciBnZXRDaHVua0luZm8gPSBmdW5jdGlvbiBnZXRDaHVua0luZm8oZmlsZSwgY3VycmVudENodW5rLCBjaHVua1NpemUpIHsKICAgIHZhciBzdGFydCA9IGN1cnJlbnRDaHVuayAqIGNodW5rU2l6ZTsKICAgIHZhciBlbmQgPSBNYXRoLm1pbihmaWxlLnNpemUsIHN0YXJ0ICsgY2h1bmtTaXplKTsKICAgIHZhciBjaHVuayA9IGZpbGUuc2xpY2Uoc3RhcnQsIGVuZCk7CiAgICByZXR1cm4gewogICAgICBzdGFydDogc3RhcnQsCiAgICAgIGVuZDogZW5kLAogICAgICBjaHVuazogY2h1bmsKICAgIH07CiAgfTsKICAvLyDpkojlr7nmr4/kuKrmlofku7bov5vooYxjaHVua+WkhOeQhgogIHZhciByZWFkQ2h1bmtNRDUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgaSwgX2dldENodW5rSW5mbywgY2h1bms7CiAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGkgPSAwOwogICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICBpZiAoIShpIDwgY2h1bmtDb3VudCkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBfZ2V0Q2h1bmtJbmZvID0gZ2V0Q2h1bmtJbmZvKGZpbGUsIGksIGNodW5rU2l6ZSksIGNodW5rID0gX2dldENodW5rSW5mby5jaHVuazsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiB1cGxvYWRDaHVuayh7CiAgICAgICAgICAgICAgY2h1bms6IGNodW5rLAogICAgICAgICAgICAgIGN1cnJlbnRDaHVuazogaSwKICAgICAgICAgICAgICBjaHVua0NvdW50OiBjaHVua0NvdW50CiAgICAgICAgICAgIH0pOwogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBpKys7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKTsKICAgIHJldHVybiBmdW5jdGlvbiByZWFkQ2h1bmtNRDUoKSB7CiAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCk7CiAgdmFyIHVwbG9hZENodW5rID0gZnVuY3Rpb24gdXBsb2FkQ2h1bmsoY2h1bmtJbmZvKSB7CiAgICAvLyBwcm9ncmVzc0Z1bigpCiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmVyLCByZWplY3QpIHsKICAgICAgdmFyIGNvbmZpZyA9IHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ211bHRpcGFydC9mb3JtLWRhdGEnCiAgICAgICAgfQogICAgICB9OwogICAgICAvLyDliJvlu7pmb3JtRGF0YeWvueixoe+8jOS4i+mdouaYr+e7k+WQiOS4jeWQjOmhueebrue7meWQjuerr+S8oOWFpeeahOWvueixoeOAggogICAgICB2YXIgZmV0Y2hGb3JtID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIGZldGNoRm9ybS5hcHBlbmQoJ2NodW5rTnVtYmVyJywgY2h1bmtJbmZvLmN1cnJlbnRDaHVuayArIDEpOyAvLyDnrKzlh6DniYcKICAgICAgZmV0Y2hGb3JtLmFwcGVuZCgnY2h1bmtTaXplJywgY2h1bmtTaXplKTsgLy8g5YiG54mH5aSn5bCP55qE6ZmQ5Yi2ICDkvovlpoLpmZDliLYgNU0KICAgICAgZmV0Y2hGb3JtLmFwcGVuZCgnY3VycmVudENodW5rU2l6ZScsIGNodW5rSW5mby5jaHVuay5zaXplKTsgLy8g5q+P5LiA54mH55qE5aSn5bCPCiAgICAgIGZldGNoRm9ybS5hcHBlbmQoJ2ZpbGUnLCBjaHVua0luZm8uY2h1bmspOyAvL+avj+S4gOeJh+eahOaWh+S7tgogICAgICBmZXRjaEZvcm0uYXBwZW5kKCdmaWxlbmFtZScsIGZpbGUubmFtZSk7IC8vIOaWh+S7tuWQjQogICAgICBmZXRjaEZvcm0uYXBwZW5kKCd0b3RhbENodW5rcycsIGNodW5rSW5mby5jaHVua0NvdW50KTsgLy/mgLvniYfmlbAKICAgICAgZmV0Y2hGb3JtLmFwcGVuZCgnbWQ1JywgZmlsZU1ENSk7CiAgICAgIHVwbG9hZChmZXRjaEZvcm0sIGNvbmZpZykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT0gMSkgewogICAgICAgICAgLy8gLy8g57uT5ZCI5LiN5ZCM6aG555uuIOWwhuaIkOWKn+eahOS/oeaBr+i/lOWbnuWHuuWOuwogICAgICAgICAgLy8g5LiL6Z2i5aaC5p6c5Zyo6aG555uu5Lit5rKh5pyJ55So5Yiw5Y+v5Lul5LiN55So5omT5byA5rOo6YeKCiAgICAgICAgICB1cGxvYWRpbmcoY2h1bmtJbmZvLmN1cnJlbnRDaHVuayArIDEsIGNodW5rSW5mby5jaHVua0NvdW50KTsKICAgICAgICAgIHJlc29sdmVyKHRydWUpOwogICAgICAgIH0gZWxzZSBpZiAocmVzLmRhdGEuY29kZSA9PSAyKSB7CiAgICAgICAgICBpZiAoY2h1bmtJbmZvLmN1cnJlbnRDaHVuayA8IGNodW5rSW5mby5jaHVua0NvdW50IC0gMSkge30gZWxzZSB7CiAgICAgICAgICAgIC8vIOW9k+aAu+aVsOWkp+S6juetieS6juWIhueJh+S4quaVsOeahOaXtuWAmQogICAgICAgICAgICBpZiAoY2h1bmtJbmZvLmN1cnJlbnRDaHVuayArIDEgPT0gY2h1bmtJbmZvLmNodW5rQ291bnQpIHsKICAgICAgICAgICAgICBzdWNjZXNzKHJlcy5kYXRhKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBlcnJvciAmJiBlcnJvcihlKTsKICAgICAgfSk7CiAgICB9KTsKICB9OwogIHJlYWRGaWxlTUQ1KCk7IC8vIOW8gOWni+aJp+ihjOS7o+eggQp9Ow=="},{"version":3,"names":["md5","upload","uploadByPieces","_ref","file","_ref$pieceSize","pieceSize","success","error","uploading","fileMD5","chunkSize","chunkCount","Math","ceil","size","readFileMD5","fileRederInstance","FileReader","readAsBinaryString","addEventListener","e","fileBolb","target","result","readChunkMD5","getChunkInfo","currentChunk","start","end","min","chunk","slice","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","i","_getChunkInfo","wrap","_callee$","_context","prev","next","uploadChunk","stop","apply","arguments","chunkInfo","Promise","resolver","reject","config","headers","fetchForm","FormData","append","name","then","res","data","code","catch"],"sources":["/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/utils/upload.js"],"sourcesContent":["import md5 from 'js-md5'; //引入MD5加密\nimport { upload } from '@/api/upload.js'; // 这里指前端调用接口的api方法\nexport const uploadByPieces = ({ file, pieceSize = 2, success, error, uploading }) => {\n  // 如果文件传入为空直接 return 返回\n  if (!file) return;\n  let fileMD5 = ''; // 总文件列表\n  const chunkSize = pieceSize * 1024 * 1024; // 5MB一片\n  const chunkCount = Math.ceil(file.size / chunkSize); // 总片数\n  // 获取md5\n  const readFileMD5 = () => {\n    // 读取视频文件的md5\n    let fileRederInstance = new FileReader();\n    fileRederInstance.readAsBinaryString(file);\n    fileRederInstance.addEventListener('load', (e) => {\n      let fileBolb = e.target.result;\n      fileMD5 = md5(fileBolb);\n      readChunkMD5();\n    });\n  };\n  const getChunkInfo = (file, currentChunk, chunkSize) => {\n    let start = currentChunk * chunkSize;\n    let end = Math.min(file.size, start + chunkSize);\n    let chunk = file.slice(start, end);\n    return { start, end, chunk };\n  };\n  // 针对每个文件进行chunk处理\n  const readChunkMD5 = async () => {\n    // 针对单个文件进行chunk上传\n    for (var i = 0; i < chunkCount; i++) {\n      const { chunk } = getChunkInfo(file, i, chunkSize);\n      await uploadChunk({ chunk, currentChunk: i, chunkCount });\n    }\n  };\n  const uploadChunk = (chunkInfo) => {\n    // progressFun()\n    return new Promise((resolver, reject) => {\n      let config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      };\n      // 创建formData对象，下面是结合不同项目给后端传入的对象。\n      let fetchForm = new FormData();\n      fetchForm.append('chunkNumber', chunkInfo.currentChunk + 1); // 第几片\n      fetchForm.append('chunkSize', chunkSize); // 分片大小的限制  例如限制 5M\n      fetchForm.append('currentChunkSize', chunkInfo.chunk.size); // 每一片的大小\n      fetchForm.append('file', chunkInfo.chunk); //每一片的文件\n      fetchForm.append('filename', file.name); // 文件名\n      fetchForm.append('totalChunks', chunkInfo.chunkCount); //总片数\n      fetchForm.append('md5', fileMD5);\n      upload(fetchForm, config)\n        .then((res) => {\n          if (res.data.code == 1) {\n            // // 结合不同项目 将成功的信息返回出去\n            // 下面如果在项目中没有用到可以不用打开注释\n            uploading(chunkInfo.currentChunk + 1, chunkInfo.chunkCount);\n            resolver(true);\n          } else if (res.data.code == 2) {\n            if (chunkInfo.currentChunk < chunkInfo.chunkCount - 1) {\n            } else {\n              // 当总数大于等于分片个数的时候\n              if (chunkInfo.currentChunk + 1 == chunkInfo.chunkCount) {\n                success(res.data);\n              }\n            }\n          }\n        })\n        .catch((e) => {\n          error && error(e);\n        });\n    });\n  };\n  readFileMD5(); // 开始执行代码\n};\n"],"mappings":"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","ignoreList":[]}]}