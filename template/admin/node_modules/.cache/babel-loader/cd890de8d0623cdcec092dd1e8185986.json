{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/components/cropperImg/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/components/cropperImg/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["VueCropper","fileUpload","name","components","data","resImg","previews","option","img","outputSize","outputType","info","canScale","autoCrop","autoCropWidth","autoCropHeight","fixed","fixedNumber","full","fixedBox","canMove","canMoveBox","original","centerBox","height","infoTrue","maxImgSize","enlarge","mode","methods","imgLoad","msg","console","log","changeScale","num","$refs","cropper","rotateLeft","rotateRight","realTime","_this","that","getCropBlob","blobToDataURI","res","previewImg","blob","callback","reader","FileReader","readAsDataURL","onload","e","target","result","selectImg","_this2","file","files","test","value","$message","message","type","_typeof","window","URL","createObjectURL","Blob","base64ImgtoFile","dataurl","filename","arguments","length","undefined","arr","split","mime","match","suffix","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","concat","uploadFile","_this3","formData","FormData","append","then","code","$emit","duration","uploadImg","_this4","getCropData"],"sources":["src/components/cropperImg/index.vue"],"sourcesContent":["<template>\n  <div class=\"cropper-content\">\n    <div class=\"cropper-box\">\n      <div class=\"cropper\">\n        <vue-cropper\n          ref=\"cropper\"\n          :img=\"option.img\"\n          :outputSize=\"option.outputSize\"\n          :outputType=\"option.outputType\"\n          :info=\"option.info\"\n          :canScale=\"option.canScale\"\n          :autoCrop=\"option.autoCrop\"\n          :autoCropWidth=\"option.autoCropWidth\"\n          :autoCropHeight=\"option.autoCropHeight\"\n          :fixed=\"option.fixed\"\n          :fixedNumber=\"option.fixedNumber\"\n          :full=\"option.full\"\n          :fixedBox=\"option.fixedBox\"\n          :canMove=\"option.canMove\"\n          :canMoveBox=\"option.canMoveBox\"\n          :original=\"option.original\"\n          :centerBox=\"option.centerBox\"\n          :height=\"option.height\"\n          :infoTrue=\"option.infoTrue\"\n          :maxImgSize=\"option.maxImgSize\"\n          :enlarge=\"option.enlarge\"\n          :mode=\"option.mode\"\n          @realTime=\"realTime\"\n          @imgLoad=\"imgLoad\"\n        >\n        </vue-cropper>\n      </div>\n      <!--底部操作工具按钮-->\n      <div class=\"footer-btn\">\n        <div class=\"scope-btn\">\n          <input\n            type=\"file\"\n            id=\"uploads\"\n            style=\"position: absolute; clip: rect(0 0 0 0)\"\n            accept=\"image/png, image/jpeg, image/gif, image/jpg\"\n            @change=\"selectImg($event)\"\n          />\n          <el-button size=\"mini\" type=\"danger\" plain icon=\"el-icon-zoom-in\" @click=\"changeScale(1)\">放大</el-button>\n          <el-button size=\"mini\" type=\"danger\" plain icon=\"el-icon-zoom-out\" @click=\"changeScale(-1)\">缩小</el-button>\n          <el-button size=\"mini\" type=\"danger\" plain @click=\"rotateLeft\">↺ 左旋转</el-button>\n          <el-button size=\"mini\" type=\"danger\" plain @click=\"rotateRight\">↻ 右旋转</el-button>\n        </div>\n      </div>\n    </div>\n    <!--预览效果图-->\n    <div class=\"show-preview\">\n      <div class=\"preview\">\n        <img :src=\"previews.url\" :style=\"previews.img\" />\n      </div>\n      <div class=\"upload-btn\">\n        <label class=\"btn\" for=\"uploads\">选择图片</label>\n        <el-button size=\"mini\" type=\"success\" @click=\"uploadImg()\">确认上传</el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { VueCropper } from 'vue-cropper';\n// import { updateAvatar } from ''; //这里为文件上传的接口换成自己的文件\nimport { fileUpload } from '@/api/setting';\nexport default {\n  name: 'CropperImage',\n  components: {\n    VueCropper,\n  },\n  data() {\n    return {\n      name: '',\n      resImg: '',\n      previews: {},\n      option: {\n        img: '', //裁剪图片的地址\n        outputSize: 1, //裁剪生成图片的质量(可选0.1 - 1)\n        outputType: 'png', //裁剪生成图片的格式（jpeg || png || webp）\n        info: true, //图片大小信息\n        canScale: true, //图片是否允许滚轮缩放\n        autoCrop: true, //是否默认生成截图框\n        autoCropWidth: 200, //默认生成截图框宽度\n        autoCropHeight: 200, //默认生成截图框高度\n        fixed: true, //是否开启截图框宽高固定比例\n        fixedNumber: [1, 1], //截图框的宽高比例\n        full: false, //false按原比例裁切图片，不失真\n        fixedBox: false, //固定截图框大小，不允许改变\n        canMove: true, //上传图片是否可以移动\n        canMoveBox: true, //截图框能否拖动\n        original: false, //上传图片按照原始比例渲染\n        centerBox: true, //截图框是否被限制在图片里面\n        height: false, //是否按照设备的dpr 输出等比例图片\n        infoTrue: false, //true为展示真实输出图片宽高，false展示看到的截图框宽高\n        maxImgSize: 3000, //限制图片最大宽度和高度\n        enlarge: 1, //图片根据截图框输出比例倍数\n        mode: '300px 300px', //图片默认渲染方式\n      },\n    };\n  },\n  methods: {\n    //初始化函数\n    imgLoad(msg) {\n      console.log('工具初始化函数=====' + msg);\n    },\n    //图片缩放\n    changeScale(num) {\n      num = num || 1;\n      this.$refs.cropper.changeScale(num);\n    },\n    //向左旋转\n    rotateLeft() {\n      this.$refs.cropper.rotateLeft();\n    },\n    //向右旋转\n    rotateRight() {\n      this.$refs.cropper.rotateRight();\n    },\n    // //实时预览函数\n    realTime(data) {\n      let that = this;\n      that.previews = data;\n      this.$refs.cropper.getCropBlob((data) => {\n        this.blobToDataURI(data, function (res) {\n          that.previewImg = res;\n        });\n      });\n    },\n    blobToDataURI(blob, callback) {\n      var reader = new FileReader();\n      reader.readAsDataURL(blob);\n      reader.onload = function (e) {\n        callback(e.target.result);\n      };\n    },\n    //选择图片\n    selectImg(e) {\n      let file = e.target.files[0];\n      if (!/\\.(jpg|jpeg|png|JPG|PNG)$/.test(e.target.value)) {\n        this.$message({\n          message: '图片类型要求：jpeg、jpg、png',\n          type: 'error',\n        });\n        return false;\n      }\n      //转化为blob\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        let data;\n        if (typeof e.target.result === 'object') {\n          data = window.URL.createObjectURL(new Blob([e.target.result]));\n        } else {\n          data = e.target.result;\n        }\n        this.option.img = data;\n      };\n      //转化为base64\n      reader.readAsDataURL(file);\n    },\n\n    base64ImgtoFile(dataurl, filename = 'file') {\n      //将base64格式分割：['data:image/png;base64','XXXX']\n      const arr = dataurl.split(',');\n      // .*？ 表示匹配任意字符到下一个符合条件的字符 刚好匹配到：\n      // image/png\n      const mime = arr[0].match(/:(.*?);/)[1]; //image/png\n      //[image,png] 获取图片类型后缀\n      const suffix = mime.split('/')[1]; //png\n      const bstr = atob(arr[1]); //atob() 方法用于解码使用 base-64 编码的字符串\n      let n = bstr.length;\n      const u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      return new File([u8arr], `${filename}.${suffix}`, {\n        type: mime,\n      });\n    },\n    uploadFile(file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      fileUpload(formData).then((res) => {\n        if (res.code == 200) {\n          this.$emit('uploadImgSuccess', res.data);\n        } else {\n          this.$message({\n            message: '上传失败',\n            type: 'error',\n            duration: 1000,\n          });\n        }\n      });\n    },\n    //上传图片\n    uploadImg() {\n      this.$refs.cropper.getCropData((data) => {\n        this.resImg = this.base64ImgtoFile(data);\n        this.uploadFile(this.resImg);\n      });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.btn {\n  outline: none;\n  display: inline-block;\n  line-height: 1;\n  white-space: nowrap;\n  cursor: pointer;\n  -webkit-appearance: none;\n  text-align: center;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  outline: 0;\n  -webkit-transition: 0.1s;\n  transition: 0.1s;\n  font-weight: 500;\n  padding: 8px 15px;\n  font-size: 12px;\n  border-radius: 3px;\n  color: #fff;\n  background-color: #409eff;\n  border-color: #409eff;\n  margin-right: 10px;\n}\n.cropper-content {\n  display: flex;\n  display: -webkit-flex;\n  justify-content: flex-end;\n  .cropper-box {\n    flex: 1;\n    width: 100%;\n    .cropper {\n      width: auto;\n      height: 300px;\n    }\n  }\n\n  .show-preview {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    .preview {\n      overflow: hidden;\n      height: 200px;\n      width: 200px;\n      background: #cccccc;\n      transform: scale(0.8);\n      border-radius: 50%;\n    }\n  }\n}\n.footer-btn {\n  margin-top: 30px;\n  display: flex;\n  display: -webkit-flex;\n  justify-content: space-around;\n  .scope-btn {\n    display: flex;\n    display: -webkit-flex;\n    justify-content: space-between;\n    padding-right: 10px;\n  }\n  .upload-btn {\n    flex: 1;\n    -webkit-flex: 1;\n    display: flex;\n    display: -webkit-flex;\n    justify-content: center;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}