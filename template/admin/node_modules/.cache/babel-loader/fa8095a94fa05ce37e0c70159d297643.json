{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/thread-loader/dist/cjs.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/router/index.js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/router/index.js","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/thread-loader/dist/cjs.js","mtime":1746465018446},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL25pZXFpYW5xaWFuL0Rvd25sb2Fkcy94aW54aWFuZ211L0NSTUVCL3RlbXBsYXRlL2FkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL25pZXFpYW5xaWFuL0Rvd25sb2Fkcy94aW54aWFuZ211L0NSTUVCL3RlbXBsYXRlL2FkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL25pZXFpYW5xaWFuL0Rvd25sb2Fkcy94aW54aWFuZ211L0NSTUVCL3RlbXBsYXRlL2FkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKLy8gKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLy8gfCBDUk1FQiBbIENSTUVC6LWL6IO95byA5Y+R6ICF77yM5Yqp5Yqb5LyB5Lia5Y+R5bGVIF0KLy8gKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLy8gfCBDb3B5cmlnaHQgKGMpIDIwMTZ+MjAyMyBodHRwczovL3d3dy5jcm1lYi5jb20gQWxsIHJpZ2h0cyByZXNlcnZlZC4KLy8gKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLy8gfCBMaWNlbnNlZCBDUk1FQuW5tuS4jeaYr+iHqueUsei9r+S7tu+8jOacque7j+iuuOWPr+S4jeiDveWOu+aOiUNSTUVC55u45YWz54mI5p2DCi8vICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIHwgQXV0aG9yOiBDUk1FQiBUZWFtIDxhZG1pbkBjcm1lYi5jb20+Ci8vICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBSb3V0ZXIgZnJvbSAndnVlLXJvdXRlcic7CmltcG9ydCByb3V0ZXMgZnJvbSAnLi9yb3V0ZXJzJzsKaW1wb3J0IFNldHRpbmcgZnJvbSAnQC9zZXR0aW5nJzsKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnOwppbXBvcnQgeyByZW1vdmVDb29raWVzLCBnZXRDb29raWVzLCBzZXRUaXRsZSB9IGZyb20gJ0AvbGlicy91dGlsJzsKaW1wb3J0IHsgaW5jbHVkZUFycmF5IH0gZnJvbSAnQC9saWJzL2F1dGgnOwppbXBvcnQgeyBQcmV2TG9hZGluZyB9IGZyb20gJ0AvdXRpbHMvbG9hZGluZy5qcyc7ClZ1ZS51c2UoUm91dGVyKTsKLy8g6Kej5YazIGBlbGVtZW50IHVpYCDlr7zoiKrmoI/ph43lpI3ngrnoj5zljZXmiqXplJnpl67popgKdmFyIG9yaWdpbmFsUHVzaCA9IFJvdXRlci5wcm90b3R5cGUucHVzaDsKUm91dGVyLnByb3RvdHlwZS5wdXNoID0gZnVuY3Rpb24gcHVzaChsb2NhdGlvbikgewogIHJldHVybiBvcmlnaW5hbFB1c2guY2FsbCh0aGlzLCBsb2NhdGlvbikuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgcmV0dXJuIGVycjsKICB9KTsKfTsKdmFyIHJvdXRlciA9IG5ldyBSb3V0ZXIoewogIHJvdXRlczogcm91dGVzLAogIG1vZGU6IFNldHRpbmcucm91dGVyTW9kZQp9KTsKCi8vIOWIpOaWrei3r+eUsSBtZXRhLnJvbGVzIOS4reaYr+WQpuWMheWQq+W9k+WJjeeZu+W9leeUqOaIt+adg+mZkOWtl+autQpleHBvcnQgZnVuY3Rpb24gaGFzQXV0aChyb2xlcywgcm91dGUpIHsKICBpZiAocm91dGUubWV0YSAmJiByb3V0ZS5tZXRhLmF1dGgpIHJldHVybiByb2xlcy5zb21lKGZ1bmN0aW9uIChyb2xlKSB7CiAgICByZXR1cm4gcm91dGUubWV0YS5hdXRoLmluY2x1ZGVzKHJvbGUpOwogIH0pO2Vsc2UgcmV0dXJuIHRydWU7Cn0KCi8vIOmAkuW9kui/h+a7pOacieadg+mZkOeahOi3r+eUsQpleHBvcnQgZnVuY3Rpb24gc2V0RmlsdGVyTWVudUZ1bihyb3V0ZXMsIHJvbGUpIHsKICB2YXIgbWVudSA9IFtdOwogIHJvdXRlcy5mb3JFYWNoKGZ1bmN0aW9uIChyb3V0ZSkgewogICAgdmFyIGl0ZW0gPSBfb2JqZWN0U3ByZWFkKHt9LCByb3V0ZSk7CiAgICBpZiAoaGFzQXV0aChyb2xlLCBpdGVtKSkgewogICAgICBpZiAoaXRlbS5jaGlsZHJlbikgaXRlbS5jaGlsZHJlbiA9IHNldEZpbHRlck1lbnVGdW4oaXRlbS5jaGlsZHJlbiwgcm9sZSk7CiAgICAgIG1lbnUucHVzaChpdGVtKTsKICAgIH0KICB9KTsKICByZXR1cm4gbWVudTsKfQoKLy8g6YCS5b2S5aSE55CG5aSa5L2Z55qEIGxheW91dCA6IDxyb3V0ZXItdmlldz7vvIzorqnpnIDopoHorr/pl67nmoTnu4Tku7bkv53mjIHlnKjnrKzkuIDlsYIgbGF5b3V0IOWxguOAggovLyDlm6DkuLogYGtlZXAtYWxpdmVgIOWPquiDvee8k+WtmOS6jOe6p+i3r+eUsQovLyDpu5jorqTliJ3lp4vljJbml7blsLHmiafooYwKZXhwb3J0IGZ1bmN0aW9uIGtlZXBBbGl2ZVNwbGljZSh0bykgewogIGlmICh0by5tYXRjaGVkICYmIHRvLm1hdGNoZWQubGVuZ3RoID4gMikgewogICAgdG8ubWF0Y2hlZC5tYXAoZnVuY3Rpb24gKHYsIGspIHsKICAgICAgaWYgKHYuY29tcG9uZW50cy5kZWZhdWx0IGluc3RhbmNlb2YgRnVuY3Rpb24pIHsKICAgICAgICB2LmNvbXBvbmVudHMuZGVmYXVsdCgpLnRoZW4oZnVuY3Rpb24gKGNvbXBvbmVudHMpIHsKICAgICAgICAgIGlmIChjb21wb25lbnRzLmRlZmF1bHQubmFtZSA9PT0gJ3BhcmVudCcpIHsKICAgICAgICAgICAgdG8ubWF0Y2hlZC5zcGxpY2UoaywgMSk7CiAgICAgICAgICAgIHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICBwYXRoOiB0by5wYXRoLAogICAgICAgICAgICAgIHF1ZXJ5OiB0by5xdWVyeQogICAgICAgICAgICB9KTsKICAgICAgICAgICAga2VlcEFsaXZlU3BsaWNlKHRvKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAodi5jb21wb25lbnRzLmRlZmF1bHQubmFtZSA9PT0gJ3BhcmVudCcpIHsKICAgICAgICAgIHRvLm1hdGNoZWQuc3BsaWNlKGssIDEpOwogICAgICAgICAga2VlcEFsaXZlU3BsaWNlKHRvKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0KfQoKLy8g5bu26L+f5YWz6Zet6L+b5bqm5p2hCmV4cG9ydCBmdW5jdGlvbiBkZWxheU5Qcm9ncmVzc0RvbmUoKSB7CiAgdmFyIHRpbWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IDMwMDsKICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgfSwgdGltZSk7Cn0KCi8qKgogKiDot6/nlLHmi6bmiKoKICog5p2D6ZmQ6aqM6K+BCiAqLwoKcm91dGVyLmJlZm9yZUVhY2goIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodG8sIGZyb20sIG5leHQpIHsKICAgIHZhciB0b2tlbiwgYWNjZXNzLCBpc1Blcm1pc3Npb247CiAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICAvLyBQcmV2TG9hZGluZy5zdGFydCgpOwogICAgICAgICAga2VlcEFsaXZlU3BsaWNlKHRvKTsKICAgICAgICAgIGlmICghKHRvLmZ1bGxQYXRoLmluZGV4T2YoJ2tlZnUnKSAhPSAtMSB8fCB0by5uYW1lID09ICdtb2JpbGVfdXBsb2FkJykpIHsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgbmV4dCgpKTsKICAgICAgICBjYXNlIDM6CiAgICAgICAgICAvLyDliKTmlq3mmK/lkKbpnIDopoHnmbvlvZXmiY3lj6/ku6Xov5vlhaUKICAgICAgICAgIGlmICh0by5tYXRjaGVkLnNvbWUoZnVuY3Rpb24gKF8pIHsKICAgICAgICAgICAgcmV0dXJuIF8ubWV0YS5hdXRoOwogICAgICAgICAgfSkpIHsKICAgICAgICAgICAgLy8g6L+Z6YeM5L6d5o2uIHRva2VuIOWIpOaWreaYr+WQpueZu+W9le+8jOWPr+inhuaDheWGteS/ruaUuQogICAgICAgICAgICB0b2tlbiA9IGdldENvb2tpZXMoJ3Rva2VuJyk7CiAgICAgICAgICAgIGlmICh0b2tlbiAmJiB0b2tlbiAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAgICAgICBhY2Nlc3MgPSBzdG9yZS5zdGF0ZS51c2VySW5mby51bmlxdWVBdXRoOwogICAgICAgICAgICAgIGlzUGVybWlzc2lvbiA9IGluY2x1ZGVBcnJheSh0by5tZXRhLmF1dGgsIGFjY2Vzcyk7IC8vICDliKTmlq3mmK/lkKbmnInmnYPpmZAgIFRPRE8KICAgICAgICAgICAgICBpZiAoYWNjZXNzLmxlbmd0aCkgewogICAgICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpZiAoYWNjZXNzLmxlbmd0aCA9PSAwKSB7CiAgICAgICAgICAgICAgICAgIG5leHQoewogICAgICAgICAgICAgICAgICAgIG5hbWU6ICdsb2dpbicsCiAgICAgICAgICAgICAgICAgICAgcXVlcnk6IHsKICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiB0by5mdWxsUGF0aAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5jbGVhcigpOwogICAgICAgICAgICAgICAgICByZW1vdmVDb29raWVzKCd0b2tlbicpOwogICAgICAgICAgICAgICAgICByZW1vdmVDb29raWVzKCdleHBpcmVzX3RpbWUnKTsKICAgICAgICAgICAgICAgICAgcmVtb3ZlQ29va2llcygndXVpZCcpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogJzQwMycKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIC8vIG5leHQoKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyDmsqHmnInnmbvlvZXnmoTml7blgJnot7PovazliLDnmbvlvZXnlYzpnaIKICAgICAgICAgICAgICAvLyDmkLrluKbkuIrnmbvpmYbmiJDlip/kuYvlkI7pnIDopoHot7PovaznmoTpobXpnaLlrozmlbTot6/lvoQKICAgICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICAgIG5hbWU6ICdsb2dpbicsCiAgICAgICAgICAgICAgICBxdWVyeTogewogICAgICAgICAgICAgICAgICByZWRpcmVjdDogdG8uZnVsbFBhdGgKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UuY2xlYXIoKTsKICAgICAgICAgICAgICByZW1vdmVDb29raWVzKCd0b2tlbicpOwogICAgICAgICAgICAgIHJlbW92ZUNvb2tpZXMoJ2V4cGlyZXNfdGltZScpOwogICAgICAgICAgICAgIHJlbW92ZUNvb2tpZXMoJ3V1aWQnKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8g5LiN6ZyA6KaB6Lqr5Lu95qCh6aqMIOebtOaOpemAmui/hwogICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICB9CiAgICAgICAgY2FzZSA0OgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CiAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyLCBfeDMpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpKTsKcm91dGVyLmFmdGVyRWFjaChmdW5jdGlvbiAodG8pIHsKICAvLyDmm7TmlLnmoIfpopgKICBzZXRUaXRsZSh0bywgcm91dGVyLmFwcCk7CiAgLy8g6L+U5Zue6aG16Z2i6aG256uvCiAgd2luZG93LnNjcm9sbFRvKDAsIDApOwogIFByZXZMb2FkaW5nLmRvbmUoKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHJvdXRlcjs="},null]}