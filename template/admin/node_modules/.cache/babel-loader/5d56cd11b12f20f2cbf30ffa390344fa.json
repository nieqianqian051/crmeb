{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/components/uploadImg/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/components/uploadImg/index.vue","mtime":1719468447000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvbmllcWlhbnFpYW4vRG93bmxvYWRzL3hpbnhpYW5nbXUvQ1JNRUIvdGVtcGxhdGUvYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5LmpzIjsKaW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL25pZXFpYW5xaWFuL0Rvd25sb2Fkcy94aW54aWFuZ211L0NSTUVCL3RlbXBsYXRlL2FkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL25pZXFpYW5xaWFuL0Rvd25sb2Fkcy94aW54aWFuZ211L0NSTUVCL3RlbXBsYXRlL2FkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgZ2V0Q2F0ZWdvcnlMaXN0QXBpLCBtb3ZlQXBpLCBvbmxpbmVVcGxvYWQsIHNjYW5VcGxvYWRDb2RlLCB1cGxvYWRJbWFnZXMgfSBmcm9tICdAL2FwaS91cGxvYWRQaWN0dXJlcyc7CmltcG9ydCBTZXR0aW5nIGZyb20gJ0Avc2V0dGluZyc7CmltcG9ydCB7IGdldENvb2tpZXMgfSBmcm9tICdAL2xpYnMvdXRpbCc7CmltcG9ydCB7IHNjYW5VcGxvYWRRcmNvZGUgYXMgX3NjYW5VcGxvYWRRcmNvZGUsIHNjYW5VcGxvYWRHZXQgYXMgX3NjYW5VcGxvYWRHZXQgfSBmcm9tICdAL2FwaS9zZXR0aW5nJzsKaW1wb3J0IFFSQ29kZSBmcm9tICdxcmNvZGVqczInOwppbXBvcnQgY29tcHJlc3NJbWcgZnJvbSAnQC91dGlscy9jb21wcmVzc0ltZy5qcyc7CmltcG9ydCB7IGlzUGljVXBsb2FkIH0gZnJvbSAnQC91dGlscy9pbmRleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnJywKICBwcm9wczogewogICAgY2F0ZWdvcnlMaXN0OiB7CiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIGNhdGVnb3J5SWQ6IHsKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBpc1BhZ2U6IHsKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBpc0lmcmFtZTogewogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHVwbG9hZE1vZGFsOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsKSB7CiAgICAgICAgaWYgKG5ld1ZhbCkgdGhpcy5ydWxlRm9ybS5yZWdpb24gPSB0aGlzLmNhdGVnb3J5SWQ7CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHdlYkltZ1VybDogJycsCiAgICAgIHVwbG9hZE1vZGFsOiBmYWxzZSwKICAgICAgZmlsZVVybDogU2V0dGluZy5hcGlCYXNlVVJMICsgJy9maWxlL3VwbG9hZCcsCiAgICAgIGhlYWRlcjogewogICAgICAgICdBdXRob3JpLXphdGlvbic6ICdCZWFyZXIgJyArIGdldENvb2tpZXMoJ3Rva2VuJykKICAgICAgfSwKICAgICAgdXBsb2FkRGF0YToge30sCiAgICAgIHByb3BzOiB7CiAgICAgICAgY2hlY2tTdHJpY3RseTogdHJ1ZSwKICAgICAgICBlbWl0UGF0aDogZmFsc2UsCiAgICAgICAgbGFiZWw6ICd0aXRsZScsCiAgICAgICAgdmFsdWU6ICdpZCcKICAgICAgfSwKICAgICAgZGlzYWJsZWQ6IGZhbHNlLAogICAgICBydWxlRm9ybTogewogICAgICAgIHR5cGU6IDAsCiAgICAgICAgcmVnaW9uOiAnJywKICAgICAgICBpbWdMaXN0OiBbXQogICAgICB9LAogICAgICBydWxlczogewogICAgICAgIHR5cGU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fpgInmi6nmtLvliqjotYTmupAnLAogICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScKICAgICAgICB9XQogICAgICB9LAogICAgICBxcmNvZGU6ICcnLAogICAgICBzY2FuVG9rZW46ICcnLAogICAgICBsaW1pdDogMjAsCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICB0aW1lOiB1bmRlZmluZWQKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge30sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMudGltZSk7CiAgICB0aGlzLnRpbWUgPSB1bmRlZmluZWQ7CiAgfSwKICBtZXRob2RzOiB7CiAgICByYWRpb0NoYW5nZTogZnVuY3Rpb24gcmFkaW9DaGFuZ2UodHlwZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICB0aGlzLnJ1bGVGb3JtLnR5cGUgPSB0eXBlOwogICAgICB0aGlzLnJ1bGVGb3JtLmltZ0xpc3QgPSBbXTsKICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWUpOwogICAgICB0aGlzLnRpbWUgPSB1bmRlZmluZWQ7CiAgICAgIGlmICh0eXBlID09IDIpIHsKICAgICAgICB0aGlzLnNjYW5VcGxvYWRRcmNvZGUoKTsKICAgICAgICB0aGlzLnRpbWUgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoZSkgewogICAgICAgICAgX3RoaXMuc2NhblVwbG9hZEdldCgpOwogICAgICAgIH0sIDIwMDApOwogICAgICB9CiAgICB9LAogICAgc2NhblVwbG9hZFFyY29kZTogZnVuY3Rpb24gc2NhblVwbG9hZFFyY29kZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIF9zY2FuVXBsb2FkUXJjb2RlKHRoaXMucnVsZUZvcm0ucmVnaW9uKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczIuY3JlYXRRckNvZGUocmVzLmRhdGEudXJsKTsKICAgICAgICBfdGhpczIuc2NhblRva2VuID0gcmVzLmRhdGEudXJsOwogICAgICB9KTsKICAgIH0sCiAgICBzY2FuVXBsb2FkR2V0OiBmdW5jdGlvbiBzY2FuVXBsb2FkR2V0KCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgICAgdmFyIHRva2VuID0gdGhpcy5zY2FuVG9rZW4uc3BsaXQoJ3Rva2VuPScpWzFdOwogICAgICBfc2NhblVwbG9hZEdldCh0b2tlbikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMzLnJ1bGVGb3JtLmltZ0xpc3QgPSByZXMuZGF0YTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0SW1nOiBmdW5jdGlvbiBnZXRJbWcoKSB7CiAgICAgIGlmICghdGhpcy53ZWJJbWdVcmwpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfor7flhYjovpPlhaXlm77niYflnLDlnYAnKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgaWYgKHRoaXMud2ViSW1nVXJsLmluZGV4T2YoJy5waHAnKSAhPSAtMSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+ivt+WFiOi+k+WFpeWFtuS7luWbvueJh+WcsOWdgCcpOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB0aGlzLnJ1bGVGb3JtLmltZ0xpc3QucHVzaCh7CiAgICAgICAgdXJsOiB0aGlzLndlYkltZ1VybAogICAgICB9KTsKICAgIH0sCiAgICBzdWJtaXRVcGxvYWQ6IGZ1bmN0aW9uIHN1Ym1pdFVwbG9hZCgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGksIGZpbGUsIHVybHMsIGF0dElkOwogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmIChfdGhpczQucnVsZUZvcm0uaW1nTGlzdC5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF90aGlzNC4kbWVzc2FnZS53YXJuaW5nKCfor7flhYjpgInmi6nlm77niYcnKSk7CiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBpZiAoIShfdGhpczQucnVsZUZvcm0udHlwZSA9PSAwKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF90aGlzNC51cGxvYWREYXRhID0gewogICAgICAgICAgICAgICAgcGlkOiBfdGhpczQucnVsZUZvcm0ucmVnaW9uCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBpZiAoIV90aGlzNC5ydWxlRm9ybS5pbWdMaXN0Lmxlbmd0aCkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGlmICghX3RoaXM0LmxvYWRpbmcpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX3RoaXM0LmxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgIGkgPSAwOwogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgaWYgKCEoaSA8IF90aGlzNC5ydWxlRm9ybS5pbWdMaXN0Lmxlbmd0aCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBmaWxlID0gX3RoaXM0LnJ1bGVGb3JtLmltZ0xpc3RbaV0ucmF3OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXM0LnVwbG9hZEl0ZW0oZmlsZSk7CiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgaWYgKGkgPT0gX3RoaXM0LnJ1bGVGb3JtLmltZ0xpc3QubGVuZ3RoIC0gMSkgewogICAgICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlLnN1Y2Nlc3MoJ+S4iuS8oOaIkOWKnycpOwogICAgICAgICAgICAgICAgX3RoaXM0LiRlbWl0KCd1cGxvYWRTdWNjZXNzJyk7CiAgICAgICAgICAgICAgICBfdGhpczQudXBsb2FkTW9kYWwgPSBmYWxzZTsKICAgICAgICAgICAgICAgIF90aGlzNC5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfdGhpczQuaW5pdERhdGEoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgaSsrOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICBpZiAoIShfdGhpczQucnVsZUZvcm0udHlwZSA9PSAxKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI4OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHVybHMgPSBfdGhpczQucnVsZUZvcm0uaW1nTGlzdC5tYXAoZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgIHJldHVybiBlLnVybDsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBpZiAoIXVybHMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjY7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgaWYgKCFfdGhpczQubG9hZGluZykgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI0OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgICBjYXNlIDI0OgogICAgICAgICAgICAgIF90aGlzNC5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgICAgICBvbmxpbmVVcGxvYWQoewogICAgICAgICAgICAgICAgcGlkOiBfdGhpczQucnVsZUZvcm0ucmVnaW9uLAogICAgICAgICAgICAgICAgaW1hZ2VzOiB1cmxzCiAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICBfdGhpczQuJG1lc3NhZ2Uuc3VjY2Vzcygn5LiK5Lyg5oiQ5YqfJyk7CiAgICAgICAgICAgICAgICBfdGhpczQuJGVtaXQoJ3VwbG9hZFN1Y2Nlc3MnKTsKICAgICAgICAgICAgICAgIF90aGlzNC51cGxvYWRNb2RhbCA9IGZhbHNlOwogICAgICAgICAgICAgICAgX3RoaXM0LmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIF90aGlzNC5pbml0RGF0YSgpOwogICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgICAgIF90aGlzNC5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfdGhpczQuJG1lc3NhZ2UuZXJyb3IoZXJyLm1zZyk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgMjY6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI5OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDI4OgogICAgICAgICAgICAgIGlmIChfdGhpczQucnVsZUZvcm0udHlwZSA9PSAyKSB7CiAgICAgICAgICAgICAgICBhdHRJZCA9IF90aGlzNC5ydWxlRm9ybS5pbWdMaXN0Lm1hcChmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gZS5hdHRfaWQ7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIG1vdmVBcGkoewogICAgICAgICAgICAgICAgICBwaWQ6IF90aGlzNC5ydWxlRm9ybS5yZWdpb24sCiAgICAgICAgICAgICAgICAgIGltYWdlczogYXR0SWQKICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgICBfdGhpczQuJG1lc3NhZ2Uuc3VjY2Vzcygn5LiK5Lyg5oiQ5YqfJyk7CiAgICAgICAgICAgICAgICAgIF90aGlzNC4kZW1pdCgndXBsb2FkU3VjY2VzcycpOwogICAgICAgICAgICAgICAgICBfdGhpczQudXBsb2FkTW9kYWwgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgX3RoaXM0LmluaXREYXRhKCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIGNhc2UgMjk6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgdXBsb2FkSXRlbTogZnVuY3Rpb24gdXBsb2FkSXRlbShmaWxlKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgIGZvcm1EYXRhLmFwcGVuZCgndXBsb2FkRmlsZXMnLCBmaWxlKTsKICAgICAgICB1cGxvYWRJbWFnZXMoZm9ybURhdGEpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgaWYgKHJlcy5jb2RlID09IDIwMCkgewogICAgICAgICAgICAvLyB0aGlzLiRlbWl0KCd1cGxvYWRJbWdTdWNjZXNzJywgcmVzLmRhdGEpOwogICAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBfdGhpczUubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICBfdGhpczUuJG1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6ICfkuIrkvKDlpLHotKUnLAogICAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgICAgX3RoaXM1LmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIF90aGlzNS4kbWVzc2FnZS5lcnJvcihlcnIubXNnKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgYmVmb3JlVXBsb2FkOiBmdW5jdGlvbiBiZWZvcmVVcGxvYWQoZmlsZSkgewogICAgICBjb25zb2xlLmxvZyhmaWxlKTsKICAgIH0sCiAgICBjcmVhdFFyQ29kZTogZnVuY3Rpb24gY3JlYXRRckNvZGUodXJsKSB7CiAgICAgIHRoaXMuJHJlZnMucXJDb2RlVXJsLmlubmVySFRNTCA9ICcnOwogICAgICB2YXIgcXJjb2RlID0gbmV3IFFSQ29kZSh0aGlzLiRyZWZzLnFyQ29kZVVybCwgewogICAgICAgIHRleHQ6IHVybCwKICAgICAgICAvLyDpnIDopoHovazmjaLkuLrkuoznu7TnoIHnmoTlhoXlrrkKICAgICAgICB3aWR0aDogMTYwLAogICAgICAgIGhlaWdodDogMTYwLAogICAgICAgIGNvbG9yRGFyazogJyMwMDAwMDAnLAogICAgICAgIGNvbG9yTGlnaHQ6ICcjZmZmZmZmJywKICAgICAgICBjb3JyZWN0TGV2ZWw6IFFSQ29kZS5Db3JyZWN0TGV2ZWwuSAogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVXZWJSZW1vdmU6IGZ1bmN0aW9uIGhhbmRsZVdlYlJlbW92ZShmaWxlKSB7CiAgICAgIHZhciBpbmRleCA9IHRoaXMucnVsZUZvcm0uaW1nTGlzdC5maW5kSW5kZXgoZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gZS51cmwgPT0gZmlsZS51cmw7CiAgICAgIH0pOwogICAgICB0aGlzLnJ1bGVGb3JtLmltZ0xpc3Quc3BsaWNlKGluZGV4LCAxKTsKICAgIH0sCiAgICBoYW5kbGVSZW1vdmU6IGZ1bmN0aW9uIGhhbmRsZVJlbW92ZShpbmRleCkgewogICAgICB0aGlzLnJ1bGVGb3JtLmltZ0xpc3Quc3BsaWNlKGluZGV4LCAxKTsKICAgIH0sCiAgICBoYW5kbGVQaWN0dXJlQ2FyZFByZXZpZXc6IGZ1bmN0aW9uIGhhbmRsZVBpY3R1cmVDYXJkUHJldmlldyhmaWxlKSB7CiAgICAgIHRoaXMuZGlhbG9nSW1hZ2VVcmwgPSBmaWxlLnVybDsKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBoYW5kbGVEb3dubG9hZDogZnVuY3Rpb24gaGFuZGxlRG93bmxvYWQoZmlsZSkgewogICAgICBjb25zb2xlLmxvZyhmaWxlKTsKICAgIH0sCiAgICBmaWxlQ2hhbmdlOiBmdW5jdGlvbiBmaWxlQ2hhbmdlKGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIHZhciBfdGhpczYgPSB0aGlzOwogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaWYgKCFpc1BpY1VwbG9hZChmaWxlKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGlmICghKGZpbGUuc2l6ZSA+PSAyMDk3MTUyKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA2OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXM2LmNvbUltZyhmaWxlLnJhdykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICBmaWxlTGlzdC5tYXAoZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgaWYgKGUudWlkID09PSBmaWxlLnVpZCkgewogICAgICAgICAgICAgICAgICAgIGUucmF3ID0gcmVzOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF90aGlzNi5ydWxlRm9ybS5pbWdMaXN0ID0gZmlsZUxpc3Q7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfdGhpczYucnVsZUZvcm0uaW1nTGlzdCA9IGZpbGVMaXN0OwogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIC8vIOS7jnJ1bGVGb3Jt5a+56LGh55qEaW1nTGlzdOaVsOe7hOS4reWIoOmZpOacgOWQjuS4gOS4quWFg+e0oAogICAgICAgICAgICAgIF90aGlzNi5ydWxlRm9ybS5pbWdMaXN0LnNwbGljZShfdGhpczYucnVsZUZvcm0uaW1nTGlzdC5sZW5ndGgsIDEpOwogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgY29tSW1nOiBmdW5jdGlvbiBjb21JbWcoZmlsZSkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIGNvbXByZXNzSW1nKGZpbGUpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgcmVzb2x2ZShyZXMpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBsb2FkRGF0YTogZnVuY3Rpb24gbG9hZERhdGEoaXRlbSwgY2FsbGJhY2spIHsKICAgICAgLy8gZ2V0Q2F0ZWdvcnlMaXN0QXBpKHsKICAgICAgLy8gICBwaWQ6IGl0ZW0udmFsdWUsCiAgICAgIC8vIH0pCiAgICAgIC8vICAgLnRoZW4oYXN5bmMgKHJlcykgPT4gewogICAgICAvLyAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhLmxpc3Q7CiAgICAgIC8vICAgICBjYWxsYmFjayhkYXRhKTsKICAgICAgLy8gICB9KQogICAgICAvLyAgIC5jYXRjaCgocmVzKSA9PiB7fSk7CiAgICB9LAogICAgaGFuZGxlQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDaGFuZ2UoZSkgewogICAgICBpZiAodGhpcy5ydWxlRm9ybS50eXBlID09IDIpIHRoaXMuc2NhblVwbG9hZFFyY29kZSgpOwogICAgfSwKICAgIC8vIOenu+WKqAogICAgaGFuZGxlRHJhZ1N0YXJ0OiBmdW5jdGlvbiBoYW5kbGVEcmFnU3RhcnQoZSwgaXRlbSkgewogICAgICB0aGlzLmRyYWdnaW5nID0gaXRlbTsKICAgIH0sCiAgICBoYW5kbGVEcmFnRW5kOiBmdW5jdGlvbiBoYW5kbGVEcmFnRW5kKGUsIGl0ZW0pIHsKICAgICAgdGhpcy5kcmFnZ2luZyA9IG51bGw7CiAgICB9LAogICAgaGFuZGxlRHJhZ092ZXI6IGZ1bmN0aW9uIGhhbmRsZURyYWdPdmVyKGUpIHsKICAgICAgZS5kYXRhVHJhbnNmZXIuZHJvcEVmZmVjdCA9ICdtb3ZlJzsKICAgIH0sCiAgICBoYW5kbGVEcmFnRW50ZXI6IGZ1bmN0aW9uIGhhbmRsZURyYWdFbnRlcihlLCBpdGVtKSB7CiAgICAgIGUuZGF0YVRyYW5zZmVyLmVmZmVjdEFsbG93ZWQgPSAnbW92ZSc7CiAgICAgIGlmIChpdGVtID09PSB0aGlzLmRyYWdnaW5nKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHZhciBuZXdJdGVtcyA9IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnJ1bGVGb3JtLmltZ0xpc3QpOwogICAgICB2YXIgc3JjID0gbmV3SXRlbXMuaW5kZXhPZih0aGlzLmRyYWdnaW5nKTsKICAgICAgdmFyIGRzdCA9IG5ld0l0ZW1zLmluZGV4T2YoaXRlbSk7CiAgICAgIG5ld0l0ZW1zLnNwbGljZS5hcHBseShuZXdJdGVtcywgW2RzdCwgMF0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShuZXdJdGVtcy5zcGxpY2Uoc3JjLCAxKSkpKTsKICAgICAgdGhpcy5ydWxlRm9ybS5pbWdMaXN0ID0gbmV3SXRlbXM7CiAgICB9LAogICAgY2xvc2VkOiBmdW5jdGlvbiBjbG9zZWQoKSB7CiAgICAgIHRoaXMuaW5pdERhdGEoKTsKICAgICAgLy8gc2NhblVwbG9hZENvZGUoKS50aGVuKChyZXMpID0+IHt9KTsKICAgIH0sCiAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoKSB7CiAgICAgIHRoaXMudXBsb2FkTW9kYWwgPSBmYWxzZTsKICAgICAgdGhpcy5pbml0RGF0YSgpOwogICAgfSwKICAgIGluaXREYXRhOiBmdW5jdGlvbiBpbml0RGF0YSgpIHsKICAgICAgdGhpcy5ydWxlRm9ybS50eXBlID0gMDsKICAgICAgdGhpcy5ydWxlRm9ybS5yZWdpb24gPSAwOwogICAgICB0aGlzLnNjYW5Ub2tlbiA9ICcnOwogICAgICB0aGlzLndlYkltZ1VybCA9ICcnOwogICAgICB0aGlzLnJ1bGVGb3JtLmltZ0xpc3QgPSBbXTsKICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWUpOwogICAgICB0aGlzLnRpbWUgPSB1bmRlZmluZWQ7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["getCategoryListApi","moveApi","onlineUpload","scanUploadCode","uploadImages","Setting","getCookies","scanUploadQrcode","scanUploadGet","QRCode","compressImg","isPicUpload","name","props","categoryList","default","categoryId","isPage","isIframe","watch","uploadModal","handler","newVal","ruleForm","region","immediate","data","webImgUrl","fileUrl","apiBaseURL","header","uploadData","checkStrictly","emitPath","label","value","disabled","type","imgList","rules","required","message","trigger","qrcode","scanToken","limit","loading","time","undefined","created","mounted","beforeDestroy","clearInterval","methods","radioChange","_this","setInterval","e","_this2","then","res","creatQrCode","url","_this3","token","split","getImg","$message","error","indexOf","push","submitUpload","_this4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","i","file","urls","attId","wrap","_callee$","_context","prev","next","length","abrupt","warning","pid","raw","uploadItem","success","$emit","initData","map","images","catch","err","msg","att_id","stop","_this5","Promise","resolve","reject","formData","FormData","append","code","duration","beforeUpload","console","log","$refs","qrCodeUrl","innerHTML","text","width","height","colorDark","colorLight","correctLevel","CorrectLevel","H","handleWebRemove","index","findIndex","splice","handleRemove","handlePictureCardPreview","dialogImageUrl","dialogVisible","handleDownload","fileChange","fileList","_this6","_callee2","_callee2$","_context2","size","comImg","uid","loadData","item","callback","handleChange","handleDragStart","dragging","handleDragEnd","handleDragOver","dataTransfer","dropEffect","handleDragEnter","effectAllowed","newItems","_toConsumableArray","src","dst","apply","concat","closed","clear"],"sources":["src/components/uploadImg/index.vue"],"sourcesContent":["<template>\n  <div>\n    <el-dialog\n        title=\"上传图片\"\n        :visible.sync=\"uploadModal\"\n        :append-to-body=\"true\"\n        :width=\"isIframe ? '100%' : '1024px'\"\n        :fullscreen=\"isIframe\"\n        @close=\"closed\"\n    >\n      <div class=\"main\" v-loading=\"loading\">\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n          <el-form-item label=\"上传方式：\" prop=\"type\">\n            <el-radio-group v-model=\"ruleForm.type\" @input=\"radioChange(ruleForm.type)\">\n              <el-radio :label=\"0\">本地上传</el-radio>\n              <!--   <el-radio :label=\"1\">网络上传</el-radio>\n                 <el-radio :label=\"2\">扫码上传</el-radio> -->\n            </el-radio-group>\n          </el-form-item>\n          <!--       <el-form-item label=\"上传至分组：\" prop=\"region\" v-show=\"ruleForm.type == 0 || ruleForm.type == 1\">\n                   <el-cascader\n                     class=\"form-width\"\n                     v-model=\"ruleForm.region\"\n                     :props=\"props\"\n                     :options=\"categoryList\"\n                     @change=\"handleChange\"\n                   ></el-cascader>\n                 </el-form-item> -->\n          <!--          <el-form-item label=\"网络图片：\" prop=\"region\" v-if=\"ruleForm.type == 1\">\n                      <el-input class=\"form-width\" v-model=\"webImgUrl\" placeholder=\"请网络图片地址\"></el-input>\n                      <span class=\"tq-text\" @click=\"getImg\">提取照片</span>\n                    </el-form-item> -->\n          <el-form-item label=\"上传图片：\" prop=\"region\" v-if=\"ruleForm.type == 0\">\n            <div class=\"acea-row\">\n              <div class=\"uploadCont\">\n                <el-upload\n                    ref=\"upload\"\n                    :action=\"fileUrl\"\n                    list-type=\"picture-card\"\n                    :on-change=\"fileChange\"\n                    :file-list=\"ruleForm.imgList\"\n                    :auto-upload=\"false\"\n                    :data=\"uploadData\"\n                    :headers=\"header\"\n                    :multiple=\"true\"\n                    :limit=\"limit\"\n                >\n                  <i slot=\"default\" class=\"el-icon-plus\"></i>\n                  <div\n                      slot=\"file\"\n                      slot-scope=\"{ file }\"\n                      draggable=\"false\"\n                      @dragstart=\"handleDragStart($event, file)\"\n                      @dragover=\"handleDragOver($event, file)\"\n                      @dragenter=\"handleDragEnter($event, file)\"\n                      @dragend=\"handleDragEnd($event, file)\"\n                  >\n                    <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\" />\n                    <i class=\"el-icon-error btndel\" @click=\"handleWebRemove(file)\" />\n                  </div>\n                </el-upload>\n                <div class=\"tips\">建议上传图片最大宽度750px，不超过3MB；仅支持jpeg、png格式，可拖拽调整上传顺序</div>\n              </div>\n            </div>\n          </el-form-item>\n          <template v-if=\"ruleForm.type == 1\">\n            <div class=\"img-box pl100\">\n              <div\n                  v-for=\"(item, index) in ruleForm.imgList\"\n                  :key=\"index\"\n                  class=\"pictrue\"\n                  draggable=\"false\"\n                  @dragstart=\"handleDragStart($event, item)\"\n                  @dragover.prevent=\"handleDragOver($event, item)\"\n                  @dragenter=\"handleDragEnter($event, item)\"\n                  @dragend=\"handleDragEnd($event, item)\"\n              >\n                <img :src=\"item.url\" />\n                <i class=\"el-icon-error btndel\" @click=\"handleRemove(index)\" />\n              </div>\n            </div>\n          </template>\n          <!--       <div class=\"code-image\" v-if=\"ruleForm.type == 2\">\n                   <div class=\"left\">\n                     <el-form-item label=\"上传至分组：\" prop=\"region\">\n                       <el-cascader\n                         class=\"form-width\"\n                         v-model=\"ruleForm.region\"\n                         :props=\"props\"\n                         :options=\"categoryList\"\n                         @change=\"handleChange\"\n                       ></el-cascader>\n                     </el-form-item>\n                     <el-form-item label=\"二维码：\" prop=\"region\">\n                       <div class=\"code\" ref=\"qrCodeUrl\"></div>\n                       <div class=\"trip\">扫描二维码，快速上传手机图片</div>\n                       <div class=\"trip-small\">建议使用手机浏览器</div>\n                     </el-form-item>\n                   </div>\n                   <div class=\"right\">\n                     <el-button size=\"small\" @click=\"scanUploadGet\">刷新图库</el-button>\n                     <div class=\"tip\">刷新图库按钮，可显示移动端上传成功的图片</div>\n                     <div class=\"img-box\">\n                       <div\n                         v-for=\"(item, index) in ruleForm.imgList\"\n                         :key=\"index\"\n                         class=\"pictrue\"\n                         draggable=\"false\"\n                         @dragstart=\"handleDragStart($event, item)\"\n                         @dragover.prevent=\"handleDragOver($event, item)\"\n                         @dragenter=\"handleDragEnter($event, item)\"\n                         @dragend=\"handleDragEnd($event, item)\"\n                       >\n                         <img :src=\"item.att_dir\" />\n                         <i class=\"el-icon-error btndel\" @click=\"handleWebRemove(item)\" />\n                       </div>\n                     </div>\n                   </div>\n                 </div> -->\n        </el-form>\n      </div>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"clear\">取 消</el-button>\n        <el-button type=\"primary\" :disabled=\"!ruleForm.imgList.length\" @click=\"submitUpload\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getCategoryListApi, moveApi, onlineUpload, scanUploadCode, uploadImages } from '@/api/uploadPictures';\nimport Setting from '@/setting';\nimport { getCookies } from '@/libs/util';\nimport { scanUploadQrcode, scanUploadGet } from '@/api/setting';\nimport QRCode from 'qrcodejs2';\nimport compressImg from '@/utils/compressImg.js';\nimport { isPicUpload } from '@/utils/index';\nexport default {\n  name: '',\n  props: {\n    categoryList: {\n      default: () => {\n        return [];\n      },\n    },\n    categoryId: {\n      default: '',\n    },\n    isPage: {\n      default: false,\n    },\n    isIframe: {\n      default: false,\n    },\n  },\n  watch: {\n    uploadModal: {\n      handler(newVal) {\n        if (newVal) this.ruleForm.region = this.categoryId;\n      },\n      immediate: true,\n    },\n  },\n  data() {\n    return {\n      webImgUrl: '',\n      uploadModal: false,\n      fileUrl: Setting.apiBaseURL + '/file/upload',\n      header: {\n        'Authori-zation': 'Bearer ' + getCookies('token'),\n      },\n      uploadData: {},\n      props: { checkStrictly: true, emitPath: false, label: 'title', value: 'id' },\n      disabled: false,\n      ruleForm: {\n        type: 0,\n        region: '',\n        imgList: [],\n      },\n      rules: { type: [{ required: true, message: '请选择活动资源', trigger: 'change' }] },\n      qrcode: '',\n      scanToken: '',\n      limit: 20,\n      loading: false,\n      time: undefined,\n    };\n  },\n  created() {},\n  mounted() {},\n  beforeDestroy() {\n    clearInterval(this.time);\n    this.time = undefined;\n  },\n  methods: {\n    radioChange(type) {\n      this.ruleForm.type = type;\n      this.ruleForm.imgList = [];\n      clearInterval(this.time);\n      this.time = undefined;\n      if (type == 2) {\n        this.scanUploadQrcode();\n        this.time = setInterval((e) => {\n          this.scanUploadGet();\n        }, 2000);\n      }\n    },\n    scanUploadQrcode() {\n      scanUploadQrcode(this.ruleForm.region).then((res) => {\n        this.creatQrCode(res.data.url);\n        this.scanToken = res.data.url;\n      });\n    },\n    scanUploadGet() {\n      let token = this.scanToken.split('token=')[1];\n      scanUploadGet(token).then((res) => {\n        this.ruleForm.imgList = res.data;\n      });\n    },\n\n    getImg() {\n      if (!this.webImgUrl) {\n        this.$message.error('请先输入图片地址');\n        return;\n      }\n      if (this.webImgUrl.indexOf('.php') != -1) {\n        this.$message.error('请先输入其他图片地址');\n        return;\n      }\n      this.ruleForm.imgList.push({\n        url: this.webImgUrl,\n      });\n    },\n    async submitUpload() {\n      if (!this.ruleForm.imgList.length) return this.$message.warning('请先选择图片');\n      if (this.ruleForm.type == 0) {\n        this.uploadData = {\n          pid: this.ruleForm.region,\n        };\n        if (this.ruleForm.imgList.length) {\n          if (this.loading) return;\n          this.loading = true;\n          for (let i = 0; i < this.ruleForm.imgList.length; i++) {\n            const file = this.ruleForm.imgList[i].raw;\n            await this.uploadItem(file);\n            if (i == this.ruleForm.imgList.length - 1) {\n              this.$message.success('上传成功');\n              this.$emit('uploadSuccess');\n              this.uploadModal = false;\n              this.loading = false;\n              this.initData();\n            }\n          }\n        }\n      } else if (this.ruleForm.type == 1) {\n        let urls = this.ruleForm.imgList.map((e) => {\n          return e.url;\n        });\n        if (urls.length) {\n          if (this.loading) return;\n          this.loading = true;\n          onlineUpload({ pid: this.ruleForm.region, images: urls })\n              .then((res) => {\n                this.$message.success('上传成功');\n                this.$emit('uploadSuccess');\n                this.uploadModal = false;\n                this.loading = false;\n                this.initData();\n              })\n              .catch((err) => {\n                this.loading = false;\n                this.$message.error(err.msg);\n              });\n        }\n      } else if (this.ruleForm.type == 2) {\n        let attId = this.ruleForm.imgList.map((e) => {\n          return e.att_id;\n        });\n        moveApi({ pid: this.ruleForm.region, images: attId }).then((res) => {\n          this.$message.success('上传成功');\n          this.$emit('uploadSuccess');\n          this.uploadModal = false;\n          this.initData();\n        });\n      }\n    },\n    uploadItem(file) {\n      return new Promise((resolve, reject) => {\n        const formData = new FormData();\n        formData.append('uploadFiles', file)\n        uploadImages(formData)\n            .then((res) => {\n              if (res.code == 200) {\n                // this.$emit('uploadImgSuccess', res.data);\n                resolve();\n              } else {\n                this.loading = false;\n                this.$message({\n                  message: '上传失败',\n                  type: 'error',\n                  duration: 1000,\n                });\n              }\n            })\n            .catch((err) => {\n              this.loading = false;\n              this.$message.error(err.msg);\n            });\n      });\n    },\n    beforeUpload(file) {\n      console.log(file);\n    },\n    creatQrCode(url) {\n      this.$refs.qrCodeUrl.innerHTML = '';\n      var qrcode = new QRCode(this.$refs.qrCodeUrl, {\n        text: url, // 需要转换为二维码的内容\n        width: 160,\n        height: 160,\n        colorDark: '#000000',\n        colorLight: '#ffffff',\n        correctLevel: QRCode.CorrectLevel.H,\n      });\n    },\n    handleWebRemove(file) {\n      let index = this.ruleForm.imgList.findIndex((e) => {\n        return e.url == file.url;\n      });\n      this.ruleForm.imgList.splice(index, 1);\n    },\n    handleRemove(index) {\n      this.ruleForm.imgList.splice(index, 1);\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    handleDownload(file) {\n      console.log(file);\n    },\n    async fileChange(file, fileList) {\n      if (isPicUpload(file)) {\n        if (file.size >= 2097152) {\n          await this.comImg(file.raw).then((res) => {\n            fileList.map((e) => {\n              if (e.uid === file.uid) {\n                e.raw = res;\n              }\n            });\n            this.ruleForm.imgList = fileList;\n          });\n        } else {\n          this.ruleForm.imgList = fileList;\n        }\n      } else {\n        // 从ruleForm对象的imgList数组中删除最后一个元素\n        this.ruleForm.imgList.splice(this.ruleForm.imgList.length, 1);\n      }\n    },\n    comImg(file) {\n      return new Promise((resolve, reject) => {\n        compressImg(file).then((res) => {\n          resolve(res);\n        });\n      });\n    },\n    loadData(item, callback) {\n      // getCategoryListApi({\n      //   pid: item.value,\n      // })\n      //   .then(async (res) => {\n      //     const data = res.data.list;\n      //     callback(data);\n      //   })\n      //   .catch((res) => {});\n    },\n    handleChange(e) {\n      if (this.ruleForm.type == 2) this.scanUploadQrcode();\n    },\n    // 移动\n    handleDragStart(e, item) {\n      this.dragging = item;\n    },\n    handleDragEnd(e, item) {\n      this.dragging = null;\n    },\n    handleDragOver(e) {\n      e.dataTransfer.dropEffect = 'move';\n    },\n    handleDragEnter(e, item) {\n      e.dataTransfer.effectAllowed = 'move';\n      if (item === this.dragging) {\n        return;\n      }\n      const newItems = [...this.ruleForm.imgList];\n      const src = newItems.indexOf(this.dragging);\n      const dst = newItems.indexOf(item);\n      newItems.splice(dst, 0, ...newItems.splice(src, 1));\n      this.ruleForm.imgList = newItems;\n    },\n    closed() {\n      this.initData();\n      // scanUploadCode().then((res) => {});\n    },\n    clear() {\n      this.uploadModal = false;\n      this.initData();\n    },\n    initData() {\n      this.ruleForm.type = 0;\n      this.ruleForm.region = 0;\n      this.scanToken = '';\n      this.webImgUrl = '';\n      this.ruleForm.imgList = [];\n      clearInterval(this.time);\n      this.time = undefined;\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n::v-deep .el-dialog__title {\n  font-size: 16px;\n}\n.main {\n  min-height: 410px;\n}\n.pictrue {\n  width: 60px !important;\n  height: 60px !important;\n  border: 1px dotted rgba(0, 0, 0, 0.1);\n  margin-right: 10px;\n  position: relative;\n  cursor: pointer;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n}\n.btndel {\n  position: absolute;\n  z-index: 1;\n  font-size: 18px;\n  right: -5px;\n  top: -5px;\n  color: #999;\n}\n.form-width {\n  width: 280px;\n}\n.tq-text {\n  margin-left: 14px;\n  font-size: 12px;\n  font-weight: 400;\n  color: var(--prev-color-primary);\n  cursor: pointer;\n}\n.uploadCont ::v-deep .el-upload--picture-card,\n::v-deep .el-upload-list--picture-card .el-upload-list__item {\n  width: 64px;\n  height: 64px;\n  line-height: 72px;\n  overflow: inherit;\n}\n.uploadCont ::v-deep .el-upload--picture-card,\n::v-deep .el-upload-list--picture-card .el-upload-list__item img {\n  width: 64px !important;\n  height: 64px !important;\n  border-radius: 6px;\n  object-fit: cover;\n}\n.pl100 {\n  padding-left: 100px;\n}\n.img-box {\n  display: flex;\n  flex-wrap: wrap;\n}\n.tips {\n  font-size: 12px;\n  color: #bbbbbb;\n}\n.code-image {\n  display: flex;\n  margin-top: 12px;\n  .left {\n    display: flex;\n    flex-direction: column;\n    margin-right: 20px;\n    align-items: center;\n    .code {\n      border: 1px solid #dddddd;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 200px;\n      height: 200px;\n      border-radius: 4px;\n      .code-img {\n        width: 160px;\n        height: 160px;\n      }\n    }\n    .form-width {\n      width: 200px;\n    }\n    .code {\n      margin-bottom: 14px;\n    }\n    .trip {\n      color: #333333;\n      text-align: center;\n      line-height: 18px;\n    }\n    .trip-small {\n      font-size: 12px;\n      font-weight: 400;\n      color: #bbbbbb;\n      text-align: center;\n      line-height: 16px;\n    }\n  }\n  .right {\n    margin-top: 62px;\n    .tip {\n      font-size: 12px;\n      font-weight: 400;\n      color: #bbbbbb;\n      margin: 10px 0;\n    }\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}