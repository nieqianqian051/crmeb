{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/thread-loader/dist/cjs.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/marketing/storeIntegralOrder/handle/autoSend.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/marketing/storeIntegralOrder/handle/autoSend.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/thread-loader/dist/cjs.js","mtime":1746465018446},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL1VzZXJzL25pZXFpYW5xaWFuL0Rvd25sb2Fkcy94aW54aWFuZ211L0NSTUVCL3RlbXBsYXRlL2FkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL25pZXFpYW5xaWFuL0Rvd25sb2Fkcy94aW54aWFuZ211L0NSTUVCL3RlbXBsYXRlL2FkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudGVzdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgeyBnZXRFeHByZXNzRGF0YSwgb3JkZXJFeHByZXNzVGVtcCwgb3JkZXJEZWxpdmVyeUxpc3QsIG9yZGVyU2hlZXRJbmZvLCBvdGhlckJhdGNoRGVsaXZlcnkgfSBmcm9tICdAL2FwaS9vcmRlcic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnb3JkZXJTZW5kJywKICBwcm9wczogewogICAgaXNBbGw6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxCiAgICB9LAogICAgaWRzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICB3aGVyZTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvcm1JdGVtOiB7CiAgICAgICAgdHlwZTogJzEnLAogICAgICAgIGV4cHJlc3NfcmVjb3JkX3R5cGU6ICcyJywKICAgICAgICBkZWxpdmVyeV9uYW1lOiAnJywKICAgICAgICBkZWxpdmVyeV9pZDogJycsCiAgICAgICAgZXhwcmVzc190ZW1wX2lkOiAnJywKICAgICAgICB0b19uYW1lOiAnJywKICAgICAgICB0b190ZWw6ICcnLAogICAgICAgIHRvX2FkZHI6ICcnLAogICAgICAgIHNoX2RlbGl2ZXJ5OiAnJywKICAgICAgICBmaWN0aXRpb3VzX2NvbnRlbnQ6ICcnCiAgICAgIH0sCiAgICAgIG1vZGFsczogZmFsc2UsCiAgICAgIGV4cHJlc3M6IFtdLAogICAgICBleHByZXNzVGVtcDogW10sCiAgICAgIGRlbGl2ZXJ5TGlzdDogW10sCiAgICAgIHRlbXA6IHt9LAogICAgICBleHBvcnRfb3BlbjogdHJ1ZQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICAnZm9ybUl0ZW0uZXhwcmVzc190ZW1wX2lkJzogZnVuY3Rpb24gZm9ybUl0ZW1FeHByZXNzX3RlbXBfaWQodmFsdWUpIHt9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGFuZ2VSYWRpbzogZnVuY3Rpb24gY2hhbmdlUmFkaW8obykgewogICAgICB0aGlzLiRyZWZzLmZvcm1JdGVtLnJlc2V0RmllbGRzKCk7CiAgICAgIHN3aXRjaCAobykgewogICAgICAgIGNhc2UgJzEnOgogICAgICAgICAgdGhpcy5mb3JtSXRlbS5kZWxpdmVyeV9uYW1lID0gJyc7CiAgICAgICAgICB0aGlzLmZvcm1JdGVtLmRlbGl2ZXJ5X2lkID0gJyc7CiAgICAgICAgICB0aGlzLmZvcm1JdGVtLmV4cHJlc3NfdGVtcF9pZCA9ICcnOwogICAgICAgICAgdGhpcy5mb3JtSXRlbS5leHByZXNzX3JlY29yZF90eXBlID0gJzInOwogICAgICAgICAgdGhpcy5leHByZXNzVGVtcCA9IFtdOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnMic6CiAgICAgICAgICB0aGlzLmZvcm1JdGVtLnNoX2RlbGl2ZXJ5ID0gJyc7CiAgICAgICAgICB0aGlzLmZvcm1JdGVtLmV4cHJlc3NfcmVjb3JkX3R5cGUgPSAnMSc7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICczJzoKICAgICAgICAgIHRoaXMuZm9ybUl0ZW0uZmljdGl0aW91c19jb250ZW50ID0gJyc7CiAgICAgICAgICB0aGlzLmZvcm1JdGVtLmV4cHJlc3NfcmVjb3JkX3R5cGUgPSAnMSc7CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfSwKICAgIGNoYW5nZUV4cHJlc3M6IGZ1bmN0aW9uIGNoYW5nZUV4cHJlc3MoaikgewogICAgICBzd2l0Y2ggKGopIHsKICAgICAgICBjYXNlICcyJzoKICAgICAgICAgIHRoaXMuZm9ybUl0ZW0uZGVsaXZlcnlfbmFtZSA9ICcnOwogICAgICAgICAgdGhpcy5mb3JtSXRlbS5leHByZXNzX3RlbXBfaWQgPSAnJzsKICAgICAgICAgIHRoaXMuZXhwcmVzc1RlbXAgPSBbXTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJzEnOgogICAgICAgICAgdGhpcy5mb3JtSXRlbS5kZWxpdmVyeV9uYW1lID0gJyc7CiAgICAgICAgICB0aGlzLmZvcm1JdGVtLmRlbGl2ZXJ5X2lkID0gJyc7CiAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0sCiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoKSB7CiAgICAgIHRoaXMuZm9ybUl0ZW0gPSB7CiAgICAgICAgdHlwZTogJzEnLAogICAgICAgIGV4cHJlc3NfcmVjb3JkX3R5cGU6ICcyJywKICAgICAgICBkZWxpdmVyeV9uYW1lOiAnJywKICAgICAgICBkZWxpdmVyeV9pZDogJycsCiAgICAgICAgZXhwcmVzc190ZW1wX2lkOiAnJywKICAgICAgICBleHByZXNzVGVtcDogW10sCiAgICAgICAgdG9fbmFtZTogJycsCiAgICAgICAgdG9fdGVsOiAnJywKICAgICAgICB0b19hZGRyOiAnJywKICAgICAgICBzaF9kZWxpdmVyeTogJycsCiAgICAgICAgZmljdGl0aW91c19jb250ZW50OiAnJwogICAgICB9OwogICAgfSwKICAgIC8vIOeJqea1geWFrOWPuOWIl+ihqAogICAgZ2V0TGlzdDogZnVuY3Rpb24gZ2V0TGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgZ2V0RXhwcmVzc0RhdGEoMSkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShyZXMpIHsKICAgICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzLmV4cHJlc3MgPSByZXMuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzLmdldFNoZWV0SW5mbygpOwogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgICAgfSkpOwogICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgfTsKICAgICAgfSgpKS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDmj5DkuqQKICAgIHB1dFNlbmQ6IGZ1bmN0aW9uIHB1dFNlbmQobmFtZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgdmFyIGRhdGEgPSBPYmplY3QuYXNzaWduKHRoaXMuZm9ybUl0ZW0pOwogICAgICB2YXIgYXJyID0gW107CiAgICAgIHRoaXMuaWRzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBhcnIucHVzaChpdGVtLmlkKTsKICAgICAgfSk7CiAgICAgIGlmICh0aGlzLmlzQWxsID09IDEpIHsKICAgICAgICBkYXRhLmFsbCA9IDE7CiAgICAgICAgZGF0YS53aGVyZSA9IHRoaXMud2hlcmU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZGF0YS5hbGwgPSAwOwogICAgICAgIGRhdGEuaWRzID0gYXJyOwogICAgICB9CiAgICAgIGlmICh0aGlzLmZvcm1JdGVtLnR5cGUgPT09ICcxJykgewogICAgICAgIGlmICh0aGlzLmZvcm1JdGVtLmRlbGl2ZXJ5X25hbWUgPT09ICcnKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcign5b+r6YCS5YWs5Y+45LiN6IO95Li656m6Jyk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmZvcm1JdGVtLmV4cHJlc3NfdGVtcF9pZCA9PT0gJycpIHsKICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfnlLXlrZDpnaLljZXkuI3og73kuLrnqbonKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZm9ybUl0ZW0udG9fbmFtZSA9PT0gJycpIHsKICAgICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCflr4Tku7bkurrlp5PlkI3kuI3og73kuLrnqbonKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZm9ybUl0ZW0udG9fdGVsID09PSAnJykgewogICAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WvhOS7tuS6uueUteivneS4jeiDveS4uuepuicpOwogICAgICAgIH0gZWxzZSBpZiAoIS9eMSgzfDR8NXw3fDh8OXw2KVxkezl9JC9pLnRlc3QodGhpcy5mb3JtSXRlbS50b190ZWwpKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcign6K+36L6T5YWl5q2j56Gu55qE5omL5py65Y+356CBJyk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmZvcm1JdGVtLnRvX2FkZHIgPT09ICcnKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcign5a+E5Lu25Lq65Zyw5Z2A5LiN6IO95Li656m6Jyk7CiAgICAgICAgfQogICAgICB9CiAgICAgIGlmICh0aGlzLmZvcm1JdGVtLnR5cGUgPT09ICcyJykgewogICAgICAgIGlmICh0aGlzLmZvcm1JdGVtLmV4cHJlc3NfdGVtcF9pZCkgewogICAgICAgICAgdGhpcy5mb3JtSXRlbS5leHByZXNzX3RlbXBfaWQgPSAnJzsKICAgICAgICB9CiAgICAgICAgaWYgKHRoaXMuZm9ybUl0ZW0uc2hfZGVsaXZlcnkgPT09ICcnKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcign6YCB6LSn5Lq65LiN6IO95Li656m6Jyk7CiAgICAgICAgfQogICAgICB9CiAgICAgIG90aGVyQmF0Y2hEZWxpdmVyeShkYXRhKS50aGVuKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocmVzKSB7CiAgICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMyLm1vZGFscyA9IGZhbHNlOwogICAgICAgICAgICAgICAgX3RoaXMyLiRtZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICBfdGhpczIucmVzZXQoKTsKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgICAgfSkpOwogICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gyKSB7CiAgICAgICAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICB9OwogICAgICB9KCkpLmNhdGNoKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczIuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgX3RoaXMyLm1vZGFscyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICBjYW5jZWw6IGZ1bmN0aW9uIGNhbmNlbChuYW1lKSB7CiAgICAgIHRoaXMubW9kYWxzID0gZmFsc2U7CiAgICAgIHRoaXMucmVzZXQoKTsKICAgIH0sCiAgICAvLyDnlLXlrZDpnaLljZXliJfooagKICAgIGV4cHJlc3NDaGFuZ2U6IGZ1bmN0aW9uIGV4cHJlc3NDaGFuZ2UodmFsdWUpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CiAgICAgIHZhciBleHByZXNzSXRlbSA9IHRoaXMuZXhwcmVzcy5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0udmFsdWUgPT09IHZhbHVlOwogICAgICB9KTsKICAgICAgaWYgKCFleHByZXNzSXRlbSkgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB0aGlzLmZvcm1JdGVtLmRlbGl2ZXJ5X2NvZGUgPSBleHByZXNzSXRlbS5jb2RlOwogICAgICBpZiAodGhpcy5mb3JtSXRlbS50eXBlID09PSAnMScpIHsKICAgICAgICB0aGlzLmV4cHJlc3NUZW1wID0gW107CiAgICAgICAgdGhpcy5mb3JtSXRlbS5leHByZXNzX3RlbXBfaWQgPSAnJzsKICAgICAgICBvcmRlckV4cHJlc3NUZW1wKHsKICAgICAgICAgIGNvbTogdGhpcy5mb3JtSXRlbS5kZWxpdmVyeV9jb2RlCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpczMuZXhwcmVzc1RlbXAgPSByZXMuZGF0YTsKICAgICAgICAgIGlmICghcmVzLmRhdGEubGVuZ3RoKSB7CiAgICAgICAgICAgIF90aGlzMy4kbWVzc2FnZS5lcnJvcign6K+36YWN572u5L2g5omA6YCJ5b+r6YCS5YWs5Y+455qE55S15a2Q6Z2i5Y2VJyk7CiAgICAgICAgICB9CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgICAgX3RoaXMzLiRtZXNzYWdlLmVycm9yKGVyci5tc2cpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgZ2V0RGVsaXZlcnlMaXN0OiBmdW5jdGlvbiBnZXREZWxpdmVyeUxpc3QoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwogICAgICBvcmRlckRlbGl2ZXJ5TGlzdCgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzNC5kZWxpdmVyeUxpc3QgPSByZXMuZGF0YS5saXN0OwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgX3RoaXM0LiRtZXNzYWdlLmVycm9yKGVyci5tc2cpOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRTaGVldEluZm86IGZ1bmN0aW9uIGdldFNoZWV0SW5mbygpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CiAgICAgIG9yZGVyU2hlZXRJbmZvKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIGRhdGEgPSByZXMuZGF0YTsKICAgICAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkgewogICAgICAgICAgaWYgKGRhdGEuaGFzT3duUHJvcGVydHkoa2V5KSAmJiBrZXkgIT09ICdleHByZXNzX3RlbXBfaWQnKSB7CiAgICAgICAgICAgIF90aGlzNS5mb3JtSXRlbVtrZXldID0gZGF0YVtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBfdGhpczUuZXhwb3J0X29wZW4gPSBkYXRhLmV4cG9ydF9vcGVuID09PSB1bmRlZmluZWQgPyB0cnVlIDogZGF0YS5leHBvcnRfb3BlbjsKICAgICAgICBpZiAoIV90aGlzNS5leHBvcnRfb3BlbikgewogICAgICAgICAgX3RoaXM1LmZvcm1JdGVtLmV4cHJlc3NfcmVjb3JkX3R5cGUgPSAnMSc7CiAgICAgICAgfQogICAgICAgIF90aGlzNS5mb3JtSXRlbS50b19hZGRyID0gZGF0YS50b19hZGQ7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBfdGhpczUuJG1lc3NhZ2UuZXJyb3IoZXJyLm1zZyk7CiAgICAgIH0pOwogICAgfSwKICAgIHNoRGVsaXZlcnlDaGFuZ2U6IGZ1bmN0aW9uIHNoRGVsaXZlcnlDaGFuZ2UodmFsdWUpIHsKICAgICAgdmFyIGRlbGl2ZXJ5SXRlbSA9IHRoaXMuZGVsaXZlcnlMaXN0LmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5pZCA9PT0gdmFsdWU7CiAgICAgIH0pOwogICAgICB0aGlzLmZvcm1JdGVtLnNoX2RlbGl2ZXJ5X25hbWUgPSBkZWxpdmVyeUl0ZW0ud3hfbmFtZTsKICAgICAgdGhpcy5mb3JtSXRlbS5zaF9kZWxpdmVyeV9pZCA9IGRlbGl2ZXJ5SXRlbS5waG9uZTsKICAgICAgdGhpcy5mb3JtSXRlbS5zaF9kZWxpdmVyeV91aWQgPSBkZWxpdmVyeUl0ZW0udWlkOwogICAgfSwKICAgIGV4cHJlc3NUZW1wQ2hhbmdlOiBmdW5jdGlvbiBleHByZXNzVGVtcENoYW5nZSh0ZW1wSWQpIHsKICAgICAgdGhpcy50ZW1wID0gdGhpcy5leHByZXNzVGVtcC5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIHRlbXBJZCA9PT0gaXRlbS50ZW1wX2lkOwogICAgICB9KTsKICAgIH0sCiAgICBwcmV2aWV3OiBmdW5jdGlvbiBwcmV2aWV3KCkgewogICAgICB0aGlzLiRyZWZzLnZpZXdlci4kdmlld2VyLnNob3coKTsKICAgIH0KICB9Cn07"},null]}