{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/statistic/order/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/statistic/order/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["cardsData","echartsNew","getBasic","getTrend","getChannel","getType","formatDate","echartsFrom","timeOptions","name","components","data","timeVal","style","height","infoList","infoList2","echartLeft","echartRight","loading","loading2","formValidate","time","cardLists","col","count","className","optionData","spinShow","tabList","tabList2","pickerOptions","created","end","Date","start","setTime","getFullYear","getMonth","getDate","onInit","methods","onSelectDate","e","timeG","dd","d","datetime","getHours","getMinutes","getSeconds","_this","then","res","arr","map","i","index","_this2","list","_this3","selectChange","onchangeTime","join","_this4","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","legend","xAxis","series","wrap","_callee$","_context","prev","next","item","push","type","itemStyle","normal","color","smooth","tooltip","trigger","axisPointer","label","backgroundColor","x","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","boundaryGap","axisLabel","interval","rotate","textStyle","yAxis","axisLine","show","axisTick","splitLine","lineStyle","stop","_x","apply","arguments","catch","$message","error","msg"],"sources":["src/pages/statistic/order/index.vue"],"sourcesContent":["<template>\n  <div v-loading=\"spinShow\">\n    <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mb-16\">\n      <div class=\"acea-row row-middle\">\n        <span class=\"label_text\">时间选择：</span>\n        <el-date-picker\n          clearable\n          v-model=\"timeVal\"\n          type=\"daterange\"\n          :editable=\"false\"\n          @change=\"onchangeTime\"\n          format=\"yyyy/MM/dd\"\n          value-format=\"yyyy/MM/dd\"\n          start-placeholder=\"开始日期\"\n          end-placeholder=\"结束日期\"\n          :picker-options=\"pickerOptions\"\n          style=\"width: 250px\"\n          class=\"mr20\"\n        ></el-date-picker>\n      </div>\n    </el-card>\n    <cards-data :cardLists=\"cardLists\" v-if=\"cardLists.length >= 0\"></cards-data>\n    <el-card class=\"ivu-mb-16\" :bordered=\"false\" shadow=\"never\">\n      <h4 class=\"statics-header-title\">营业趋势</h4>\n      <echarts-new :option-data=\"optionData\" :styles=\"style\" height=\"100%\" width=\"100%\" v-if=\"optionData\"></echarts-new>\n    </el-card>\n    <div class=\"code-row-bg\">\n      <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt\">\n        <div class=\"acea-row row-between-wrapper\">\n          <h4 class=\"statics-header-title\">订单来源分析</h4>\n          <div class=\"change-style\" @click=\"echartLeft = !echartLeft\">切换样式</div>\n        </div>\n        <div class=\"ech-box\">\n          <echarts-from v-if=\"echartLeft\" ref=\"visitChart\" :infoList=\"infoList\" echartsTitle=\"circle\"></echarts-from>\n          <el-table\n            v-show=\"!echartLeft\"\n            ref=\"selection\"\n            :data=\"tabList\"\n            v-loading=\"loading\"\n            empty-text=\"暂无数据\"\n            highlight-current-row\n          >\n            <el-table-column type=\"index\" label=\"序号\" width=\"50\"> </el-table-column>\n            <el-table-column label=\"来源\" min-width=\"80\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.name }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"订单数\" min-width=\"130\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.value }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"占比率\" min-width=\"130\">\n              <template slot-scope=\"scope\">\n                <div class=\"percent-box\">\n                  <div class=\"line\">\n                    <div class=\"bg\"></div>\n                    <div class=\"percent\" :style=\"'width:' + scope.row.percent + '%;'\"></div>\n                  </div>\n                  <div class=\"num\">{{ scope.row.percent }}%</div>\n                </div>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n      </el-card>\n      <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt\">\n        <div class=\"acea-row row-between-wrapper\">\n          <h4 class=\"statics-header-title\">订单类型分析</h4>\n          <div class=\"change-style\" @click=\"echartRight = !echartRight\">切换样式</div>\n        </div>\n        <div class=\"ech-box\">\n          <echarts-from v-if=\"echartRight\" ref=\"visitChart\" :infoList=\"infoList2\" echartsTitle=\"circle\"></echarts-from>\n          <el-table\n            v-show=\"!echartRight\"\n            ref=\"selection\"\n            :data=\"tabList2\"\n            v-loading=\"loading2\"\n            empty-text=\"暂无数据\"\n            highlight-current-row\n          >\n            <el-table-column type=\"index\" label=\"序号\" width=\"50\"> </el-table-column>\n            <el-table-column label=\"来源\" min-width=\"80\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.name }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"金额\" min-width=\"130\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.value }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"占比率\" min-width=\"130\">\n              <template slot-scope=\"scope\">\n                <div class=\"percent-box\">\n                  <div class=\"line\">\n                    <div class=\"bg\"></div>\n                    <div class=\"percent\" :style=\"'width:' + scope.row.percent + '%;'\"></div>\n                  </div>\n                  <div class=\"num\">{{ scope.row.percent }}%</div>\n                </div>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport cardsData from '@/components/cards/cards';\nimport echartsNew from '@/components/echartsNew/index';\nimport { getBasic, getTrend, getChannel, getType } from '@/api/statistic';\nimport { formatDate } from '@/utils/validate';\nimport echartsFrom from '@/components/echarts/index';\nimport timeOptions from '@/libs/timeOptions';\n\nexport default {\n  name: 'index',\n  components: { cardsData, echartsNew, echartsFrom },\n  data() {\n    return {\n      timeVal: [],\n      style: { height: '400px' },\n      infoList: {},\n      infoList2: {},\n      echartLeft: true,\n      echartRight: false,\n      loading: false,\n      loading2: false,\n      formValidate: {\n        time: '',\n      },\n      cardLists: [\n        {\n          col: 6,\n          count: 0,\n          name: '订单量',\n          className: 'icondingdanliang',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '订单销售额',\n          className: 'icondingdanjine',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '退款订单数',\n          className: 'icontuikuandingdanliang',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '退款金额',\n          className: 'icontuikuanjine',\n        },\n      ],\n      optionData: {},\n      spinShow: false,\n      tabList: [],\n      tabList2: [],\n      pickerOptions: timeOptions,\n    };\n  },\n  created() {\n    const end = new Date();\n    const start = new Date();\n    start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 29)));\n    this.timeVal = [start, end];\n    this.formValidate.time = formatDate(start, 'yyyy/MM/dd') + '-' + formatDate(end, 'yyyy/MM/dd');\n    this.onInit();\n  },\n  methods: {\n    onInit() {\n      this.getBasic();\n      this.getTrend();\n      this.getChannel();\n      this.getType();\n    },\n    onSelectDate(e) {\n      this.formValidate.time = e;\n      this.onInit();\n    },\n    timeG(dd) {\n      var d = new Date(dd);\n      var datetime =\n        d.getFullYear() +\n        '-' +\n        (d.getMonth() + 1) +\n        '-' +\n        d.getDate() +\n        ' ' +\n        d.getHours() +\n        ':' +\n        d.getMinutes() +\n        ':' +\n        d.getSeconds();\n      return datetime;\n    },\n    getBasic() {\n      getBasic(this.formValidate).then((res) => {\n        let arr = ['pay_count', 'pay_price', 'refund_count', 'refund_price'];\n        this.cardLists.map((i, index) => {\n          i.count = res.data[arr[index]];\n        });\n      });\n    },\n    getChannel() {\n      this.loading = true;\n      getChannel(this.formValidate).then((res) => {\n        this.infoList = res.data;\n        this.tabList = res.data.list;\n        this.loading = false;\n      });\n    },\n    getType() {\n      this.loading2 = true;\n      getType(this.formValidate).then((res) => {\n        this.infoList2 = res.data;\n        this.tabList2 = res.data.list;\n        this.loading2 = false;\n      });\n    },\n    selectChange(e) {},\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.formValidate.time = this.timeVal ? this.timeVal.join('-') : '';\n      this.name = this.formValidate.time;\n      this.getBasic();\n      this.getTrend();\n      this.getChannel();\n      this.getType();\n    },\n    // 统计图\n    getTrend() {\n      this.spinShow = true;\n      getTrend(this.formValidate)\n        .then(async (res) => {\n          let legend = res.data.series.map((item) => {\n            return item.name;\n          });\n          let xAxis = res.data.xAxis;\n          let col = ['#5B8FF9', '#5AD8A6', '#FFAB2B', '#5D7092'];\n          let series = [];\n          res.data.series.map((item, index) => {\n            series.push({\n              name: item.name,\n              type: 'line',\n              data: item.data,\n              itemStyle: {\n                normal: {\n                  color: col[index],\n                },\n              },\n              smooth: 0,\n            });\n          });\n          this.optionData = {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  backgroundColor: '#6a7985',\n                },\n              },\n            },\n            legend: {\n              x: 'center',\n              data: legend,\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true,\n            },\n            toolbox: {\n              feature: {\n                saveAsImage: {},\n              },\n            },\n            xAxis: {\n              type: 'category',\n              boundaryGap: true,\n              // axisTick:{\n              //     show:false\n              // },\n              // axisLine:{\n              //     show:false\n              // },\n              // splitLine: {\n              //     show: false\n              // },\n              axisLabel: {\n                interval: 0,\n                rotate: 40,\n                textStyle: {\n                  color: '#000000',\n                },\n              },\n              data: xAxis,\n            },\n            yAxis: {\n              type: 'value',\n              axisLine: {\n                show: false,\n              },\n              axisTick: {\n                show: false,\n              },\n              axisLabel: {\n                textStyle: {\n                  color: '#7F8B9C',\n                },\n              },\n              splitLine: {\n                show: true,\n                lineStyle: {\n                  color: '#F5F7F9',\n                },\n              },\n            },\n            series: series,\n          };\n          this.spinShow = false;\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n          this.spinShow = false;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.cl {\n  margin-right: 20px;\n}\n.code-row-bg {\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n}\n.code-row-bg .ivu-mt {\n  width: calc(50% - 10px);\n}\n.ech-box {\n  margin-top: 10px;\n}\n.change-style {\n  border: 1px solid #ccc;\n  border-radius: 15px;\n  padding: 0px 10px;\n  cursor: pointer;\n}\n.percent-box {\n  display: flex;\n  align-items: center;\n  padding-right: 10px;\n}\n.line {\n  width: 100%;\n  position: relative;\n}\n.bg {\n  position: absolute;\n  width: 100%;\n  height: 8px;\n  border-radius: 8px;\n  background-color: #f2f2f2;\n}\n.percent {\n  position: absolute;\n  border-radius: 5px;\n  height: 8px;\n  background-color: var(--prev-color-primary);\n  z-index: 9999;\n}\n.num {\n  white-space: nowrap;\n  margin: 0 10px;\n  width: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}