{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/crud/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/crud/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapState","crudApi","getList","getCreateApi","getStatusApi","getEditApi","name","data","grid","xl","lg","md","sm","xs","loading","columns","readFields","all","from","page","limit","dataList","total","methodApi","curdKey","dialogTableVisible","info","search","computed","_objectSpread","labelWidth","isMobile","undefined","labelPosition","beforeRouteUpdate","to","next","getCrudApi","params","table_name","created","$route","methods","show","row","_this","url","read","replace","id","then","res","catch","$Message","error","msg","onchangeIsShow","field","_this2","status","value","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","$message","success","stop","_x","apply","arguments","searchs","change","e","$forceUpdate","tableName","_this3","route","key","map","item","push","title","slot","fixed","width","align","from_type","render","h","class","directives","image","imageH","add","_this4","create","$modalForm","_this5","index","_ref2","_callee2","_callee2$","_context2","list","count","_x2","edit","_this6","del","tit","num","_this7","delete","delfromData","method","ids","$modalSure"],"sources":["src/pages/crud/index.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card shadow=\"never\" class=\"ivu-mt\" :body-style=\"{ padding: 0 }\">\n      <div class=\"padding-add\">\n        <el-form\n          v-if=\"search.length\"\n          ref=\"curlFrom\"\n          :model=\"from\"\n          :label-width=\"labelWidth\"\n          :label-position=\"labelPosition\"\n          inline\n          @submit.native.prevent\n        >\n          <el-form-item :label=\"item.name + ':'\" v-for=\"(item, index) in search\" :key=\"index\">\n            <el-input\n              v-if=\"item.type === 'input'\"\n              v-model=\"from[item.field]\"\n              :placeholder=\"'请输入' + item.name\"\n              class=\"form_content_width\"\n              @input=\"change($event)\"\n            />\n            <el-date-picker\n              v-else-if=\"item.type === 'date-picker'\"\n              :editable=\"false\"\n              clearabl\n              @change=\"searchs\"\n              v-model=\"from[item.field]\"\n              format=\"yyyy/MM/dd\"\n              type=\"daterange\"\n              value-format=\"yyyy/MM/dd\"\n              start-placeholder=\"开始日期\"\n              end-placeholder=\"结束日期\"\n              style=\"width: 250px\"\n            ></el-date-picker>\n            <el-select\n              v-else-if=\"item.type === 'select'\"\n              v-model=\"from[item.field]\"\n              placeholder=\"请选择\"\n              clearable\n              @change=\"searchs\"\n              class=\"form_content_width\"\n            >\n              <el-option v-for=\"(val, i) in item.option\" :value=\"val.value\" :label=\"val.label\" :key=\"i\"></el-option>\n            </el-select>\n          </el-form-item>\n          <!-- <template v-for=\"(item, index) in search\">\n            <el-form-item :label=\"item.name + ':'\" label-for=\"name\" v-if=\"item.type === 'input'\" :key=\"index\">\n              <el-input v-model=\"from[item.field]\" :placeholder=\"'请输入' + item.name\" class=\"form_content_width\"/>\n            </el-form-item>\n            <el-form-item :label=\"item.name + ':'\" v-else-if=\"item.type === 'date-picker'\" :key=\"index\">\n              <el-date-picker\n                  :editable=\"false\"\n                  clearabl\n                  @change=\"searchs\"\n                  v-model=\"from[item.field]\"\n                  format=\"yyyy/MM/dd\"\n                  type=\"daterange\"\n                  value-format=\"yyyy/MM/dd\"\n                  start-placeholder=\"开始日期\"\n                  end-placeholder=\"结束日期\"\n                  style=\"width: 250px\"\n              ></el-date-picker>\n            </el-form-item>\n            <el-form-item\n                :label=\"item.name + ':'\"\n                :label-for=\"item.field\"\n                v-else-if=\"item.type === 'select'\"\n                :key=\"index\"\n            >\n              <el-select\n                  v-model=\"from[item.field]\"\n                  placeholder=\"请选择\"\n                  clearable\n                  @change=\"searchs\"\n                  class=\"form_content_width\"\n              >\n                <el-option v-for=\"(val, i) in item.option\" :value=\"val.value\" :label=\"val.label\" :key=\"i\"></el-option>\n              </el-select>\n            </el-form-item>\n          </template> -->\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchs\">查询</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n    </el-card>\n    <el-card shadow=\"never\" class=\"ivu-mt\" :class=\"search.length ? 'mt16' : ''\">\n      <el-row>\n        <el-col v-bind=\"grid\">\n          <el-button type=\"primary\" @click=\"add\">添加</el-button>\n        </el-col>\n      </el-row>\n      <el-table\n          :data=\"dataList\"\n          ref=\"table\"\n          class=\"mt14\"\n          v-loading=\"loading\"\n          no-userFrom-text=\"暂无数据\"\n          no-filtered-userFrom-text=\"暂无筛选结果\"\n      >\n        <el-table-column :label=\"item.title\" :min-width=\"item.minWidth\" v-for=\"(item, index) in columns\" :key=\"index\">\n          <template slot-scope=\"scope\">\n            <template v-if=\"item.key\">\n              <span>{{ scope.row[item.key] }}</span>\n            </template>\n            <template v-else-if=\"item.from_type == 'frameImageOne'\">\n              <div class=\"tabBox_img\" v-viewer>\n                <img v-lazy=\"scope.row[item.slot]\"/>\n              </div>\n            </template>\n            <template v-else-if=\"item.from_type == 'frameImages'\">\n              <div class=\"frame-images\">\n                <div class=\"tabBox_img\" v-viewer v-for=\"(item, index) in scope.row[item.slot]\" :key=\"index\">\n                  <img v-lazy=\"item\"/>\n                </div>\n              </div>\n            </template>\n            <template v-else-if=\"item.from_type == 'dateTimeRange'\">\n              <span>{{ scope.row[item.slot][0] }}--{{ scope.row[item.slot][1] }}</span>\n            </template>\n            <template v-else-if=\"item.slot === 'action'\">\n              <a @click=\"show(scope.row)\">详情</a>\n              <el-divider direction=\"vertical\"/>\n              <a @click=\"edit(scope.row)\">修改</a>\n              <el-divider direction=\"vertical\"></el-divider>\n              <a @click=\"del(scope.row, '删除', scope.$index)\">删除</a>\n            </template>\n            <template v-else-if=\"item.from_type === 'switches'\">\n              <el-switch\n                  :active-value=\"1\"\n                  :inactive-value=\"0\"\n                  v-model=\"scope.row[item.slot]\"\n                  :value=\"scope.row[item.slot]\"\n                  size=\"large\"\n                  @change=\"onchangeIsShow(scope.row,item.slot)\"\n              >\n              </el-switch>\n            </template>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"acea-row row-right page\">\n        <pagination v-if=\"total\" :total=\"total\" :page.sync=\"from.page\" :limit.sync=\"from.limit\" @pagination=\"getList\"/>\n      </div>\n    </el-card>\n\n    <el-dialog title=\"查看详情\" :visible.sync=\"dialogTableVisible\" v-if=\"dialogTableVisible\">\n      <el-descriptions :title=\"readFields.name\">\n        <el-descriptions-item :label=\"item.comment\" v-for=\"(item, index) in readFields.all\" :key=\"index\">\n          <div v-if=\"item.from_type == 'frameImageOne'\">\n            <div class=\"tabBox_img\" v-viewer>\n              <img v-lazy=\"info[item.field]\"/>\n            </div>\n          </div>\n          <div v-else-if=\"item.from_type == 'frameImages'\">\n            <div class=\"frame-images\">\n              <div class=\"tabBox_img\" v-viewer v-for=\"(item, index) in info[item.field]\" :key=\"index\">\n                <img v-lazy=\"item\"/>\n              </div>\n            </div>\n          </div>\n          <div v-else-if=\"item.from_type == 'dateTimeRange'\">\n            <span>{{ info[item.field][0] }}--{{ info[item.field][1] }}</span>\n          </div>\n          <div v-else>{{ info[item.field] }}</div>\n        </el-descriptions-item>\n      </el-descriptions>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex';\nimport {crudApi, getList, getCreateApi, getStatusApi, getEditApi} from '@/api/crud.js';\n\nexport default {\n  name: 'crud_index',\n  data() {\n    return {\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      loading: false,\n      columns: [],\n      readFields: {\n        name: '',\n        all: [],\n      },\n      from: {\n        page: 1,\n        limit: 15,\n      },\n      dataList: [],\n      total: 0,\n      methodApi: {},\n      curdKey: '',\n      dialogTableVisible: false,\n      info: {},\n      search: [],\n    };\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : '80px';\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  beforeRouteUpdate(to, from, next) {\n    this.from.page = 1;\n    this.getCrudApi(to.params.table_name);\n    next();\n  },\n  created() {\n    this.getCrudApi(this.$route.params.table_name);\n  },\n  methods: {\n    show(row) {\n      let url = this.methodApi.read.replace('<id>', row.id);\n      getCreateApi(url)\n          .then((res) => {\n            this.dialogTableVisible = true;\n            this.info = res.data;\n          })\n          .catch((res) => {\n            this.$Message.error(res.msg);\n          });\n    },\n    onchangeIsShow(row, field) {\n      let url = this.methodApi.status.replace('<id>', row.id);\n      getStatusApi(url, {field: field, value: row[field]})\n          .then(async (res) => {\n            this.$message.success(res.msg);\n          })\n          .catch((res) => {\n            this.$message.error(res.msg);\n          });\n    },\n    // 表格搜索\n    searchs() {\n      this.from.page = 1;\n      this.getList();\n    },\n    change(e) {\n      this.$forceUpdate();\n    },\n    getCrudApi(tableName) {\n      crudApi(tableName).then((res) => {\n        this.methodApi = res.data.route;\n        this.curdKey = res.data.key;\n        this.readFields = res.data.readFields;\n        res.data.search.map((item) => {\n          this.from[item.field] = '';\n        });\n        this.search = res.data.search;\n        res.data.columns.push({\n          title: '操作',\n          slot: 'action',\n          fixed: 'right',\n          width: 100,\n          align: 'center',\n        });\n        res.data.columns.map((item) => {\n          if (item.from_type === 'frameImageOne') {\n            item.render = (h, params) => {\n              return h(\n                  'div',\n                  {\n                    class: 'tabBox_img',\n                    directives: [\n                      {\n                        name: 'viewer',\n                      },\n                    ],\n                  },\n                  [\n                    h('img', {\n                      directives: [\n                        {\n                          name: 'lazy',\n                          value: params.row[item.slot],\n                        },\n                      ],\n                    }),\n                  ],\n              );\n            };\n          } else if (item.from_type === 'frameImages') {\n            item.render = (h, params) => {\n              let image = params.row[item.slot] || [];\n              let imageH = [];\n              image.map((item) => {\n                imageH.push(\n                    h('img', {\n                      directives: [\n                        {\n                          name: 'lazy',\n                          value: item,\n                        },\n                      ],\n                    }),\n                );\n              });\n              return h(\n                  'div',\n                  {\n                    class: 'tabBox_img',\n                    directives: [\n                      {\n                        name: 'viewer',\n                      },\n                    ],\n                  },\n                  imageH,\n              );\n            };\n          }\n        });\n        this.columns = res.data.columns;\n        this.getList();\n      });\n    },\n    // 添加\n    add() {\n      let url = this.methodApi.create;\n      this.$modalForm(getCreateApi(url)).then(() => this.getList());\n    },\n    //列表\n    getList() {\n      this.loading = true;\n      let url = this.methodApi.index;\n      getList(url, this.from)\n          .then(async (res) => {\n            let data = res.data;\n            this.dataList = data.list;\n            this.total = data.count;\n            this.loading = false;\n          })\n          .catch((res) => {\n            this.loading = false;\n            this.$message.error(res.msg);\n          });\n    },\n    // 修改\n    edit(row) {\n      let url = this.methodApi.edit.replace('<id>', row[this.curdKey]);\n      this.$modalForm(getEditApi(url)).then(() => this.getList());\n    },\n    // 删除\n    del(row, tit, num) {\n      let url = this.methodApi.delete.replace('<id>', row[this.curdKey]);\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: url,\n        method: 'DELETE',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n          .then((res) => {\n            this.$message.success(res.msg);\n            this.getList();\n          })\n          .catch((res) => {\n            this.$message.error(res.msg);\n          });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.tabBox_img {\n  width: 36px;\n  height: 36px;\n  border-radius: 4px;\n  cursor: pointer;\n  margin: 1px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n.frame-images {\n  display: flex;\n  flex-wrap: wrap;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}