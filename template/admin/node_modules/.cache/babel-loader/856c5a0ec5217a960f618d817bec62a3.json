{"remainingRequest":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/app/upload/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/src/pages/app/upload/index.vue","mtime":1719467759000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/babel.config.js","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/.babelrc","mtime":1679965410000},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/babel-loader/lib/index.js","mtime":1746465024347},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":1746465018509},{"path":"/Users/nieqianqian/Downloads/xinxiangmu/CRMEB/template/admin/node_modules/vue-loader/lib/index.js","mtime":1746465019530}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Setting","scanUpload","compressImg","isPicUpload","name","data","fileUrl","apiBaseURL","imgList","allSize","token","uploading","limit","loading","pid","created","$route","query","document","title","methods","selectImgs","$refs","handleClick","again","submitUpload","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","i","file","wrap","_callee$","_context","prev","next","length","abrupt","raw","uploadItem","$message","warning","stop","handleRemove","_this2","index","findIndex","e","url","splice","$nextTick","s","map","size","_this3","Promise","resolve","reject","formData","FormData","append","then","res","status","message","type","duration","catch","err","error","msg","fileError","fileList","console","log","beforeUpload","fileChange","_this4","_callee2","_callee2$","_context2","comImg","uid","loadData","item","callback","getCategoryListApi","value","_ref","_callee3","_callee3$","_context3","list","_x","apply","arguments"],"sources":["src/pages/app/upload/index.vue"],"sourcesContent":["<template>\n  <div class=\"main\" v-loading=\"loading\">\n    <div v-if=\"uploading\">\n      <div class=\"img-list\" :class=\"{ 'none-card': imgList.length }\">\n        <el-upload\n          ref=\"upload\"\n          :action=\"fileUrl\"\n          list-type=\"picture-card\"\n          :on-change=\"fileChange\"\n          :on-error=\"fileError\"\n          :before-upload=\"beforeUpload\"\n          :file-list=\"imgList\"\n          :auto-upload=\"false\"\n          :multiple=\"true\"\n          :limit=\"limit\"\n          accept=\"image/*\"\n        >\n          <div slot=\"default\" class=\"upload-card\" v-if=\"!imgList.length\">\n            <i class=\"el-icon-plus\"></i>\n            <p class=\"text\">点击选择图片</p>\n          </div>\n          <div slot=\"file\" slot-scope=\"{ file }\">\n            <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\" />\n            <i class=\"el-icon-error btndel\" @click=\"handleRemove(file)\" />\n          </div>\n        </el-upload>\n      </div>\n\n      <div class=\"footer\">\n        <div v-if=\"imgList.length\">共{{ imgList.length }}/{{ limit }}张，{{ (allSize / 1000000).toFixed(2) }} M</div>\n        <div v-else></div>\n        <div class=\"upload-btn\">\n          <div v-if=\"imgList.length < limit\" class=\"btn\" @click=\"selectImgs\">\n            {{ imgList.length ? '继续选择' : '选择图片' }}\n          </div>\n          <div class=\"btn upload\" :class=\"{ 'no-pic': !imgList.length }\" @click=\"submitUpload\">确认上传</div>\n        </div>\n      </div>\n    </div>\n    <div v-else class=\"upload-success\">\n      <div class=\"success\">\n        <img class=\"image\" src=\"@/assets/images/success.jpg\" alt=\"\" />\n      </div>\n      <div class=\"text\">图片上传成功</div>\n      <div class=\"again\" @click=\"again\">继续上传</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Setting from '@/setting';\nimport { scanUpload } from '@/api/setting';\nimport compressImg from '@/utils/compressImg.js';\nimport { isPicUpload } from '@/utils';\n\nexport default {\n  name: 'app_upload_file',\n  data() {\n    return {\n      fileUrl: Setting.apiBaseURL + '/image/scan_upload',\n      imgList: [],\n      allSize: 0,\n      token: '',\n      uploading: true,\n      limit: 20,\n      loading: false,\n      pid: 0,\n    };\n  },\n  created() {\n    this.token = this.$route.query.token;\n    this.pid = this.$route.query.pid;\n    document.title = '手机端扫码上传';\n  },\n  methods: {\n    selectImgs() {\n      if (this.loading) return;\n      this.$refs['upload'].$refs['upload-inner'].handleClick();\n    },\n    again() {\n      this.uploading = true;\n      this.imgList = [];\n      this.allSize = 0;\n    },\n    async submitUpload() {\n      if (this.imgList.length) {\n        if (this.loading) return;\n        this.loading = true;\n        for (let i = 0; i < this.imgList.length; i++) {\n          const file = this.imgList[i].raw;\n          await this.uploadItem(file);\n          if (i == this.imgList.length - 1) {\n            this.uploading = false;\n            this.loading = false;\n          }\n        }\n      } else {\n        this.$message.warning('请先选择图片');\n      }\n    },\n    handleRemove(file) {\n      let index = this.imgList.findIndex((e) => {\n        return e.url == file.url;\n      });\n      this.imgList.splice(index, 1);\n      this.$nextTick((e) => {\n        let s = 0;\n        if (this.imgList.length) {\n          this.imgList.map((e) => {\n            s += e.raw.size;\n          });\n          this.allSize = s;\n        } else {\n          this.allSize = 0;\n        }\n      });\n    },\n\n    uploadItem(file) {\n      return new Promise((resolve, reject) => {\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('uploadToken', this.token);\n        formData.append('pid', this.pid);\n        scanUpload(formData)\n          .then((res) => {\n            if (res.status == 200) {\n              resolve();\n            } else {\n              this.loading = false;\n              this.$message({\n                message: '上传失败',\n                type: 'error',\n                duration: 1000,\n              });\n            }\n          })\n          .catch((err) => {\n            this.loading = false;\n            this.$message.error(err.msg);\n          });\n      });\n    },\n    fileError(err, file, fileList) {\n      console.log(err, file, fileList);\n    },\n    beforeUpload(file) {\n      return isPicUpload(file);\n    },\n    async fileChange(file, fileList) {\n      if (file.size >= 2097152) {\n        await this.comImg(file.raw).then((res) => {\n          fileList.map((e) => {\n            if (e.uid === file.uid) {\n              this.allSize += res.size;\n              e.raw = res;\n            }\n          });\n          this.imgList = fileList;\n        });\n      } else {\n        this.imgList = fileList;\n        let s = 0;\n        if (this.imgList.length) {\n          this.imgList.map((e) => {\n            s += e.raw.size;\n          });\n          this.allSize = s;\n        } else {\n          this.allSize = 0;\n        }\n      }\n    },\n    comImg(file) {\n      return new Promise((resolve, reject) => {\n        compressImg(file).then((res) => {\n          resolve(res);\n        });\n      });\n    },\n    loadData(item, callback) {\n      getCategoryListApi({\n        pid: item.value,\n      })\n        .then(async (res) => {\n          const data = res.data.list;\n          callback(data);\n        })\n        .catch((res) => {});\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.upload-btn {\n  display: flex;\n  align-items: center;\n}\n.img-list {\n  padding: 10px;\n  overflow: scroll;\n  height: calc(100vh - 50px);\n  background-color: #fff;\n}\n\n::v-deep .el-upload-list--picture-card .el-upload-list__item {\n  // width: 113px;\n  // height: 113px;\n  // line-height: 113px;\n  // overflow: inherit;\n  margin: 1% 1% 0px 1%;\n  width: 31.3%;\n  height: 31.3%;\n  padding-top: 31.3%;\n  aspect-ratio: 1 / 1;\n}\n::v-deep .el-upload-list--picture-card .el-upload-list__item > div {\n  // position: relative;\n  width: 100%;\n  height: 100%;\n}\n::v-deep .el-upload--picture-card {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  height: 146px;\n  justify-content: center;\n  align-items: center;\n  background: #f9f9f9;\n}\n::v-deep .el-upload-list--picture-card .el-upload-list__item img {\n  width: 100%;\n  height: 100%;\n  border-radius: 6px;\n  object-fit: cover;\n  position: absolute;\n  left: 0;\n  top: 0;\n}\n.btndel {\n  position: absolute;\n  z-index: 1;\n  font-size: 18px;\n  right: -1px;\n  top: -1px;\n  color: #282828;\n  opacity: 0.5;\n}\n::v-deep .el-upload--picture-card:hover,\n.el-upload:focus {\n  border-color: #c0ccda;\n}\n.img-box {\n  display: flex;\n  padding-left: 100px;\n  flex-wrap: wrap;\n}\n.none-card ::v-deep .el-upload--picture-card {\n  display: none !important;\n}\n.footer {\n  padding: 0 10px 0 15px;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  box-sizing: border-box;\n  background-color: rgba(255, 255, 255, 0.85);\n  backdrop-filter: blur(10px);\n  z-index: 277;\n  border-top: 1px solid #f0f0f0;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  .btn {\n    border: 1px solid #cccccc;\n    width: 88px;\n    height: 30px;\n    border-radius: 15px;\n    color: #000;\n    font-size: 14px;\n    font-family: PingFang SC-Regular, PingFang SC;\n    font-weight: 400;\n    color: #666666;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .upload {\n    background-color: #e93323;\n    color: #fff;\n    margin-left: 10px;\n  }\n  .upload.no-pic {\n    background: #e93323;\n    opacity: 0.3;\n  }\n}\n.upload-card {\n  display: flex;\n  flex-direction: column;\n  line-height: 16px;\n  .el-icon-plus {\n    font-size: 28px;\n    font-weight: bold;\n    color: #bbbbbb;\n  }\n  .text {\n    font-size: 13px;\n    font-weight: 400;\n    color: #999999;\n    margin-top: 18px;\n  }\n}\n.upload-success {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  height: 80vh;\n  .success {\n    width: 50px;\n    height: 50px;\n    background: #4bbc12;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 20px;\n    .image {\n      width: 60%;\n    }\n  }\n  .text {\n    font-size: 16px;\n    font-family: PingFang SC-Medium, PingFang SC;\n    font-weight: 500;\n    color: #282828;\n    margin-bottom: 40px;\n  }\n  .again {\n    width: 150px;\n    height: 43px;\n    border-radius: 21px;\n    text-align: center;\n    line-height: 41px;\n    font-size: 15px;\n    font-weight: 400;\n    color: #333333;\n    border: 1px solid #cccccc;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}