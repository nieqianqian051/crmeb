"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _utils=require("../../tools/utils"),_xeUtils=_interopRequireDefault(require("xe-utils")),_conf=_interopRequireDefault(require("../../v-x-e-table/src/conf")),_size=_interopRequireDefault(require("../../mixins/size"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _defineProperty(e,t,i){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"==_typeof(e)?e:e+""}function _toPrimitive(e,t){if("object"!=_typeof(e)||!e)return e;var i=e[Symbol.toPrimitive];if(void 0===i)return("string"===t?String:Number)(e);i=i.call(e,t||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}var _default2=exports.default={name:"VxeCheckbox",mixins:[_size.default],props:{value:[String,Number,Boolean],label:[String,Number],indeterminate:Boolean,title:[String,Number],content:[String,Number],checkedValue:{type:[String,Number,Boolean],default:!0},uncheckedValue:{type:[String,Number,Boolean],default:!1},disabled:Boolean,size:{type:String,default:function(){return _conf.default.checkbox.size||_conf.default.size}}},inject:{$xecheckboxgroup:{default:null},$xeform:{default:null},$xeformiteminfo:{default:null}},computed:{isGroup:function(){return this.$xecheckboxgroup},isMaximize:function(){return this.isGroup&&this.$xecheckboxgroup.props.isMaximize},isDisabled:function(){var e,t;return!!this.disabled||!!this.isGroup&&(e=(t=this.$xecheckboxgroup).disabled,t=t.isMaximize,e||t&&!this.isChecked)},isChecked:function(){return this.isGroup?_xeUtils.default.includes(this.$xecheckboxgroup.value,this.label):this.value===this.checkedValue}},render:function(e){var t=this.$scopedSlots,i=this.isDisabled,r=this.title,o=this.vSize,n=this.indeterminate,u=this.content,c=this.isChecked,s={};return r&&(s.title=r),e("label",{class:["vxe-checkbox",_defineProperty(_defineProperty(_defineProperty(_defineProperty({},"size--".concat(o),o),"is--indeterminate",n),"is--disabled",i),"is--checked",c)],attrs:s},[e("input",{class:"vxe-checkbox--input",attrs:{type:"checkbox",disabled:i},domProps:{checked:c},on:{change:this.changeEvent}}),e("span",{class:["vxe-checkbox--icon",n?"vxe-icon-checkbox-indeterminate":c?"vxe-icon-checkbox-checked-fill":"vxe-icon-checkbox-unchecked"]}),e("span",{class:"vxe-checkbox--label"},t.default?t.default.call(this,{}):[(0,_utils.getFuncText)(u)])])},methods:{changeEvent:function(e){var t=this.$xecheckboxgroup,i=this.isGroup,r=this.isDisabled,o=this.label,n=this.checkedValue,u=this.uncheckedValue;r||(n={checked:r=e.target.checked,value:r=r?n:u,label:o,$event:e},i?t.handleChecked(n,e):(this.$emit("input",r),this.$emit("change",n),this.$xeform&&this.$xeformiteminfo&&this.$xeform.triggerItemEvent(e,this.$xeformiteminfo.itemConfig.field,r)))}}};