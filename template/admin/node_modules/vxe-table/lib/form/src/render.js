"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderTitle = renderTitle;
var _conf = _interopRequireDefault(require("../../v-x-e-table/src/conf"));
var _vXETable = _interopRequireDefault(require("../../v-x-e-table"));
var _utils = require("../../tools/utils");
var _vn = require("../../tools/vn");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function renderPrefixIcon(h, titlePrefix) {
  return h('span', {
    class: 'vxe-form--item-title-prefix'
  }, [h('i', {
    class: titlePrefix.icon || _conf.default.icon.FORM_PREFIX
  })]);
}
function renderSuffixIcon(h, titleSuffix) {
  return h('span', {
    class: 'vxe-form--item-title-suffix'
  }, [h('i', {
    class: titleSuffix.icon || _conf.default.icon.FORM_SUFFIX
  })]);
}
function renderTitle(h, _vm, item) {
  var data = _vm.data,
    readonly = _vm.readonly,
    disabled = _vm.disabled,
    tooltipOpts = _vm.tooltipOpts;
  var slots = item.slots,
    field = item.field,
    itemRender = item.itemRender,
    titlePrefix = item.titlePrefix,
    titleSuffix = item.titleSuffix;
  var compConf = (0, _utils.isEnableConf)(itemRender) ? _vXETable.default.renderer.get(itemRender.name) : null;
  var params = {
    data: data,
    readonly: readonly,
    disabled: disabled,
    field: field,
    property: field,
    item: item,
    $form: _vm,
    $grid: _vm.xegrid
  };
  var contVNs = [];
  var titVNs = [];
  if (titlePrefix) {
    titVNs.push(titlePrefix.content || titlePrefix.message ? h('vxe-tooltip', {
      props: _objectSpread(_objectSpread(_objectSpread({}, tooltipOpts), titlePrefix), {}, {
        content: (0, _utils.getFuncText)(titlePrefix.content || titlePrefix.message)
      })
    }, [renderPrefixIcon(h, titlePrefix)]) : renderPrefixIcon(h, titlePrefix));
  }
  var rfiTitle = compConf ? compConf.renderFormItemTitle || compConf.renderItemTitle : null;
  titVNs.push(h('span', {
    class: 'vxe-form--item-title-label'
  }, rfiTitle ? (0, _vn.getSlotVNs)(rfiTitle(itemRender, params)) : slots && slots.title ? _vm.callSlot(slots.title, params, h) : (0, _utils.getFuncText)(item.title)));
  contVNs.push(h('div', {
    class: 'vxe-form--item-title-content'
  }, titVNs));
  var fixVNs = [];
  if (titleSuffix) {
    fixVNs.push(titleSuffix.content || titleSuffix.message ? h('vxe-tooltip', {
      props: _objectSpread(_objectSpread(_objectSpread({}, tooltipOpts), titlePrefix), {}, {
        content: (0, _utils.getFuncText)(titleSuffix.content || titleSuffix.message)
      })
    }, [renderSuffixIcon(h, titleSuffix)]) : renderSuffixIcon(h, titleSuffix));
  }
  contVNs.push(h('div', {
    class: 'vxe-form--item-title-postfix'
  }, fixVNs));
  return contVNs;
}